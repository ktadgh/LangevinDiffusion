<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2106" onload="init(evt)" viewBox="0 0 1200 2106" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2106" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --output profile.svg --native python profile_test.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="2095.00"> </text><svg id="frames" x="10" width="1180" total_samples="558"><g><title>&lt;module&gt; (torch/__init__.py:1309) (1 samples, 0.18%)</title><rect x="2.3297%" y="180" width="0.1792%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="1"/><text x="2.5797%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.3297%" y="196" width="0.1792%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="1"/><text x="2.5797%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.3297%" y="212" width="0.1792%" height="15" fill="rgb(221,193,54)" fg:x="13" fg:w="1"/><text x="2.5797%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.3297%" y="228" width="0.1792%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="1"/><text x="2.5797%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.3297%" y="244" width="0.1792%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="1"/><text x="2.5797%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.3297%" y="260" width="0.1792%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="1"/><text x="2.5797%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/serialization.py:8) (1 samples, 0.18%)</title><rect x="2.3297%" y="276" width="0.1792%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="1"/><text x="2.5797%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.3297%" y="292" width="0.1792%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="1"/><text x="2.5797%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.3297%" y="308" width="0.1792%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="1"/><text x="2.5797%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.3297%" y="324" width="0.1792%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="1"/><text x="2.5797%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.3297%" y="340" width="0.1792%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="1"/><text x="2.5797%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.3297%" y="356" width="0.1792%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="1"/><text x="2.5797%" y="366.50"></text></g><g><title>&lt;module&gt; (tarfile.py:708) (1 samples, 0.18%)</title><rect x="2.3297%" y="372" width="0.1792%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="1"/><text x="2.5797%" y="382.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1343) (1 samples, 0.18%)</title><rect x="2.5090%" y="180" width="0.1792%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="1"/><text x="2.7590%" y="190.50"></text></g><g><title>THPModule_initExtension (libtorch_python.so) (1 samples, 0.18%)</title><rect x="2.5090%" y="196" width="0.1792%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="1"/><text x="2.7590%" y="206.50"></text></g><g><title>torch::tensors::initialize_python_bindings (libtorch_python.so) (1 samples, 0.18%)</title><rect x="2.5090%" y="212" width="0.1792%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="1"/><text x="2.7590%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.5090%" y="228" width="0.1792%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="1"/><text x="2.7590%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.5090%" y="244" width="0.1792%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="1"/><text x="2.7590%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.5090%" y="260" width="0.1792%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="1"/><text x="2.7590%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.5090%" y="276" width="0.1792%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="1"/><text x="2.7590%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.5090%" y="292" width="0.1792%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="1"/><text x="2.7590%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/cuda/__init__.py:1275) (1 samples, 0.18%)</title><rect x="2.5090%" y="308" width="0.1792%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="1"/><text x="2.7590%" y="318.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="2.5090%" y="324" width="0.1792%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="2.7590%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.5090%" y="340" width="0.1792%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="2.7590%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.5090%" y="356" width="0.1792%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="2.7590%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.5090%" y="372" width="0.1792%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="2.7590%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.5090%" y="388" width="0.1792%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="2.7590%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.5090%" y="404" width="0.1792%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="2.7590%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.5090%" y="420" width="0.1792%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="2.7590%" y="430.50"></text></g><g><title>&lt;module&gt; (torch/cuda/amp/__init__.py:1) (1 samples, 0.18%)</title><rect x="2.5090%" y="436" width="0.1792%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="2.7590%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.5090%" y="452" width="0.1792%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="1"/><text x="2.7590%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1002) (1 samples, 0.18%)</title><rect x="2.5090%" y="468" width="0.1792%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="2.7590%" y="478.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:945) (1 samples, 0.18%)</title><rect x="2.5090%" y="484" width="0.1792%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="2.7590%" y="494.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1439) (1 samples, 0.18%)</title><rect x="2.5090%" y="500" width="0.1792%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="2.7590%" y="510.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1411) (1 samples, 0.18%)</title><rect x="2.5090%" y="516" width="0.1792%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="2.7590%" y="526.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1548) (1 samples, 0.18%)</title><rect x="2.5090%" y="532" width="0.1792%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="2.7590%" y="542.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1591) (1 samples, 0.18%)</title><rect x="2.5090%" y="548" width="0.1792%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="2.7590%" y="558.50"></text></g><g><title>readdir64 (libc.so.6) (1 samples, 0.18%)</title><rect x="2.5090%" y="564" width="0.1792%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="2.7590%" y="574.50"></text></g><g><title>getdents64 (libc.so.6) (1 samples, 0.18%)</title><rect x="2.5090%" y="580" width="0.1792%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="1"/><text x="2.7590%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.6882%" y="1060" width="0.1792%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (1 samples, 0.18%)</title><rect x="2.6882%" y="1076" width="0.1792%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1086.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:577) (1 samples, 0.18%)</title><rect x="2.6882%" y="1092" width="0.1792%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1102.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:556) (1 samples, 0.18%)</title><rect x="2.6882%" y="1108" width="0.1792%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1118.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:397) (1 samples, 0.18%)</title><rect x="2.6882%" y="1124" width="0.1792%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1134.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:513) (1 samples, 0.18%)</title><rect x="2.6882%" y="1140" width="0.1792%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1150.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:448) (1 samples, 0.18%)</title><rect x="2.6882%" y="1156" width="0.1792%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1166.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:128) (1 samples, 0.18%)</title><rect x="2.6882%" y="1172" width="0.1792%" height="15" fill="rgb(218,138,4)" fg:x="15" fg:w="1"/><text x="2.9382%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="2.6882%" y="868" width="0.3584%" height="15" fill="rgb(250,191,14)" fg:x="15" fg:w="2"/><text x="2.9382%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="2.6882%" y="884" width="0.3584%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="2"/><text x="2.9382%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="2.6882%" y="900" width="0.3584%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="2"/><text x="2.9382%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="2.6882%" y="916" width="0.3584%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="2"/><text x="2.9382%" y="926.50"></text></g><g><title>&lt;module&gt; (torch/distributed/rpc/__init__.py:74) (2 samples, 0.36%)</title><rect x="2.6882%" y="932" width="0.3584%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="2"/><text x="2.9382%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="2.6882%" y="948" width="0.3584%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="2"/><text x="2.9382%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="2.6882%" y="964" width="0.3584%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="2"/><text x="2.9382%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="2.6882%" y="980" width="0.3584%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="2"/><text x="2.9382%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="2.6882%" y="996" width="0.3584%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="2"/><text x="2.9382%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="2.6882%" y="1012" width="0.3584%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="2"/><text x="2.9382%" y="1022.50"></text></g><g><title>&lt;module&gt; (torch/distributed/rpc/server_process_global_profiler.py:6) (2 samples, 0.36%)</title><rect x="2.6882%" y="1028" width="0.3584%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="2"/><text x="2.9382%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="2.6882%" y="1044" width="0.3584%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="2"/><text x="2.9382%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="2.8674%" y="1060" width="0.1792%" height="15" fill="rgb(227,1,9)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.8674%" y="1076" width="0.1792%" height="15" fill="rgb(248,47,43)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.8674%" y="1092" width="0.1792%" height="15" fill="rgb(221,10,30)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.8674%" y="1108" width="0.1792%" height="15" fill="rgb(210,229,1)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.8674%" y="1124" width="0.1792%" height="15" fill="rgb(222,148,37)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.8674%" y="1140" width="0.1792%" height="15" fill="rgb(234,67,33)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.8674%" y="1156" width="0.1792%" height="15" fill="rgb(247,98,35)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1166.50"></text></g><g><title>&lt;module&gt; (torch/autograd/__init__.py:29) (1 samples, 0.18%)</title><rect x="2.8674%" y="1172" width="0.1792%" height="15" fill="rgb(247,138,52)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="2.8674%" y="1188" width="0.1792%" height="15" fill="rgb(213,79,30)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="2.8674%" y="1204" width="0.1792%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="2.8674%" y="1220" width="0.1792%" height="15" fill="rgb(230,62,27)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="2.8674%" y="1236" width="0.1792%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="2.8674%" y="1252" width="0.1792%" height="15" fill="rgb(244,35,45)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1262.50"></text></g><g><title>&lt;module&gt; (torch/autograd/gradcheck.py:705) (1 samples, 0.18%)</title><rect x="2.8674%" y="1268" width="0.1792%" height="15" fill="rgb(251,115,12)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1278.50"></text></g><g><title>inner (typing.py:309) (1 samples, 0.18%)</title><rect x="2.8674%" y="1284" width="0.1792%" height="15" fill="rgb(240,54,50)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1294.50"></text></g><g><title>__getitem__ (typing.py:1234) (1 samples, 0.18%)</title><rect x="2.8674%" y="1300" width="0.1792%" height="15" fill="rgb(233,84,52)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1310.50"></text></g><g><title>&lt;genexpr&gt; (typing.py:1234) (1 samples, 0.18%)</title><rect x="2.8674%" y="1316" width="0.1792%" height="15" fill="rgb(207,117,47)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1326.50"></text></g><g><title>_type_check (typing.py:164) (1 samples, 0.18%)</title><rect x="2.8674%" y="1332" width="0.1792%" height="15" fill="rgb(249,43,39)" fg:x="16" fg:w="1"/><text x="3.1174%" y="1342.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/linear.py:7) (3 samples, 0.54%)</title><rect x="2.6882%" y="612" width="0.5376%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="3"/><text x="2.9382%" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (3 samples, 0.54%)</title><rect x="2.6882%" y="628" width="0.5376%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="3"/><text x="2.9382%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="2.6882%" y="644" width="0.5376%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="3"/><text x="2.9382%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="2.6882%" y="660" width="0.5376%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="3"/><text x="2.9382%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="2.6882%" y="676" width="0.5376%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="3"/><text x="2.9382%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="2.6882%" y="692" width="0.5376%" height="15" fill="rgb(211,81,21)" fg:x="15" fg:w="3"/><text x="2.9382%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="2.6882%" y="708" width="0.5376%" height="15" fill="rgb(208,190,38)" fg:x="15" fg:w="3"/><text x="2.9382%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="2.6882%" y="724" width="0.5376%" height="15" fill="rgb(235,213,38)" fg:x="15" fg:w="3"/><text x="2.9382%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/nn/functional.py:20) (3 samples, 0.54%)</title><rect x="2.6882%" y="740" width="0.5376%" height="15" fill="rgb(237,122,38)" fg:x="15" fg:w="3"/><text x="2.9382%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="2.6882%" y="756" width="0.5376%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="3"/><text x="2.9382%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="2.6882%" y="772" width="0.5376%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="3"/><text x="2.9382%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="2.6882%" y="788" width="0.5376%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="3"/><text x="2.9382%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="2.6882%" y="804" width="0.5376%" height="15" fill="rgb(235,124,12)" fg:x="15" fg:w="3"/><text x="2.9382%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="2.6882%" y="820" width="0.5376%" height="15" fill="rgb(224,169,11)" fg:x="15" fg:w="3"/><text x="2.9382%" y="830.50"></text></g><g><title>&lt;module&gt; (torch/_jit_internal.py:41) (3 samples, 0.54%)</title><rect x="2.6882%" y="836" width="0.5376%" height="15" fill="rgb(250,166,2)" fg:x="15" fg:w="3"/><text x="2.9382%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="2.6882%" y="852" width="0.5376%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="3"/><text x="2.9382%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="3.0466%" y="868" width="0.1792%" height="15" fill="rgb(230,116,27)" fg:x="17" fg:w="1"/><text x="3.2966%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.0466%" y="884" width="0.1792%" height="15" fill="rgb(228,99,48)" fg:x="17" fg:w="1"/><text x="3.2966%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.0466%" y="900" width="0.1792%" height="15" fill="rgb(253,11,6)" fg:x="17" fg:w="1"/><text x="3.2966%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.0466%" y="916" width="0.1792%" height="15" fill="rgb(247,143,39)" fg:x="17" fg:w="1"/><text x="3.2966%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.0466%" y="932" width="0.1792%" height="15" fill="rgb(236,97,10)" fg:x="17" fg:w="1"/><text x="3.2966%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.0466%" y="948" width="0.1792%" height="15" fill="rgb(233,208,19)" fg:x="17" fg:w="1"/><text x="3.2966%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.0466%" y="964" width="0.1792%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="1"/><text x="3.2966%" y="974.50"></text></g><g><title>&lt;module&gt; (torch/distributed/__init__.py:58) (1 samples, 0.18%)</title><rect x="3.0466%" y="980" width="0.1792%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="1"/><text x="3.2966%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.0466%" y="996" width="0.1792%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.0466%" y="1012" width="0.1792%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.0466%" y="1028" width="0.1792%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.0466%" y="1044" width="0.1792%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.0466%" y="1060" width="0.1792%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1070.50"></text></g><g><title>&lt;module&gt; (torch/distributed/distributed_c10d.py:3706) (1 samples, 0.18%)</title><rect x="3.0466%" y="1076" width="0.1792%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="1"/><text x="3.2966%" y="1086.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/__init__.py:2) (4 samples, 0.72%)</title><rect x="2.6882%" y="516" width="0.7168%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="4"/><text x="2.9382%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="2.6882%" y="532" width="0.7168%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="4"/><text x="2.9382%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="2.6882%" y="548" width="0.7168%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="4"/><text x="2.9382%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="2.6882%" y="564" width="0.7168%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="4"/><text x="2.9382%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="2.6882%" y="580" width="0.7168%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="4"/><text x="2.9382%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="2.6882%" y="596" width="0.7168%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="4"/><text x="2.9382%" y="606.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/linear.py:8) (1 samples, 0.18%)</title><rect x="3.2258%" y="612" width="0.1792%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="1"/><text x="3.4758%" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="3.2258%" y="628" width="0.1792%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="1"/><text x="3.4758%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.2258%" y="644" width="0.1792%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="1"/><text x="3.4758%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.2258%" y="660" width="0.1792%" height="15" fill="rgb(224,114,35)" fg:x="18" fg:w="1"/><text x="3.4758%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.2258%" y="676" width="0.1792%" height="15" fill="rgb(245,159,27)" fg:x="18" fg:w="1"/><text x="3.4758%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.2258%" y="692" width="0.1792%" height="15" fill="rgb(245,172,44)" fg:x="18" fg:w="1"/><text x="3.4758%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.2258%" y="708" width="0.1792%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="1"/><text x="3.4758%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.2258%" y="724" width="0.1792%" height="15" fill="rgb(205,117,38)" fg:x="18" fg:w="1"/><text x="3.4758%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/nn/init.py:163) (1 samples, 0.18%)</title><rect x="3.2258%" y="740" width="0.1792%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="1"/><text x="3.4758%" y="750.50"></text></g><g><title>inner (typing.py:309) (1 samples, 0.18%)</title><rect x="3.2258%" y="756" width="0.1792%" height="15" fill="rgb(244,70,9)" fg:x="18" fg:w="1"/><text x="3.4758%" y="766.50"></text></g><g><title>__getitem__ (typing.py:403) (1 samples, 0.18%)</title><rect x="3.2258%" y="772" width="0.1792%" height="15" fill="rgb(217,125,39)" fg:x="18" fg:w="1"/><text x="3.4758%" y="782.50"></text></g><g><title>Optional (typing.py:530) (1 samples, 0.18%)</title><rect x="3.2258%" y="788" width="0.1792%" height="15" fill="rgb(235,36,10)" fg:x="18" fg:w="1"/><text x="3.4758%" y="798.50"></text></g><g><title>inner (typing.py:309) (1 samples, 0.18%)</title><rect x="3.2258%" y="804" width="0.1792%" height="15" fill="rgb(251,123,47)" fg:x="18" fg:w="1"/><text x="3.4758%" y="814.50"></text></g><g><title>__getitem__ (typing.py:403) (1 samples, 0.18%)</title><rect x="3.2258%" y="820" width="0.1792%" height="15" fill="rgb(221,13,13)" fg:x="18" fg:w="1"/><text x="3.4758%" y="830.50"></text></g><g><title>Union (typing.py:520) (1 samples, 0.18%)</title><rect x="3.2258%" y="836" width="0.1792%" height="15" fill="rgb(238,131,9)" fg:x="18" fg:w="1"/><text x="3.4758%" y="846.50"></text></g><g><title>__init__ (typing.py:1026) (1 samples, 0.18%)</title><rect x="3.2258%" y="852" width="0.1792%" height="15" fill="rgb(211,50,8)" fg:x="18" fg:w="1"/><text x="3.4758%" y="862.50"></text></g><g><title>__setattr__ (typing.py:987) (1 samples, 0.18%)</title><rect x="3.2258%" y="868" width="0.1792%" height="15" fill="rgb(245,182,24)" fg:x="18" fg:w="1"/><text x="3.4758%" y="878.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1413) (5 samples, 0.90%)</title><rect x="2.6882%" y="180" width="0.8961%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="5"/><text x="2.9382%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.90%)</title><rect x="2.6882%" y="196" width="0.8961%" height="15" fill="rgb(246,228,12)" fg:x="15" fg:w="5"/><text x="2.9382%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.90%)</title><rect x="2.6882%" y="212" width="0.8961%" height="15" fill="rgb(213,55,15)" fg:x="15" fg:w="5"/><text x="2.9382%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.90%)</title><rect x="2.6882%" y="228" width="0.8961%" height="15" fill="rgb(209,9,3)" fg:x="15" fg:w="5"/><text x="2.9382%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.90%)</title><rect x="2.6882%" y="244" width="0.8961%" height="15" fill="rgb(230,59,30)" fg:x="15" fg:w="5"/><text x="2.9382%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.90%)</title><rect x="2.6882%" y="260" width="0.8961%" height="15" fill="rgb(209,121,21)" fg:x="15" fg:w="5"/><text x="2.9382%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/functional.py:7) (5 samples, 0.90%)</title><rect x="2.6882%" y="276" width="0.8961%" height="15" fill="rgb(220,109,13)" fg:x="15" fg:w="5"/><text x="2.9382%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.90%)</title><rect x="2.6882%" y="292" width="0.8961%" height="15" fill="rgb(232,18,1)" fg:x="15" fg:w="5"/><text x="2.9382%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (5 samples, 0.90%)</title><rect x="2.6882%" y="308" width="0.8961%" height="15" fill="rgb(215,41,42)" fg:x="15" fg:w="5"/><text x="2.9382%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.90%)</title><rect x="2.6882%" y="324" width="0.8961%" height="15" fill="rgb(224,123,36)" fg:x="15" fg:w="5"/><text x="2.9382%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.90%)</title><rect x="2.6882%" y="340" width="0.8961%" height="15" fill="rgb(240,125,3)" fg:x="15" fg:w="5"/><text x="2.9382%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.90%)</title><rect x="2.6882%" y="356" width="0.8961%" height="15" fill="rgb(205,98,50)" fg:x="15" fg:w="5"/><text x="2.9382%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.90%)</title><rect x="2.6882%" y="372" width="0.8961%" height="15" fill="rgb(205,185,37)" fg:x="15" fg:w="5"/><text x="2.9382%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.90%)</title><rect x="2.6882%" y="388" width="0.8961%" height="15" fill="rgb(238,207,15)" fg:x="15" fg:w="5"/><text x="2.9382%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.90%)</title><rect x="2.6882%" y="404" width="0.8961%" height="15" fill="rgb(213,199,42)" fg:x="15" fg:w="5"/><text x="2.9382%" y="414.50"></text></g><g><title>&lt;module&gt; (torch/nn/__init__.py:1) (5 samples, 0.90%)</title><rect x="2.6882%" y="420" width="0.8961%" height="15" fill="rgb(235,201,11)" fg:x="15" fg:w="5"/><text x="2.9382%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.90%)</title><rect x="2.6882%" y="436" width="0.8961%" height="15" fill="rgb(207,46,11)" fg:x="15" fg:w="5"/><text x="2.9382%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.90%)</title><rect x="2.6882%" y="452" width="0.8961%" height="15" fill="rgb(241,35,35)" fg:x="15" fg:w="5"/><text x="2.9382%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.90%)</title><rect x="2.6882%" y="468" width="0.8961%" height="15" fill="rgb(243,32,47)" fg:x="15" fg:w="5"/><text x="2.9382%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.90%)</title><rect x="2.6882%" y="484" width="0.8961%" height="15" fill="rgb(247,202,23)" fg:x="15" fg:w="5"/><text x="2.9382%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.90%)</title><rect x="2.6882%" y="500" width="0.8961%" height="15" fill="rgb(219,102,11)" fg:x="15" fg:w="5"/><text x="2.9382%" y="510.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/__init__.py:28) (1 samples, 0.18%)</title><rect x="3.4050%" y="516" width="0.1792%" height="15" fill="rgb(243,110,44)" fg:x="19" fg:w="1"/><text x="3.6550%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.4050%" y="532" width="0.1792%" height="15" fill="rgb(222,74,54)" fg:x="19" fg:w="1"/><text x="3.6550%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.4050%" y="548" width="0.1792%" height="15" fill="rgb(216,99,12)" fg:x="19" fg:w="1"/><text x="3.6550%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.4050%" y="564" width="0.1792%" height="15" fill="rgb(226,22,26)" fg:x="19" fg:w="1"/><text x="3.6550%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.4050%" y="580" width="0.1792%" height="15" fill="rgb(217,163,10)" fg:x="19" fg:w="1"/><text x="3.6550%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.4050%" y="596" width="0.1792%" height="15" fill="rgb(213,25,53)" fg:x="19" fg:w="1"/><text x="3.6550%" y="606.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/rnn.py:11) (1 samples, 0.18%)</title><rect x="3.4050%" y="612" width="0.1792%" height="15" fill="rgb(252,105,26)" fg:x="19" fg:w="1"/><text x="3.6550%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.4050%" y="628" width="0.1792%" height="15" fill="rgb(220,39,43)" fg:x="19" fg:w="1"/><text x="3.6550%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="3.4050%" y="644" width="0.1792%" height="15" fill="rgb(229,68,48)" fg:x="19" fg:w="1"/><text x="3.6550%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.4050%" y="660" width="0.1792%" height="15" fill="rgb(252,8,32)" fg:x="19" fg:w="1"/><text x="3.6550%" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.4050%" y="676" width="0.1792%" height="15" fill="rgb(223,20,43)" fg:x="19" fg:w="1"/><text x="3.6550%" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.4050%" y="692" width="0.1792%" height="15" fill="rgb(229,81,49)" fg:x="19" fg:w="1"/><text x="3.6550%" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.4050%" y="708" width="0.1792%" height="15" fill="rgb(236,28,36)" fg:x="19" fg:w="1"/><text x="3.6550%" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.4050%" y="724" width="0.1792%" height="15" fill="rgb(249,185,26)" fg:x="19" fg:w="1"/><text x="3.6550%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.4050%" y="740" width="0.1792%" height="15" fill="rgb(249,174,33)" fg:x="19" fg:w="1"/><text x="3.6550%" y="750.50"></text></g><g><title>&lt;module&gt; (torch/nn/utils/__init__.py:5) (1 samples, 0.18%)</title><rect x="3.4050%" y="756" width="0.1792%" height="15" fill="rgb(233,201,37)" fg:x="19" fg:w="1"/><text x="3.6550%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.4050%" y="772" width="0.1792%" height="15" fill="rgb(221,78,26)" fg:x="19" fg:w="1"/><text x="3.6550%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1002) (1 samples, 0.18%)</title><rect x="3.4050%" y="788" width="0.1792%" height="15" fill="rgb(250,127,30)" fg:x="19" fg:w="1"/><text x="3.6550%" y="798.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:945) (1 samples, 0.18%)</title><rect x="3.4050%" y="804" width="0.1792%" height="15" fill="rgb(230,49,44)" fg:x="19" fg:w="1"/><text x="3.6550%" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1439) (1 samples, 0.18%)</title><rect x="3.4050%" y="820" width="0.1792%" height="15" fill="rgb(229,67,23)" fg:x="19" fg:w="1"/><text x="3.6550%" y="830.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1405) (1 samples, 0.18%)</title><rect x="3.4050%" y="836" width="0.1792%" height="15" fill="rgb(249,83,47)" fg:x="19" fg:w="1"/><text x="3.6550%" y="846.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1431) (1 samples, 0.18%)</title><rect x="3.5842%" y="180" width="0.1792%" height="15" fill="rgb(215,43,3)" fg:x="20" fg:w="1"/><text x="3.8342%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="3.5842%" y="196" width="0.1792%" height="15" fill="rgb(238,154,13)" fg:x="20" fg:w="1"/><text x="3.8342%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.5842%" y="212" width="0.1792%" height="15" fill="rgb(219,56,2)" fg:x="20" fg:w="1"/><text x="3.8342%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.5842%" y="228" width="0.1792%" height="15" fill="rgb(233,0,4)" fg:x="20" fg:w="1"/><text x="3.8342%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.5842%" y="244" width="0.1792%" height="15" fill="rgb(235,30,7)" fg:x="20" fg:w="1"/><text x="3.8342%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.5842%" y="260" width="0.1792%" height="15" fill="rgb(250,79,13)" fg:x="20" fg:w="1"/><text x="3.8342%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.5842%" y="276" width="0.1792%" height="15" fill="rgb(211,146,34)" fg:x="20" fg:w="1"/><text x="3.8342%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.5842%" y="292" width="0.1792%" height="15" fill="rgb(228,22,38)" fg:x="20" fg:w="1"/><text x="3.8342%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/optim/__init__.py:23) (1 samples, 0.18%)</title><rect x="3.5842%" y="308" width="0.1792%" height="15" fill="rgb(235,168,5)" fg:x="20" fg:w="1"/><text x="3.8342%" y="318.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="3.5842%" y="324" width="0.1792%" height="15" fill="rgb(221,155,16)" fg:x="20" fg:w="1"/><text x="3.8342%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.5842%" y="340" width="0.1792%" height="15" fill="rgb(215,215,53)" fg:x="20" fg:w="1"/><text x="3.8342%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.5842%" y="356" width="0.1792%" height="15" fill="rgb(223,4,10)" fg:x="20" fg:w="1"/><text x="3.8342%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.5842%" y="372" width="0.1792%" height="15" fill="rgb(234,103,6)" fg:x="20" fg:w="1"/><text x="3.8342%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.5842%" y="388" width="0.1792%" height="15" fill="rgb(227,97,0)" fg:x="20" fg:w="1"/><text x="3.8342%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.5842%" y="404" width="0.1792%" height="15" fill="rgb(234,150,53)" fg:x="20" fg:w="1"/><text x="3.8342%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.5842%" y="420" width="0.1792%" height="15" fill="rgb(228,201,54)" fg:x="20" fg:w="1"/><text x="3.8342%" y="430.50"></text></g><g><title>&lt;module&gt; (torch/optim/swa_utils.py:226) (1 samples, 0.18%)</title><rect x="3.5842%" y="436" width="0.1792%" height="15" fill="rgb(222,22,37)" fg:x="20" fg:w="1"/><text x="3.8342%" y="446.50"></text></g><g><title>__call__ (torch/utils/_contextlib.py:133) (1 samples, 0.18%)</title><rect x="3.5842%" y="452" width="0.1792%" height="15" fill="rgb(237,53,32)" fg:x="20" fg:w="1"/><text x="3.8342%" y="462.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1436) (1 samples, 0.18%)</title><rect x="3.7634%" y="180" width="0.1792%" height="15" fill="rgb(233,25,53)" fg:x="21" fg:w="1"/><text x="4.0134%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="3.7634%" y="196" width="0.1792%" height="15" fill="rgb(210,40,34)" fg:x="21" fg:w="1"/><text x="4.0134%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="212" width="0.1792%" height="15" fill="rgb(241,220,44)" fg:x="21" fg:w="1"/><text x="4.0134%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="228" width="0.1792%" height="15" fill="rgb(235,28,35)" fg:x="21" fg:w="1"/><text x="4.0134%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.7634%" y="244" width="0.1792%" height="15" fill="rgb(210,56,17)" fg:x="21" fg:w="1"/><text x="4.0134%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.7634%" y="260" width="0.1792%" height="15" fill="rgb(224,130,29)" fg:x="21" fg:w="1"/><text x="4.0134%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.7634%" y="276" width="0.1792%" height="15" fill="rgb(235,212,8)" fg:x="21" fg:w="1"/><text x="4.0134%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="292" width="0.1792%" height="15" fill="rgb(223,33,50)" fg:x="21" fg:w="1"/><text x="4.0134%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/jit/__init__.py:23) (1 samples, 0.18%)</title><rect x="3.7634%" y="308" width="0.1792%" height="15" fill="rgb(219,149,13)" fg:x="21" fg:w="1"/><text x="4.0134%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="324" width="0.1792%" height="15" fill="rgb(250,156,29)" fg:x="21" fg:w="1"/><text x="4.0134%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.7634%" y="340" width="0.1792%" height="15" fill="rgb(216,193,19)" fg:x="21" fg:w="1"/><text x="4.0134%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.7634%" y="356" width="0.1792%" height="15" fill="rgb(216,135,14)" fg:x="21" fg:w="1"/><text x="4.0134%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.7634%" y="372" width="0.1792%" height="15" fill="rgb(241,47,5)" fg:x="21" fg:w="1"/><text x="4.0134%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="388" width="0.1792%" height="15" fill="rgb(233,42,35)" fg:x="21" fg:w="1"/><text x="4.0134%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/jit/_async.py:12) (1 samples, 0.18%)</title><rect x="3.7634%" y="404" width="0.1792%" height="15" fill="rgb(231,13,6)" fg:x="21" fg:w="1"/><text x="4.0134%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="420" width="0.1792%" height="15" fill="rgb(207,181,40)" fg:x="21" fg:w="1"/><text x="4.0134%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.7634%" y="436" width="0.1792%" height="15" fill="rgb(254,173,49)" fg:x="21" fg:w="1"/><text x="4.0134%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.7634%" y="452" width="0.1792%" height="15" fill="rgb(221,1,38)" fg:x="21" fg:w="1"/><text x="4.0134%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.7634%" y="468" width="0.1792%" height="15" fill="rgb(206,124,46)" fg:x="21" fg:w="1"/><text x="4.0134%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="484" width="0.1792%" height="15" fill="rgb(249,21,11)" fg:x="21" fg:w="1"/><text x="4.0134%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/jit/_builtins.py:9) (1 samples, 0.18%)</title><rect x="3.7634%" y="500" width="0.1792%" height="15" fill="rgb(222,201,40)" fg:x="21" fg:w="1"/><text x="4.0134%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="516" width="0.1792%" height="15" fill="rgb(235,61,29)" fg:x="21" fg:w="1"/><text x="4.0134%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="3.7634%" y="532" width="0.1792%" height="15" fill="rgb(219,207,3)" fg:x="21" fg:w="1"/><text x="4.0134%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="548" width="0.1792%" height="15" fill="rgb(222,56,46)" fg:x="21" fg:w="1"/><text x="4.0134%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="564" width="0.1792%" height="15" fill="rgb(239,76,54)" fg:x="21" fg:w="1"/><text x="4.0134%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.7634%" y="580" width="0.1792%" height="15" fill="rgb(231,124,27)" fg:x="21" fg:w="1"/><text x="4.0134%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.7634%" y="596" width="0.1792%" height="15" fill="rgb(249,195,6)" fg:x="21" fg:w="1"/><text x="4.0134%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.7634%" y="612" width="0.1792%" height="15" fill="rgb(237,174,47)" fg:x="21" fg:w="1"/><text x="4.0134%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="628" width="0.1792%" height="15" fill="rgb(206,201,31)" fg:x="21" fg:w="1"/><text x="4.0134%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/backends/__init__.py:59) (1 samples, 0.18%)</title><rect x="3.7634%" y="644" width="0.1792%" height="15" fill="rgb(231,57,52)" fg:x="21" fg:w="1"/><text x="4.0134%" y="654.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="3.7634%" y="660" width="0.1792%" height="15" fill="rgb(248,177,22)" fg:x="21" fg:w="1"/><text x="4.0134%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.7634%" y="676" width="0.1792%" height="15" fill="rgb(215,211,37)" fg:x="21" fg:w="1"/><text x="4.0134%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.7634%" y="692" width="0.1792%" height="15" fill="rgb(241,128,51)" fg:x="21" fg:w="1"/><text x="4.0134%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.7634%" y="708" width="0.1792%" height="15" fill="rgb(227,165,31)" fg:x="21" fg:w="1"/><text x="4.0134%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.7634%" y="724" width="0.1792%" height="15" fill="rgb(228,167,24)" fg:x="21" fg:w="1"/><text x="4.0134%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="3.7634%" y="740" width="0.1792%" height="15" fill="rgb(228,143,12)" fg:x="21" fg:w="1"/><text x="4.0134%" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="3.7634%" y="756" width="0.1792%" height="15" fill="rgb(249,149,8)" fg:x="21" fg:w="1"/><text x="4.0134%" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="3.7634%" y="772" width="0.1792%" height="15" fill="rgb(243,35,44)" fg:x="21" fg:w="1"/><text x="4.0134%" y="782.50"></text></g><g><title>&lt;module&gt; (http/client.py:1395) (1 samples, 0.18%)</title><rect x="3.9427%" y="500" width="0.1792%" height="15" fill="rgb(246,89,9)" fg:x="22" fg:w="1"/><text x="4.1927%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.9427%" y="516" width="0.1792%" height="15" fill="rgb(233,213,13)" fg:x="22" fg:w="1"/><text x="4.1927%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.9427%" y="532" width="0.1792%" height="15" fill="rgb(233,141,41)" fg:x="22" fg:w="1"/><text x="4.1927%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.9427%" y="548" width="0.1792%" height="15" fill="rgb(239,167,4)" fg:x="22" fg:w="1"/><text x="4.1927%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="3.9427%" y="564" width="0.1792%" height="15" fill="rgb(209,217,16)" fg:x="22" fg:w="1"/><text x="4.1927%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.9427%" y="580" width="0.1792%" height="15" fill="rgb(219,88,35)" fg:x="22" fg:w="1"/><text x="4.1927%" y="590.50"></text></g><g><title>&lt;module&gt; (ssl.py:99) (1 samples, 0.18%)</title><rect x="3.9427%" y="596" width="0.1792%" height="15" fill="rgb(220,193,23)" fg:x="22" fg:w="1"/><text x="4.1927%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="3.9427%" y="612" width="0.1792%" height="15" fill="rgb(230,90,52)" fg:x="22" fg:w="1"/><text x="4.1927%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="3.9427%" y="628" width="0.1792%" height="15" fill="rgb(252,106,19)" fg:x="22" fg:w="1"/><text x="4.1927%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="3.9427%" y="644" width="0.1792%" height="15" fill="rgb(206,74,20)" fg:x="22" fg:w="1"/><text x="4.1927%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1184) (1 samples, 0.18%)</title><rect x="3.9427%" y="660" width="0.1792%" height="15" fill="rgb(230,138,44)" fg:x="22" fg:w="1"/><text x="4.1927%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="3.9427%" y="676" width="0.1792%" height="15" fill="rgb(235,182,43)" fg:x="22" fg:w="1"/><text x="4.1927%" y="686.50"></text></g><g><title>0x7f34c31e4704 (?) (1 samples, 0.18%)</title><rect x="3.9427%" y="692" width="0.1792%" height="15" fill="rgb(242,16,51)" fg:x="22" fg:w="1"/><text x="4.1927%" y="702.50"></text></g><g><title>0x7f34fefa4c3a (libc.so.6) (1 samples, 0.18%)</title><rect x="3.9427%" y="708" width="0.1792%" height="15" fill="rgb(248,9,4)" fg:x="22" fg:w="1"/><text x="4.1927%" y="718.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1438) (2 samples, 0.36%)</title><rect x="3.9427%" y="180" width="0.3584%" height="15" fill="rgb(210,31,22)" fg:x="22" fg:w="2"/><text x="4.1927%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.36%)</title><rect x="3.9427%" y="196" width="0.3584%" height="15" fill="rgb(239,54,39)" fg:x="22" fg:w="2"/><text x="4.1927%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="3.9427%" y="212" width="0.3584%" height="15" fill="rgb(230,99,41)" fg:x="22" fg:w="2"/><text x="4.1927%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="3.9427%" y="228" width="0.3584%" height="15" fill="rgb(253,106,12)" fg:x="22" fg:w="2"/><text x="4.1927%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="3.9427%" y="244" width="0.3584%" height="15" fill="rgb(213,46,41)" fg:x="22" fg:w="2"/><text x="4.1927%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="3.9427%" y="260" width="0.3584%" height="15" fill="rgb(215,133,35)" fg:x="22" fg:w="2"/><text x="4.1927%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="3.9427%" y="276" width="0.3584%" height="15" fill="rgb(213,28,5)" fg:x="22" fg:w="2"/><text x="4.1927%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="3.9427%" y="292" width="0.3584%" height="15" fill="rgb(215,77,49)" fg:x="22" fg:w="2"/><text x="4.1927%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/hub.py:17) (2 samples, 0.36%)</title><rect x="3.9427%" y="308" width="0.3584%" height="15" fill="rgb(248,100,22)" fg:x="22" fg:w="2"/><text x="4.1927%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="3.9427%" y="324" width="0.3584%" height="15" fill="rgb(208,67,9)" fg:x="22" fg:w="2"/><text x="4.1927%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="3.9427%" y="340" width="0.3584%" height="15" fill="rgb(219,133,21)" fg:x="22" fg:w="2"/><text x="4.1927%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="3.9427%" y="356" width="0.3584%" height="15" fill="rgb(246,46,29)" fg:x="22" fg:w="2"/><text x="4.1927%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="3.9427%" y="372" width="0.3584%" height="15" fill="rgb(246,185,52)" fg:x="22" fg:w="2"/><text x="4.1927%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="3.9427%" y="388" width="0.3584%" height="15" fill="rgb(252,136,11)" fg:x="22" fg:w="2"/><text x="4.1927%" y="398.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (2 samples, 0.36%)</title><rect x="3.9427%" y="404" width="0.3584%" height="15" fill="rgb(219,138,53)" fg:x="22" fg:w="2"/><text x="4.1927%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="3.9427%" y="420" width="0.3584%" height="15" fill="rgb(211,51,23)" fg:x="22" fg:w="2"/><text x="4.1927%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="3.9427%" y="436" width="0.3584%" height="15" fill="rgb(247,221,28)" fg:x="22" fg:w="2"/><text x="4.1927%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="3.9427%" y="452" width="0.3584%" height="15" fill="rgb(251,222,45)" fg:x="22" fg:w="2"/><text x="4.1927%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="3.9427%" y="468" width="0.3584%" height="15" fill="rgb(217,162,53)" fg:x="22" fg:w="2"/><text x="4.1927%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="3.9427%" y="484" width="0.3584%" height="15" fill="rgb(229,93,14)" fg:x="22" fg:w="2"/><text x="4.1927%" y="494.50"></text></g><g><title>&lt;module&gt; (http/client.py:71) (1 samples, 0.18%)</title><rect x="4.1219%" y="500" width="0.1792%" height="15" fill="rgb(209,67,49)" fg:x="23" fg:w="1"/><text x="4.3719%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.1219%" y="516" width="0.1792%" height="15" fill="rgb(213,87,29)" fg:x="23" fg:w="1"/><text x="4.3719%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.1219%" y="532" width="0.1792%" height="15" fill="rgb(205,151,52)" fg:x="23" fg:w="1"/><text x="4.3719%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.1219%" y="548" width="0.1792%" height="15" fill="rgb(253,215,39)" fg:x="23" fg:w="1"/><text x="4.3719%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.1219%" y="564" width="0.1792%" height="15" fill="rgb(221,220,41)" fg:x="23" fg:w="1"/><text x="4.3719%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.1219%" y="580" width="0.1792%" height="15" fill="rgb(218,133,21)" fg:x="23" fg:w="1"/><text x="4.3719%" y="590.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.18%)</title><rect x="4.1219%" y="596" width="0.1792%" height="15" fill="rgb(221,193,43)" fg:x="23" fg:w="1"/><text x="4.3719%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.1219%" y="612" width="0.1792%" height="15" fill="rgb(240,128,52)" fg:x="23" fg:w="1"/><text x="4.3719%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.1219%" y="628" width="0.1792%" height="15" fill="rgb(253,114,12)" fg:x="23" fg:w="1"/><text x="4.3719%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.1219%" y="644" width="0.1792%" height="15" fill="rgb(215,223,47)" fg:x="23" fg:w="1"/><text x="4.3719%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.1219%" y="660" width="0.1792%" height="15" fill="rgb(248,225,23)" fg:x="23" fg:w="1"/><text x="4.3719%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.1219%" y="676" width="0.1792%" height="15" fill="rgb(250,108,0)" fg:x="23" fg:w="1"/><text x="4.3719%" y="686.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.18%)</title><rect x="4.1219%" y="692" width="0.1792%" height="15" fill="rgb(228,208,7)" fg:x="23" fg:w="1"/><text x="4.3719%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.1219%" y="708" width="0.1792%" height="15" fill="rgb(244,45,10)" fg:x="23" fg:w="1"/><text x="4.3719%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.1219%" y="724" width="0.1792%" height="15" fill="rgb(207,125,25)" fg:x="23" fg:w="1"/><text x="4.3719%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.1219%" y="740" width="0.1792%" height="15" fill="rgb(210,195,18)" fg:x="23" fg:w="1"/><text x="4.3719%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.1219%" y="756" width="0.1792%" height="15" fill="rgb(249,80,12)" fg:x="23" fg:w="1"/><text x="4.3719%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.1219%" y="772" width="0.1792%" height="15" fill="rgb(221,65,9)" fg:x="23" fg:w="1"/><text x="4.3719%" y="782.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:7) (1 samples, 0.18%)</title><rect x="4.1219%" y="788" width="0.1792%" height="15" fill="rgb(235,49,36)" fg:x="23" fg:w="1"/><text x="4.3719%" y="798.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.1219%" y="804" width="0.1792%" height="15" fill="rgb(225,32,20)" fg:x="23" fg:w="1"/><text x="4.3719%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.1219%" y="820" width="0.1792%" height="15" fill="rgb(215,141,46)" fg:x="23" fg:w="1"/><text x="4.3719%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.1219%" y="836" width="0.1792%" height="15" fill="rgb(250,160,47)" fg:x="23" fg:w="1"/><text x="4.3719%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.1219%" y="852" width="0.1792%" height="15" fill="rgb(216,222,40)" fg:x="23" fg:w="1"/><text x="4.3719%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.1219%" y="868" width="0.1792%" height="15" fill="rgb(234,217,39)" fg:x="23" fg:w="1"/><text x="4.3719%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.1219%" y="884" width="0.1792%" height="15" fill="rgb(207,178,40)" fg:x="23" fg:w="1"/><text x="4.3719%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.1219%" y="900" width="0.1792%" height="15" fill="rgb(221,136,13)" fg:x="23" fg:w="1"/><text x="4.3719%" y="910.50"></text></g><g><title>&lt;module&gt; (email/header.py:48) (1 samples, 0.18%)</title><rect x="4.1219%" y="916" width="0.1792%" height="15" fill="rgb(249,199,10)" fg:x="23" fg:w="1"/><text x="4.3719%" y="926.50"></text></g><g><title>compile (re.py:251) (1 samples, 0.18%)</title><rect x="4.1219%" y="932" width="0.1792%" height="15" fill="rgb(249,222,13)" fg:x="23" fg:w="1"/><text x="4.3719%" y="942.50"></text></g><g><title>_compile (re.py:303) (1 samples, 0.18%)</title><rect x="4.1219%" y="948" width="0.1792%" height="15" fill="rgb(244,185,38)" fg:x="23" fg:w="1"/><text x="4.3719%" y="958.50"></text></g><g><title>compile (sre_compile.py:788) (1 samples, 0.18%)</title><rect x="4.1219%" y="964" width="0.1792%" height="15" fill="rgb(236,202,9)" fg:x="23" fg:w="1"/><text x="4.3719%" y="974.50"></text></g><g><title>parse (sre_parse.py:955) (1 samples, 0.18%)</title><rect x="4.1219%" y="980" width="0.1792%" height="15" fill="rgb(250,229,37)" fg:x="23" fg:w="1"/><text x="4.3719%" y="990.50"></text></g><g><title>_parse_sub (sre_parse.py:444) (1 samples, 0.18%)</title><rect x="4.1219%" y="996" width="0.1792%" height="15" fill="rgb(206,174,23)" fg:x="23" fg:w="1"/><text x="4.3719%" y="1006.50"></text></g><g><title>_parse (sre_parse.py:681) (1 samples, 0.18%)</title><rect x="4.1219%" y="1012" width="0.1792%" height="15" fill="rgb(211,33,43)" fg:x="23" fg:w="1"/><text x="4.3719%" y="1022.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/__init__.py:21) (1 samples, 0.18%)</title><rect x="4.3011%" y="276" width="0.1792%" height="15" fill="rgb(245,58,50)" fg:x="24" fg:w="1"/><text x="4.5511%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="292" width="0.1792%" height="15" fill="rgb(244,68,36)" fg:x="24" fg:w="1"/><text x="4.5511%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="4.3011%" y="308" width="0.1792%" height="15" fill="rgb(232,229,15)" fg:x="24" fg:w="1"/><text x="4.5511%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="324" width="0.1792%" height="15" fill="rgb(254,30,23)" fg:x="24" fg:w="1"/><text x="4.5511%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="340" width="0.1792%" height="15" fill="rgb(235,160,14)" fg:x="24" fg:w="1"/><text x="4.5511%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="356" width="0.1792%" height="15" fill="rgb(212,155,44)" fg:x="24" fg:w="1"/><text x="4.5511%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="372" width="0.1792%" height="15" fill="rgb(226,2,50)" fg:x="24" fg:w="1"/><text x="4.5511%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="388" width="0.1792%" height="15" fill="rgb(234,177,6)" fg:x="24" fg:w="1"/><text x="4.5511%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="404" width="0.1792%" height="15" fill="rgb(217,24,9)" fg:x="24" fg:w="1"/><text x="4.5511%" y="414.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/datapipes/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.3011%" y="420" width="0.1792%" height="15" fill="rgb(220,13,46)" fg:x="24" fg:w="1"/><text x="4.5511%" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.3011%" y="436" width="0.1792%" height="15" fill="rgb(239,221,27)" fg:x="24" fg:w="1"/><text x="4.5511%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="452" width="0.1792%" height="15" fill="rgb(222,198,25)" fg:x="24" fg:w="1"/><text x="4.5511%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="468" width="0.1792%" height="15" fill="rgb(211,99,13)" fg:x="24" fg:w="1"/><text x="4.5511%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="484" width="0.1792%" height="15" fill="rgb(232,111,31)" fg:x="24" fg:w="1"/><text x="4.5511%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="500" width="0.1792%" height="15" fill="rgb(245,82,37)" fg:x="24" fg:w="1"/><text x="4.5511%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="516" width="0.1792%" height="15" fill="rgb(227,149,46)" fg:x="24" fg:w="1"/><text x="4.5511%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="532" width="0.1792%" height="15" fill="rgb(218,36,50)" fg:x="24" fg:w="1"/><text x="4.5511%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/datapipes/iter/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.3011%" y="548" width="0.1792%" height="15" fill="rgb(226,80,48)" fg:x="24" fg:w="1"/><text x="4.5511%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="564" width="0.1792%" height="15" fill="rgb(238,224,15)" fg:x="24" fg:w="1"/><text x="4.5511%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="580" width="0.1792%" height="15" fill="rgb(241,136,10)" fg:x="24" fg:w="1"/><text x="4.5511%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="596" width="0.1792%" height="15" fill="rgb(208,32,45)" fg:x="24" fg:w="1"/><text x="4.5511%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="612" width="0.1792%" height="15" fill="rgb(207,135,9)" fg:x="24" fg:w="1"/><text x="4.5511%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="628" width="0.1792%" height="15" fill="rgb(206,86,44)" fg:x="24" fg:w="1"/><text x="4.5511%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/datapipes/iter/utils.py:3) (1 samples, 0.18%)</title><rect x="4.3011%" y="644" width="0.1792%" height="15" fill="rgb(245,177,15)" fg:x="24" fg:w="1"/><text x="4.5511%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="660" width="0.1792%" height="15" fill="rgb(206,64,50)" fg:x="24" fg:w="1"/><text x="4.5511%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="676" width="0.1792%" height="15" fill="rgb(234,36,40)" fg:x="24" fg:w="1"/><text x="4.5511%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="692" width="0.1792%" height="15" fill="rgb(213,64,8)" fg:x="24" fg:w="1"/><text x="4.5511%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="708" width="0.1792%" height="15" fill="rgb(210,75,36)" fg:x="24" fg:w="1"/><text x="4.5511%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="724" width="0.1792%" height="15" fill="rgb(229,88,21)" fg:x="24" fg:w="1"/><text x="4.5511%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/datapipes/datapipe.py:7) (1 samples, 0.18%)</title><rect x="4.3011%" y="740" width="0.1792%" height="15" fill="rgb(252,204,47)" fg:x="24" fg:w="1"/><text x="4.5511%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="756" width="0.1792%" height="15" fill="rgb(208,77,27)" fg:x="24" fg:w="1"/><text x="4.5511%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="772" width="0.1792%" height="15" fill="rgb(221,76,26)" fg:x="24" fg:w="1"/><text x="4.5511%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="788" width="0.1792%" height="15" fill="rgb(225,139,18)" fg:x="24" fg:w="1"/><text x="4.5511%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="804" width="0.1792%" height="15" fill="rgb(230,137,11)" fg:x="24" fg:w="1"/><text x="4.5511%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="820" width="0.1792%" height="15" fill="rgb(212,28,1)" fg:x="24" fg:w="1"/><text x="4.5511%" y="830.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/datapipes/utils/common.py:13) (1 samples, 0.18%)</title><rect x="4.3011%" y="836" width="0.1792%" height="15" fill="rgb(248,164,17)" fg:x="24" fg:w="1"/><text x="4.5511%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="852" width="0.1792%" height="15" fill="rgb(222,171,42)" fg:x="24" fg:w="1"/><text x="4.5511%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="4.3011%" y="868" width="0.1792%" height="15" fill="rgb(243,84,45)" fg:x="24" fg:w="1"/><text x="4.5511%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="884" width="0.1792%" height="15" fill="rgb(252,49,23)" fg:x="24" fg:w="1"/><text x="4.5511%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="900" width="0.1792%" height="15" fill="rgb(215,19,7)" fg:x="24" fg:w="1"/><text x="4.5511%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="916" width="0.1792%" height="15" fill="rgb(238,81,41)" fg:x="24" fg:w="1"/><text x="4.5511%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="932" width="0.1792%" height="15" fill="rgb(210,199,37)" fg:x="24" fg:w="1"/><text x="4.5511%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="948" width="0.1792%" height="15" fill="rgb(244,192,49)" fg:x="24" fg:w="1"/><text x="4.5511%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="964" width="0.1792%" height="15" fill="rgb(226,211,11)" fg:x="24" fg:w="1"/><text x="4.5511%" y="974.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/_utils/__init__.py:52) (1 samples, 0.18%)</title><rect x="4.3011%" y="980" width="0.1792%" height="15" fill="rgb(236,162,54)" fg:x="24" fg:w="1"/><text x="4.5511%" y="990.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.3011%" y="996" width="0.1792%" height="15" fill="rgb(220,229,9)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="1012" width="0.1792%" height="15" fill="rgb(250,87,22)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.3011%" y="1028" width="0.1792%" height="15" fill="rgb(239,43,17)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.3011%" y="1044" width="0.1792%" height="15" fill="rgb(231,177,25)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.3011%" y="1060" width="0.1792%" height="15" fill="rgb(219,179,1)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.3011%" y="1076" width="0.1792%" height="15" fill="rgb(238,219,53)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.3011%" y="1092" width="0.1792%" height="15" fill="rgb(232,167,36)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1102.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/_utils/worker.py:125) (1 samples, 0.18%)</title><rect x="4.3011%" y="1108" width="0.1792%" height="15" fill="rgb(244,19,51)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1118.50"></text></g><g><title>wrap (dataclasses.py:1175) (1 samples, 0.18%)</title><rect x="4.3011%" y="1124" width="0.1792%" height="15" fill="rgb(224,6,22)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1134.50"></text></g><g><title>_process_class (dataclasses.py:1093) (1 samples, 0.18%)</title><rect x="4.3011%" y="1140" width="0.1792%" height="15" fill="rgb(224,145,5)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1150.50"></text></g><g><title>signature (inspect.py:3254) (1 samples, 0.18%)</title><rect x="4.3011%" y="1156" width="0.1792%" height="15" fill="rgb(234,130,49)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1166.50"></text></g><g><title>from_callable (inspect.py:3002) (1 samples, 0.18%)</title><rect x="4.3011%" y="1172" width="0.1792%" height="15" fill="rgb(254,6,2)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1182.50"></text></g><g><title>_signature_from_callable (inspect.py:2412) (1 samples, 0.18%)</title><rect x="4.3011%" y="1188" width="0.1792%" height="15" fill="rgb(208,96,46)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1198.50"></text></g><g><title>unwrap (inspect.py:639) (1 samples, 0.18%)</title><rect x="4.3011%" y="1204" width="0.1792%" height="15" fill="rgb(239,3,39)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1214.50"></text></g><g><title>_is_wrapper (inspect.py:633) (1 samples, 0.18%)</title><rect x="4.3011%" y="1220" width="0.1792%" height="15" fill="rgb(233,210,1)" fg:x="24" fg:w="1"/><text x="4.5511%" y="1230.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1444) (2 samples, 0.36%)</title><rect x="4.3011%" y="180" width="0.3584%" height="15" fill="rgb(244,137,37)" fg:x="24" fg:w="2"/><text x="4.5511%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="4.3011%" y="196" width="0.3584%" height="15" fill="rgb(240,136,2)" fg:x="24" fg:w="2"/><text x="4.5511%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="4.3011%" y="212" width="0.3584%" height="15" fill="rgb(239,18,37)" fg:x="24" fg:w="2"/><text x="4.5511%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="4.3011%" y="228" width="0.3584%" height="15" fill="rgb(218,185,22)" fg:x="24" fg:w="2"/><text x="4.5511%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="4.3011%" y="244" width="0.3584%" height="15" fill="rgb(225,218,4)" fg:x="24" fg:w="2"/><text x="4.5511%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="4.3011%" y="260" width="0.3584%" height="15" fill="rgb(230,182,32)" fg:x="24" fg:w="2"/><text x="4.5511%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/__init__.py:27) (1 samples, 0.18%)</title><rect x="4.4803%" y="276" width="0.1792%" height="15" fill="rgb(242,56,43)" fg:x="25" fg:w="1"/><text x="4.7303%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.4803%" y="292" width="0.1792%" height="15" fill="rgb(233,99,24)" fg:x="25" fg:w="1"/><text x="4.7303%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.4803%" y="308" width="0.1792%" height="15" fill="rgb(234,209,42)" fg:x="25" fg:w="1"/><text x="4.7303%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.4803%" y="324" width="0.1792%" height="15" fill="rgb(227,7,12)" fg:x="25" fg:w="1"/><text x="4.7303%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.4803%" y="340" width="0.1792%" height="15" fill="rgb(245,203,43)" fg:x="25" fg:w="1"/><text x="4.7303%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.4803%" y="356" width="0.1792%" height="15" fill="rgb(238,205,33)" fg:x="25" fg:w="1"/><text x="4.7303%" y="366.50"></text></g><g><title>&lt;module&gt; (torch/utils/data/dataloader.py:67) (1 samples, 0.18%)</title><rect x="4.4803%" y="372" width="0.1792%" height="15" fill="rgb(231,56,7)" fg:x="25" fg:w="1"/><text x="4.7303%" y="382.50"></text></g><g><title>getLogger (logging/__init__.py:2079) (1 samples, 0.18%)</title><rect x="4.4803%" y="388" width="0.1792%" height="15" fill="rgb(244,186,29)" fg:x="25" fg:w="1"/><text x="4.7303%" y="398.50"></text></g><g><title>getLogger (logging/__init__.py:1344) (1 samples, 0.18%)</title><rect x="4.4803%" y="404" width="0.1792%" height="15" fill="rgb(234,111,31)" fg:x="25" fg:w="1"/><text x="4.7303%" y="414.50"></text></g><g><title>_fixupParents (logging/__init__.py:1385) (1 samples, 0.18%)</title><rect x="4.4803%" y="420" width="0.1792%" height="15" fill="rgb(241,149,10)" fg:x="25" fg:w="1"/><text x="4.7303%" y="430.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1454) (1 samples, 0.18%)</title><rect x="4.6595%" y="180" width="0.1792%" height="15" fill="rgb(249,206,44)" fg:x="26" fg:w="1"/><text x="4.9095%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="196" width="0.1792%" height="15" fill="rgb(251,153,30)" fg:x="26" fg:w="1"/><text x="4.9095%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="212" width="0.1792%" height="15" fill="rgb(239,152,38)" fg:x="26" fg:w="1"/><text x="4.9095%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="228" width="0.1792%" height="15" fill="rgb(249,139,47)" fg:x="26" fg:w="1"/><text x="4.9095%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.6595%" y="244" width="0.1792%" height="15" fill="rgb(244,64,35)" fg:x="26" fg:w="1"/><text x="4.9095%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="260" width="0.1792%" height="15" fill="rgb(216,46,15)" fg:x="26" fg:w="1"/><text x="4.9095%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/nn/quantized/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.6595%" y="276" width="0.1792%" height="15" fill="rgb(250,74,19)" fg:x="26" fg:w="1"/><text x="4.9095%" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.6595%" y="292" width="0.1792%" height="15" fill="rgb(249,42,33)" fg:x="26" fg:w="1"/><text x="4.9095%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="308" width="0.1792%" height="15" fill="rgb(242,149,17)" fg:x="26" fg:w="1"/><text x="4.9095%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="324" width="0.1792%" height="15" fill="rgb(244,29,21)" fg:x="26" fg:w="1"/><text x="4.9095%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="340" width="0.1792%" height="15" fill="rgb(220,130,37)" fg:x="26" fg:w="1"/><text x="4.9095%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="356" width="0.1792%" height="15" fill="rgb(211,67,2)" fg:x="26" fg:w="1"/><text x="4.9095%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.6595%" y="372" width="0.1792%" height="15" fill="rgb(235,68,52)" fg:x="26" fg:w="1"/><text x="4.9095%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="388" width="0.1792%" height="15" fill="rgb(246,142,3)" fg:x="26" fg:w="1"/><text x="4.9095%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/nn/quantized/dynamic/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.6595%" y="404" width="0.1792%" height="15" fill="rgb(241,25,7)" fg:x="26" fg:w="1"/><text x="4.9095%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="420" width="0.1792%" height="15" fill="rgb(242,119,39)" fg:x="26" fg:w="1"/><text x="4.9095%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="4.6595%" y="436" width="0.1792%" height="15" fill="rgb(241,98,45)" fg:x="26" fg:w="1"/><text x="4.9095%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="452" width="0.1792%" height="15" fill="rgb(254,28,30)" fg:x="26" fg:w="1"/><text x="4.9095%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="468" width="0.1792%" height="15" fill="rgb(241,142,54)" fg:x="26" fg:w="1"/><text x="4.9095%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="484" width="0.1792%" height="15" fill="rgb(222,85,15)" fg:x="26" fg:w="1"/><text x="4.9095%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="500" width="0.1792%" height="15" fill="rgb(210,85,47)" fg:x="26" fg:w="1"/><text x="4.9095%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.6595%" y="516" width="0.1792%" height="15" fill="rgb(224,206,25)" fg:x="26" fg:w="1"/><text x="4.9095%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="532" width="0.1792%" height="15" fill="rgb(243,201,19)" fg:x="26" fg:w="1"/><text x="4.9095%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/quantized/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.6595%" y="548" width="0.1792%" height="15" fill="rgb(236,59,4)" fg:x="26" fg:w="1"/><text x="4.9095%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.6595%" y="564" width="0.1792%" height="15" fill="rgb(254,179,45)" fg:x="26" fg:w="1"/><text x="4.9095%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="580" width="0.1792%" height="15" fill="rgb(226,14,10)" fg:x="26" fg:w="1"/><text x="4.9095%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="596" width="0.1792%" height="15" fill="rgb(244,27,41)" fg:x="26" fg:w="1"/><text x="4.9095%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="612" width="0.1792%" height="15" fill="rgb(235,35,32)" fg:x="26" fg:w="1"/><text x="4.9095%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="628" width="0.1792%" height="15" fill="rgb(218,68,31)" fg:x="26" fg:w="1"/><text x="4.9095%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.6595%" y="644" width="0.1792%" height="15" fill="rgb(207,120,37)" fg:x="26" fg:w="1"/><text x="4.9095%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="660" width="0.1792%" height="15" fill="rgb(227,98,0)" fg:x="26" fg:w="1"/><text x="4.9095%" y="670.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/quantized/functional.py:10) (1 samples, 0.18%)</title><rect x="4.6595%" y="676" width="0.1792%" height="15" fill="rgb(207,7,3)" fg:x="26" fg:w="1"/><text x="4.9095%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="692" width="0.1792%" height="15" fill="rgb(206,98,19)" fg:x="26" fg:w="1"/><text x="4.9095%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="4.6595%" y="708" width="0.1792%" height="15" fill="rgb(217,5,26)" fg:x="26" fg:w="1"/><text x="4.9095%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="724" width="0.1792%" height="15" fill="rgb(235,190,38)" fg:x="26" fg:w="1"/><text x="4.9095%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="740" width="0.1792%" height="15" fill="rgb(247,86,24)" fg:x="26" fg:w="1"/><text x="4.9095%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="756" width="0.1792%" height="15" fill="rgb(205,101,16)" fg:x="26" fg:w="1"/><text x="4.9095%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="772" width="0.1792%" height="15" fill="rgb(246,168,33)" fg:x="26" fg:w="1"/><text x="4.9095%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.6595%" y="788" width="0.1792%" height="15" fill="rgb(231,114,1)" fg:x="26" fg:w="1"/><text x="4.9095%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.6595%" y="804" width="0.1792%" height="15" fill="rgb(207,184,53)" fg:x="26" fg:w="1"/><text x="4.9095%" y="814.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/quantized/modules/__init__.py:21) (1 samples, 0.18%)</title><rect x="4.6595%" y="820" width="0.1792%" height="15" fill="rgb(224,95,51)" fg:x="26" fg:w="1"/><text x="4.9095%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.6595%" y="836" width="0.1792%" height="15" fill="rgb(212,188,45)" fg:x="26" fg:w="1"/><text x="4.9095%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.6595%" y="852" width="0.1792%" height="15" fill="rgb(223,154,38)" fg:x="26" fg:w="1"/><text x="4.9095%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.6595%" y="868" width="0.1792%" height="15" fill="rgb(251,22,52)" fg:x="26" fg:w="1"/><text x="4.9095%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="4.6595%" y="884" width="0.1792%" height="15" fill="rgb(229,209,22)" fg:x="26" fg:w="1"/><text x="4.9095%" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:975) (1 samples, 0.18%)</title><rect x="4.6595%" y="900" width="0.1792%" height="15" fill="rgb(234,138,34)" fg:x="26" fg:w="1"/><text x="4.9095%" y="910.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:1073) (1 samples, 0.18%)</title><rect x="4.6595%" y="916" width="0.1792%" height="15" fill="rgb(212,95,11)" fg:x="26" fg:w="1"/><text x="4.9095%" y="926.50"></text></g><g><title>fstatat64 (libc.so.6) (1 samples, 0.18%)</title><rect x="4.6595%" y="932" width="0.1792%" height="15" fill="rgb(240,179,47)" fg:x="26" fg:w="1"/><text x="4.9095%" y="942.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1456) (1 samples, 0.18%)</title><rect x="4.8387%" y="180" width="0.1792%" height="15" fill="rgb(240,163,11)" fg:x="27" fg:w="1"/><text x="5.0887%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="196" width="0.1792%" height="15" fill="rgb(236,37,12)" fg:x="27" fg:w="1"/><text x="5.0887%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="212" width="0.1792%" height="15" fill="rgb(232,164,16)" fg:x="27" fg:w="1"/><text x="5.0887%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.8387%" y="228" width="0.1792%" height="15" fill="rgb(244,205,15)" fg:x="27" fg:w="1"/><text x="5.0887%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.8387%" y="244" width="0.1792%" height="15" fill="rgb(223,117,47)" fg:x="27" fg:w="1"/><text x="5.0887%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="260" width="0.1792%" height="15" fill="rgb(244,107,35)" fg:x="27" fg:w="1"/><text x="5.0887%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/__init__.py:19) (1 samples, 0.18%)</title><rect x="4.8387%" y="276" width="0.1792%" height="15" fill="rgb(205,140,8)" fg:x="27" fg:w="1"/><text x="5.0887%" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="4.8387%" y="292" width="0.1792%" height="15" fill="rgb(228,84,46)" fg:x="27" fg:w="1"/><text x="5.0887%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="308" width="0.1792%" height="15" fill="rgb(254,188,9)" fg:x="27" fg:w="1"/><text x="5.0887%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="324" width="0.1792%" height="15" fill="rgb(206,112,54)" fg:x="27" fg:w="1"/><text x="5.0887%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="340" width="0.1792%" height="15" fill="rgb(216,84,49)" fg:x="27" fg:w="1"/><text x="5.0887%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.8387%" y="356" width="0.1792%" height="15" fill="rgb(214,194,35)" fg:x="27" fg:w="1"/><text x="5.0887%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.8387%" y="372" width="0.1792%" height="15" fill="rgb(249,28,3)" fg:x="27" fg:w="1"/><text x="5.0887%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="388" width="0.1792%" height="15" fill="rgb(222,56,52)" fg:x="27" fg:w="1"/><text x="5.0887%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.8387%" y="404" width="0.1792%" height="15" fill="rgb(245,217,50)" fg:x="27" fg:w="1"/><text x="5.0887%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="420" width="0.1792%" height="15" fill="rgb(213,201,24)" fg:x="27" fg:w="1"/><text x="5.0887%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="436" width="0.1792%" height="15" fill="rgb(248,116,28)" fg:x="27" fg:w="1"/><text x="5.0887%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.8387%" y="452" width="0.1792%" height="15" fill="rgb(219,72,43)" fg:x="27" fg:w="1"/><text x="5.0887%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.8387%" y="468" width="0.1792%" height="15" fill="rgb(209,138,14)" fg:x="27" fg:w="1"/><text x="5.0887%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="484" width="0.1792%" height="15" fill="rgb(222,18,33)" fg:x="27" fg:w="1"/><text x="5.0887%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/modules/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.8387%" y="500" width="0.1792%" height="15" fill="rgb(213,199,7)" fg:x="27" fg:w="1"/><text x="5.0887%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="516" width="0.1792%" height="15" fill="rgb(250,110,10)" fg:x="27" fg:w="1"/><text x="5.0887%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="532" width="0.1792%" height="15" fill="rgb(248,123,6)" fg:x="27" fg:w="1"/><text x="5.0887%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.8387%" y="548" width="0.1792%" height="15" fill="rgb(206,91,31)" fg:x="27" fg:w="1"/><text x="5.0887%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.8387%" y="564" width="0.1792%" height="15" fill="rgb(211,154,13)" fg:x="27" fg:w="1"/><text x="5.0887%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="580" width="0.1792%" height="15" fill="rgb(225,148,7)" fg:x="27" fg:w="1"/><text x="5.0887%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/modules/linear_relu.py:1) (1 samples, 0.18%)</title><rect x="4.8387%" y="596" width="0.1792%" height="15" fill="rgb(220,160,43)" fg:x="27" fg:w="1"/><text x="5.0887%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="612" width="0.1792%" height="15" fill="rgb(213,52,39)" fg:x="27" fg:w="1"/><text x="5.0887%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="628" width="0.1792%" height="15" fill="rgb(243,137,7)" fg:x="27" fg:w="1"/><text x="5.0887%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="4.8387%" y="644" width="0.1792%" height="15" fill="rgb(230,79,13)" fg:x="27" fg:w="1"/><text x="5.0887%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="4.8387%" y="660" width="0.1792%" height="15" fill="rgb(247,105,23)" fg:x="27" fg:w="1"/><text x="5.0887%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="4.8387%" y="676" width="0.1792%" height="15" fill="rgb(223,179,41)" fg:x="27" fg:w="1"/><text x="5.0887%" y="686.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/intrinsic/quantized/__init__.py:1) (1 samples, 0.18%)</title><rect x="4.8387%" y="692" width="0.1792%" height="15" fill="rgb(218,9,34)" fg:x="27" fg:w="1"/><text x="5.0887%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="4.8387%" y="708" width="0.1792%" height="15" fill="rgb(222,106,8)" fg:x="27" fg:w="1"/><text x="5.0887%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="4.8387%" y="724" width="0.1792%" height="15" fill="rgb(211,220,0)" fg:x="27" fg:w="1"/><text x="5.0887%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (1 samples, 0.18%)</title><rect x="4.8387%" y="740" width="0.1792%" height="15" fill="rgb(229,52,16)" fg:x="27" fg:w="1"/><text x="5.0887%" y="750.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:577) (1 samples, 0.18%)</title><rect x="4.8387%" y="756" width="0.1792%" height="15" fill="rgb(212,155,18)" fg:x="27" fg:w="1"/><text x="5.0887%" y="766.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:556) (1 samples, 0.18%)</title><rect x="4.8387%" y="772" width="0.1792%" height="15" fill="rgb(242,21,14)" fg:x="27" fg:w="1"/><text x="5.0887%" y="782.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:397) (1 samples, 0.18%)</title><rect x="4.8387%" y="788" width="0.1792%" height="15" fill="rgb(222,19,48)" fg:x="27" fg:w="1"/><text x="5.0887%" y="798.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:513) (1 samples, 0.18%)</title><rect x="4.8387%" y="804" width="0.1792%" height="15" fill="rgb(232,45,27)" fg:x="27" fg:w="1"/><text x="5.0887%" y="814.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:406) (1 samples, 0.18%)</title><rect x="4.8387%" y="820" width="0.1792%" height="15" fill="rgb(249,103,42)" fg:x="27" fg:w="1"/><text x="5.0887%" y="830.50"></text></g><g><title>c10::InternedStrings::symbol (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="5.0179%" y="1332" width="0.1792%" height="15" fill="rgb(246,81,33)" fg:x="28" fg:w="1"/><text x="5.2679%" y="1342.50"></text></g><g><title>c10::InternedStrings::_symbol (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="5.0179%" y="1348" width="0.1792%" height="15" fill="rgb(252,33,42)" fg:x="28" fg:w="1"/><text x="5.2679%" y="1358.50"></text></g><g><title>&lt;module&gt; (torch/fx/__init__.py:83) (2 samples, 0.36%)</title><rect x="5.0179%" y="932" width="0.3584%" height="15" fill="rgb(209,212,41)" fg:x="28" fg:w="2"/><text x="5.2679%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="5.0179%" y="948" width="0.3584%" height="15" fill="rgb(207,154,6)" fg:x="28" fg:w="2"/><text x="5.2679%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="5.0179%" y="964" width="0.3584%" height="15" fill="rgb(223,64,47)" fg:x="28" fg:w="2"/><text x="5.2679%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="5.0179%" y="980" width="0.3584%" height="15" fill="rgb(211,161,38)" fg:x="28" fg:w="2"/><text x="5.2679%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="5.0179%" y="996" width="0.3584%" height="15" fill="rgb(219,138,40)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="5.0179%" y="1012" width="0.3584%" height="15" fill="rgb(241,228,46)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1022.50"></text></g><g><title>&lt;module&gt; (torch/fx/graph_module.py:8) (2 samples, 0.36%)</title><rect x="5.0179%" y="1028" width="0.3584%" height="15" fill="rgb(223,209,38)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="5.0179%" y="1044" width="0.3584%" height="15" fill="rgb(236,164,45)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="5.0179%" y="1060" width="0.3584%" height="15" fill="rgb(231,15,5)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="5.0179%" y="1076" width="0.3584%" height="15" fill="rgb(252,35,15)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="5.0179%" y="1092" width="0.3584%" height="15" fill="rgb(248,181,18)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="5.0179%" y="1108" width="0.3584%" height="15" fill="rgb(233,39,42)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1118.50"></text></g><g><title>&lt;module&gt; (torch/fx/graph.py:2) (2 samples, 0.36%)</title><rect x="5.0179%" y="1124" width="0.3584%" height="15" fill="rgb(238,110,33)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="5.0179%" y="1140" width="0.3584%" height="15" fill="rgb(233,195,10)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="5.0179%" y="1156" width="0.3584%" height="15" fill="rgb(254,105,3)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="5.0179%" y="1172" width="0.3584%" height="15" fill="rgb(221,225,9)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="5.0179%" y="1188" width="0.3584%" height="15" fill="rgb(224,227,45)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="5.0179%" y="1204" width="0.3584%" height="15" fill="rgb(229,198,43)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1214.50"></text></g><g><title>&lt;module&gt; (torch/fx/node.py:36) (2 samples, 0.36%)</title><rect x="5.0179%" y="1220" width="0.3584%" height="15" fill="rgb(206,209,35)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1230.50"></text></g><g><title>__getattr__ (torch/_ops.py:757) (2 samples, 0.36%)</title><rect x="5.0179%" y="1236" width="0.3584%" height="15" fill="rgb(245,195,53)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1246.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (2 samples, 0.36%)</title><rect x="5.0179%" y="1252" width="0.3584%" height="15" fill="rgb(240,92,26)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1262.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}, pybind11::tuple, std::string const&amp;, pybind11::name, pybind11::scope, pybind11::sibling, pybind11::arg&gt;(torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}, pybind11::tuple (*)(std::string const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, pybind11::arg)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (2 samples, 0.36%)</title><rect x="5.0179%" y="1268" width="0.3584%" height="15" fill="rgb(207,40,23)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1278.50"></text></g><g><title>torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}::operator() const (libtorch_python.so) (2 samples, 0.36%)</title><rect x="5.0179%" y="1284" width="0.3584%" height="15" fill="rgb(223,111,35)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1294.50"></text></g><g><title>torch::jit::getAllOperatorsFor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="5.0179%" y="1300" width="0.3584%" height="15" fill="rgb(229,147,28)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1310.50"></text></g><g><title>torch::jit::(anonymous namespace)::OperatorRegistry::registerPendingOperators (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="5.0179%" y="1316" width="0.3584%" height="15" fill="rgb(211,29,28)" fg:x="28" fg:w="2"/><text x="5.2679%" y="1326.50"></text></g><g><title>torch::jit::canonicalSchemaString (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="5.1971%" y="1332" width="0.1792%" height="15" fill="rgb(228,72,33)" fg:x="29" fg:w="1"/><text x="5.4471%" y="1342.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1477) (3 samples, 0.54%)</title><rect x="5.0179%" y="180" width="0.5376%" height="15" fill="rgb(205,214,31)" fg:x="28" fg:w="3"/><text x="5.2679%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (3 samples, 0.54%)</title><rect x="5.0179%" y="196" width="0.5376%" height="15" fill="rgb(224,111,15)" fg:x="28" fg:w="3"/><text x="5.2679%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="212" width="0.5376%" height="15" fill="rgb(253,21,26)" fg:x="28" fg:w="3"/><text x="5.2679%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="228" width="0.5376%" height="15" fill="rgb(245,139,43)" fg:x="28" fg:w="3"/><text x="5.2679%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="244" width="0.5376%" height="15" fill="rgb(252,170,7)" fg:x="28" fg:w="3"/><text x="5.2679%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="260" width="0.5376%" height="15" fill="rgb(231,118,14)" fg:x="28" fg:w="3"/><text x="5.2679%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="276" width="0.5376%" height="15" fill="rgb(238,83,0)" fg:x="28" fg:w="3"/><text x="5.2679%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="292" width="0.5376%" height="15" fill="rgb(221,39,39)" fg:x="28" fg:w="3"/><text x="5.2679%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/quantization/__init__.py:1) (3 samples, 0.54%)</title><rect x="5.0179%" y="308" width="0.5376%" height="15" fill="rgb(222,119,46)" fg:x="28" fg:w="3"/><text x="5.2679%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="324" width="0.5376%" height="15" fill="rgb(222,165,49)" fg:x="28" fg:w="3"/><text x="5.2679%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="340" width="0.5376%" height="15" fill="rgb(219,113,52)" fg:x="28" fg:w="3"/><text x="5.2679%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="356" width="0.5376%" height="15" fill="rgb(214,7,15)" fg:x="28" fg:w="3"/><text x="5.2679%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="372" width="0.5376%" height="15" fill="rgb(235,32,4)" fg:x="28" fg:w="3"/><text x="5.2679%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="388" width="0.5376%" height="15" fill="rgb(238,90,54)" fg:x="28" fg:w="3"/><text x="5.2679%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/quantization/quantize.py:10) (3 samples, 0.54%)</title><rect x="5.0179%" y="404" width="0.5376%" height="15" fill="rgb(213,208,19)" fg:x="28" fg:w="3"/><text x="5.2679%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="420" width="0.5376%" height="15" fill="rgb(233,156,4)" fg:x="28" fg:w="3"/><text x="5.2679%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (3 samples, 0.54%)</title><rect x="5.0179%" y="436" width="0.5376%" height="15" fill="rgb(207,194,5)" fg:x="28" fg:w="3"/><text x="5.2679%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="452" width="0.5376%" height="15" fill="rgb(206,111,30)" fg:x="28" fg:w="3"/><text x="5.2679%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="468" width="0.5376%" height="15" fill="rgb(243,70,54)" fg:x="28" fg:w="3"/><text x="5.2679%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="484" width="0.5376%" height="15" fill="rgb(242,28,8)" fg:x="28" fg:w="3"/><text x="5.2679%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="500" width="0.5376%" height="15" fill="rgb(219,106,18)" fg:x="28" fg:w="3"/><text x="5.2679%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="516" width="0.5376%" height="15" fill="rgb(244,222,10)" fg:x="28" fg:w="3"/><text x="5.2679%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="532" width="0.5376%" height="15" fill="rgb(236,179,52)" fg:x="28" fg:w="3"/><text x="5.2679%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/__init__.py:3) (3 samples, 0.54%)</title><rect x="5.0179%" y="548" width="0.5376%" height="15" fill="rgb(213,23,39)" fg:x="28" fg:w="3"/><text x="5.2679%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="564" width="0.5376%" height="15" fill="rgb(238,48,10)" fg:x="28" fg:w="3"/><text x="5.2679%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="580" width="0.5376%" height="15" fill="rgb(251,196,23)" fg:x="28" fg:w="3"/><text x="5.2679%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="596" width="0.5376%" height="15" fill="rgb(250,152,24)" fg:x="28" fg:w="3"/><text x="5.2679%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="612" width="0.5376%" height="15" fill="rgb(209,150,17)" fg:x="28" fg:w="3"/><text x="5.2679%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="628" width="0.5376%" height="15" fill="rgb(234,202,34)" fg:x="28" fg:w="3"/><text x="5.2679%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/fake_quantize.py:8) (3 samples, 0.54%)</title><rect x="5.0179%" y="644" width="0.5376%" height="15" fill="rgb(253,148,53)" fg:x="28" fg:w="3"/><text x="5.2679%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="660" width="0.5376%" height="15" fill="rgb(218,129,16)" fg:x="28" fg:w="3"/><text x="5.2679%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="676" width="0.5376%" height="15" fill="rgb(216,85,19)" fg:x="28" fg:w="3"/><text x="5.2679%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="692" width="0.5376%" height="15" fill="rgb(235,228,7)" fg:x="28" fg:w="3"/><text x="5.2679%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="708" width="0.5376%" height="15" fill="rgb(245,175,0)" fg:x="28" fg:w="3"/><text x="5.2679%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="724" width="0.5376%" height="15" fill="rgb(208,168,36)" fg:x="28" fg:w="3"/><text x="5.2679%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/observer.py:15) (3 samples, 0.54%)</title><rect x="5.0179%" y="740" width="0.5376%" height="15" fill="rgb(246,171,24)" fg:x="28" fg:w="3"/><text x="5.2679%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="756" width="0.5376%" height="15" fill="rgb(215,142,24)" fg:x="28" fg:w="3"/><text x="5.2679%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="772" width="0.5376%" height="15" fill="rgb(250,187,7)" fg:x="28" fg:w="3"/><text x="5.2679%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="788" width="0.5376%" height="15" fill="rgb(228,66,33)" fg:x="28" fg:w="3"/><text x="5.2679%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="804" width="0.5376%" height="15" fill="rgb(234,215,21)" fg:x="28" fg:w="3"/><text x="5.2679%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="820" width="0.5376%" height="15" fill="rgb(222,191,20)" fg:x="28" fg:w="3"/><text x="5.2679%" y="830.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/utils.py:12) (3 samples, 0.54%)</title><rect x="5.0179%" y="836" width="0.5376%" height="15" fill="rgb(245,79,54)" fg:x="28" fg:w="3"/><text x="5.2679%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="5.0179%" y="852" width="0.5376%" height="15" fill="rgb(240,10,37)" fg:x="28" fg:w="3"/><text x="5.2679%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="5.0179%" y="868" width="0.5376%" height="15" fill="rgb(214,192,32)" fg:x="28" fg:w="3"/><text x="5.2679%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="5.0179%" y="884" width="0.5376%" height="15" fill="rgb(209,36,54)" fg:x="28" fg:w="3"/><text x="5.2679%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="5.0179%" y="900" width="0.5376%" height="15" fill="rgb(220,10,11)" fg:x="28" fg:w="3"/><text x="5.2679%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="5.0179%" y="916" width="0.5376%" height="15" fill="rgb(221,106,17)" fg:x="28" fg:w="3"/><text x="5.2679%" y="926.50"></text></g><g><title>&lt;module&gt; (torch/fx/__init__.py:84) (1 samples, 0.18%)</title><rect x="5.3763%" y="932" width="0.1792%" height="15" fill="rgb(251,142,44)" fg:x="30" fg:w="1"/><text x="5.6263%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="5.3763%" y="948" width="0.1792%" height="15" fill="rgb(238,13,15)" fg:x="30" fg:w="1"/><text x="5.6263%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="5.3763%" y="964" width="0.1792%" height="15" fill="rgb(208,107,27)" fg:x="30" fg:w="1"/><text x="5.6263%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="5.3763%" y="980" width="0.1792%" height="15" fill="rgb(205,136,37)" fg:x="30" fg:w="1"/><text x="5.6263%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="5.3763%" y="996" width="0.1792%" height="15" fill="rgb(250,205,27)" fg:x="30" fg:w="1"/><text x="5.6263%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="5.3763%" y="1012" width="0.1792%" height="15" fill="rgb(210,80,43)" fg:x="30" fg:w="1"/><text x="5.6263%" y="1022.50"></text></g><g><title>&lt;module&gt; (torch/fx/_symbolic_trace.py:49) (1 samples, 0.18%)</title><rect x="5.3763%" y="1028" width="0.1792%" height="15" fill="rgb(247,160,36)" fg:x="30" fg:w="1"/><text x="5.6263%" y="1038.50"></text></g><g><title>mark_back_compat (torch/fx/_compatibility.py:11) (1 samples, 0.18%)</title><rect x="5.3763%" y="1044" width="0.1792%" height="15" fill="rgb(234,13,49)" fg:x="30" fg:w="1"/><text x="5.6263%" y="1054.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.18%)</title><rect x="5.3763%" y="1060" width="0.1792%" height="15" fill="rgb(234,122,0)" fg:x="30" fg:w="1"/><text x="5.6263%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="5.5556%" y="564" width="0.1792%" height="15" fill="rgb(207,146,38)" fg:x="31" fg:w="1"/><text x="5.8056%" y="574.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="5.5556%" y="580" width="0.1792%" height="15" fill="rgb(207,177,25)" fg:x="31" fg:w="1"/><text x="5.8056%" y="590.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="5.5556%" y="596" width="0.1792%" height="15" fill="rgb(211,178,42)" fg:x="31" fg:w="1"/><text x="5.8056%" y="606.50"></text></g><g><title>&lt;module&gt; (sympy/series/__init__.py:10) (1 samples, 0.18%)</title><rect x="5.7348%" y="692" width="0.1792%" height="15" fill="rgb(230,69,54)" fg:x="32" fg:w="1"/><text x="5.9848%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="5.7348%" y="708" width="0.1792%" height="15" fill="rgb(214,135,41)" fg:x="32" fg:w="1"/><text x="5.9848%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="5.7348%" y="724" width="0.1792%" height="15" fill="rgb(237,67,25)" fg:x="32" fg:w="1"/><text x="5.9848%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="5.7348%" y="740" width="0.1792%" height="15" fill="rgb(222,189,50)" fg:x="32" fg:w="1"/><text x="5.9848%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="5.7348%" y="756" width="0.1792%" height="15" fill="rgb(245,148,34)" fg:x="32" fg:w="1"/><text x="5.9848%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="5.7348%" y="772" width="0.1792%" height="15" fill="rgb(222,29,6)" fg:x="32" fg:w="1"/><text x="5.9848%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/series/fourier.py:12) (1 samples, 0.18%)</title><rect x="5.7348%" y="788" width="0.1792%" height="15" fill="rgb(221,189,43)" fg:x="32" fg:w="1"/><text x="5.9848%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="5.7348%" y="804" width="0.1792%" height="15" fill="rgb(207,36,27)" fg:x="32" fg:w="1"/><text x="5.9848%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="5.7348%" y="820" width="0.1792%" height="15" fill="rgb(217,90,24)" fg:x="32" fg:w="1"/><text x="5.9848%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="5.7348%" y="836" width="0.1792%" height="15" fill="rgb(224,66,35)" fg:x="32" fg:w="1"/><text x="5.9848%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="5.7348%" y="852" width="0.1792%" height="15" fill="rgb(221,13,50)" fg:x="32" fg:w="1"/><text x="5.9848%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="5.7348%" y="868" width="0.1792%" height="15" fill="rgb(236,68,49)" fg:x="32" fg:w="1"/><text x="5.9848%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/series/series_class.py:11) (1 samples, 0.18%)</title><rect x="5.7348%" y="884" width="0.1792%" height="15" fill="rgb(229,146,28)" fg:x="32" fg:w="1"/><text x="5.9848%" y="894.50"></text></g><g><title>SeriesBase (sympy/series/series_class.py:49) (1 samples, 0.18%)</title><rect x="5.7348%" y="900" width="0.1792%" height="15" fill="rgb(225,31,38)" fg:x="32" fg:w="1"/><text x="5.9848%" y="910.50"></text></g><g><title>func_wrapper (sympy/core/cache.py:70) (1 samples, 0.18%)</title><rect x="5.7348%" y="916" width="0.1792%" height="15" fill="rgb(250,208,3)" fg:x="32" fg:w="1"/><text x="5.9848%" y="926.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.18%)</title><rect x="5.7348%" y="932" width="0.1792%" height="15" fill="rgb(246,54,23)" fg:x="32" fg:w="1"/><text x="5.9848%" y="942.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:108) (2 samples, 0.36%)</title><rect x="5.7348%" y="596" width="0.3584%" height="15" fill="rgb(243,76,11)" fg:x="32" fg:w="2"/><text x="5.9848%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="5.7348%" y="612" width="0.3584%" height="15" fill="rgb(245,21,50)" fg:x="32" fg:w="2"/><text x="5.9848%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="5.7348%" y="628" width="0.3584%" height="15" fill="rgb(228,9,43)" fg:x="32" fg:w="2"/><text x="5.9848%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="5.7348%" y="644" width="0.3584%" height="15" fill="rgb(208,100,47)" fg:x="32" fg:w="2"/><text x="5.9848%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="5.7348%" y="660" width="0.3584%" height="15" fill="rgb(232,26,8)" fg:x="32" fg:w="2"/><text x="5.9848%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="5.7348%" y="676" width="0.3584%" height="15" fill="rgb(216,166,38)" fg:x="32" fg:w="2"/><text x="5.9848%" y="686.50"></text></g><g><title>&lt;module&gt; (sympy/series/__init__.py:11) (1 samples, 0.18%)</title><rect x="5.9140%" y="692" width="0.1792%" height="15" fill="rgb(251,202,51)" fg:x="33" fg:w="1"/><text x="6.1640%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="5.9140%" y="708" width="0.1792%" height="15" fill="rgb(254,216,34)" fg:x="33" fg:w="1"/><text x="6.1640%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="5.9140%" y="724" width="0.1792%" height="15" fill="rgb(251,32,27)" fg:x="33" fg:w="1"/><text x="6.1640%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="5.9140%" y="740" width="0.1792%" height="15" fill="rgb(208,127,28)" fg:x="33" fg:w="1"/><text x="6.1640%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="5.9140%" y="756" width="0.1792%" height="15" fill="rgb(224,137,22)" fg:x="33" fg:w="1"/><text x="6.1640%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="5.9140%" y="772" width="0.1792%" height="15" fill="rgb(254,70,32)" fg:x="33" fg:w="1"/><text x="6.1640%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/series/formal.py:1619) (1 samples, 0.18%)</title><rect x="5.9140%" y="788" width="0.1792%" height="15" fill="rgb(229,75,37)" fg:x="33" fg:w="1"/><text x="6.1640%" y="798.50"></text></g><g><title>__init_subclass__ (sympy/core/basic.py:121) (1 samples, 0.18%)</title><rect x="5.9140%" y="804" width="0.1792%" height="15" fill="rgb(252,64,23)" fg:x="33" fg:w="1"/><text x="6.1640%" y="814.50"></text></g><g><title>_prepare_class_assumptions (sympy/core/assumptions.py:643) (1 samples, 0.18%)</title><rect x="5.9140%" y="820" width="0.1792%" height="15" fill="rgb(232,162,48)" fg:x="33" fg:w="1"/><text x="6.1640%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1024) (1 samples, 0.18%)</title><rect x="6.0932%" y="708" width="0.1792%" height="15" fill="rgb(246,160,12)" fg:x="34" fg:w="1"/><text x="6.3432%" y="718.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:170) (1 samples, 0.18%)</title><rect x="6.0932%" y="724" width="0.1792%" height="15" fill="rgb(247,166,0)" fg:x="34" fg:w="1"/><text x="6.3432%" y="734.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:209) (1 samples, 0.18%)</title><rect x="6.0932%" y="740" width="0.1792%" height="15" fill="rgb(249,219,21)" fg:x="34" fg:w="1"/><text x="6.3432%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="6.2724%" y="756" width="0.1792%" height="15" fill="rgb(205,209,3)" fg:x="35" fg:w="1"/><text x="6.5224%" y="766.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:984) (1 samples, 0.18%)</title><rect x="6.2724%" y="772" width="0.1792%" height="15" fill="rgb(243,44,1)" fg:x="35" fg:w="1"/><text x="6.5224%" y="782.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.18%)</title><rect x="6.2724%" y="788" width="0.1792%" height="15" fill="rgb(206,159,16)" fg:x="35" fg:w="1"/><text x="6.5224%" y="798.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:171) (3 samples, 0.54%)</title><rect x="6.0932%" y="596" width="0.5376%" height="15" fill="rgb(244,77,30)" fg:x="34" fg:w="3"/><text x="6.3432%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="6.0932%" y="612" width="0.5376%" height="15" fill="rgb(218,69,12)" fg:x="34" fg:w="3"/><text x="6.3432%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="6.0932%" y="628" width="0.5376%" height="15" fill="rgb(212,87,7)" fg:x="34" fg:w="3"/><text x="6.3432%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="6.0932%" y="644" width="0.5376%" height="15" fill="rgb(245,114,25)" fg:x="34" fg:w="3"/><text x="6.3432%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="6.0932%" y="660" width="0.5376%" height="15" fill="rgb(210,61,42)" fg:x="34" fg:w="3"/><text x="6.3432%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="6.0932%" y="676" width="0.5376%" height="15" fill="rgb(211,52,33)" fg:x="34" fg:w="3"/><text x="6.3432%" y="686.50"></text></g><g><title>&lt;module&gt; (sympy/solvers/__init__.py:17) (3 samples, 0.54%)</title><rect x="6.0932%" y="692" width="0.5376%" height="15" fill="rgb(234,58,33)" fg:x="34" fg:w="3"/><text x="6.3432%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="6.2724%" y="708" width="0.3584%" height="15" fill="rgb(220,115,36)" fg:x="35" fg:w="2"/><text x="6.5224%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="6.2724%" y="724" width="0.3584%" height="15" fill="rgb(243,153,54)" fg:x="35" fg:w="2"/><text x="6.5224%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="6.2724%" y="740" width="0.3584%" height="15" fill="rgb(251,47,18)" fg:x="35" fg:w="2"/><text x="6.5224%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="6.4516%" y="756" width="0.1792%" height="15" fill="rgb(242,102,42)" fg:x="36" fg:w="1"/><text x="6.7016%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="6.4516%" y="772" width="0.1792%" height="15" fill="rgb(234,31,38)" fg:x="36" fg:w="1"/><text x="6.7016%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/solvers/diophantine/__init__.py:1) (1 samples, 0.18%)</title><rect x="6.4516%" y="788" width="0.1792%" height="15" fill="rgb(221,117,51)" fg:x="36" fg:w="1"/><text x="6.7016%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="6.4516%" y="804" width="0.1792%" height="15" fill="rgb(212,20,18)" fg:x="36" fg:w="1"/><text x="6.7016%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="6.4516%" y="820" width="0.1792%" height="15" fill="rgb(245,133,36)" fg:x="36" fg:w="1"/><text x="6.7016%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="6.4516%" y="836" width="0.1792%" height="15" fill="rgb(212,6,19)" fg:x="36" fg:w="1"/><text x="6.7016%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="6.4516%" y="852" width="0.1792%" height="15" fill="rgb(218,1,36)" fg:x="36" fg:w="1"/><text x="6.7016%" y="862.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="6.4516%" y="868" width="0.1792%" height="15" fill="rgb(246,84,54)" fg:x="36" fg:w="1"/><text x="6.7016%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/geometry/entity.py:35) (1 samples, 0.18%)</title><rect x="6.6308%" y="884" width="0.1792%" height="15" fill="rgb(242,110,6)" fg:x="37" fg:w="1"/><text x="6.8808%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="6.6308%" y="900" width="0.1792%" height="15" fill="rgb(214,47,5)" fg:x="37" fg:w="1"/><text x="6.8808%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="6.6308%" y="916" width="0.1792%" height="15" fill="rgb(218,159,25)" fg:x="37" fg:w="1"/><text x="6.8808%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="6.6308%" y="932" width="0.1792%" height="15" fill="rgb(215,211,28)" fg:x="37" fg:w="1"/><text x="6.8808%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="6.6308%" y="948" width="0.1792%" height="15" fill="rgb(238,59,32)" fg:x="37" fg:w="1"/><text x="6.8808%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="6.6308%" y="964" width="0.1792%" height="15" fill="rgb(226,82,3)" fg:x="37" fg:w="1"/><text x="6.8808%" y="974.50"></text></g><g><title>&lt;module&gt; (sympy/sets/handlers/intersection.py:477) (1 samples, 0.18%)</title><rect x="6.6308%" y="980" width="0.1792%" height="15" fill="rgb(240,164,32)" fg:x="37" fg:w="1"/><text x="6.8808%" y="990.50"></text></g><g><title>_ (sympy/multipledispatch/dispatcher.py:148) (1 samples, 0.18%)</title><rect x="6.6308%" y="996" width="0.1792%" height="15" fill="rgb(232,46,7)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1006.50"></text></g><g><title>add (sympy/multipledispatch/dispatcher.py:219) (1 samples, 0.18%)</title><rect x="6.6308%" y="1012" width="0.1792%" height="15" fill="rgb(229,129,53)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1022.50"></text></g><g><title>reorder (sympy/multipledispatch/dispatcher.py:225) (1 samples, 0.18%)</title><rect x="6.6308%" y="1028" width="0.1792%" height="15" fill="rgb(234,188,29)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1038.50"></text></g><g><title>ambiguities (sympy/multipledispatch/conflict.py:27) (1 samples, 0.18%)</title><rect x="6.6308%" y="1044" width="0.1792%" height="15" fill="rgb(246,141,4)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1054.50"></text></g><g><title>&lt;setcomp&gt; (sympy/multipledispatch/conflict.py:29) (1 samples, 0.18%)</title><rect x="6.6308%" y="1060" width="0.1792%" height="15" fill="rgb(229,23,39)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1070.50"></text></g><g><title>ambiguous (sympy/multipledispatch/conflict.py:21) (1 samples, 0.18%)</title><rect x="6.6308%" y="1076" width="0.1792%" height="15" fill="rgb(206,12,3)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1086.50"></text></g><g><title>consistent (sympy/multipledispatch/conflict.py:16) (1 samples, 0.18%)</title><rect x="6.6308%" y="1092" width="0.1792%" height="15" fill="rgb(252,226,20)" fg:x="37" fg:w="1"/><text x="6.8808%" y="1102.50"></text></g><g><title>&lt;module&gt; (sympy/sets/handlers/union.py:146) (1 samples, 0.18%)</title><rect x="6.8100%" y="980" width="0.1792%" height="15" fill="rgb(216,123,35)" fg:x="38" fg:w="1"/><text x="7.0600%" y="990.50"></text></g><g><title>_ (sympy/multipledispatch/dispatcher.py:148) (1 samples, 0.18%)</title><rect x="6.8100%" y="996" width="0.1792%" height="15" fill="rgb(212,68,40)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1006.50"></text></g><g><title>add (sympy/multipledispatch/dispatcher.py:219) (1 samples, 0.18%)</title><rect x="6.8100%" y="1012" width="0.1792%" height="15" fill="rgb(254,125,32)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1022.50"></text></g><g><title>reorder (sympy/multipledispatch/dispatcher.py:224) (1 samples, 0.18%)</title><rect x="6.8100%" y="1028" width="0.1792%" height="15" fill="rgb(253,97,22)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1038.50"></text></g><g><title>ordering (sympy/multipledispatch/conflict.py:62) (1 samples, 0.18%)</title><rect x="6.8100%" y="1044" width="0.1792%" height="15" fill="rgb(241,101,14)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1054.50"></text></g><g><title>&lt;listcomp&gt; (sympy/multipledispatch/conflict.py:62) (1 samples, 0.18%)</title><rect x="6.8100%" y="1060" width="0.1792%" height="15" fill="rgb(238,103,29)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1070.50"></text></g><g><title>edge (sympy/multipledispatch/conflict.py:48) (1 samples, 0.18%)</title><rect x="6.8100%" y="1076" width="0.1792%" height="15" fill="rgb(233,195,47)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1086.50"></text></g><g><title>supercedes (sympy/multipledispatch/conflict.py:9) (1 samples, 0.18%)</title><rect x="6.8100%" y="1092" width="0.1792%" height="15" fill="rgb(246,218,30)" fg:x="38" fg:w="1"/><text x="7.0600%" y="1102.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:198) (3 samples, 0.54%)</title><rect x="6.6308%" y="596" width="0.5376%" height="15" fill="rgb(219,145,47)" fg:x="37" fg:w="3"/><text x="6.8808%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="6.6308%" y="612" width="0.5376%" height="15" fill="rgb(243,12,26)" fg:x="37" fg:w="3"/><text x="6.8808%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="6.6308%" y="628" width="0.5376%" height="15" fill="rgb(214,87,16)" fg:x="37" fg:w="3"/><text x="6.8808%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="6.6308%" y="644" width="0.5376%" height="15" fill="rgb(208,99,42)" fg:x="37" fg:w="3"/><text x="6.8808%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="6.6308%" y="660" width="0.5376%" height="15" fill="rgb(253,99,2)" fg:x="37" fg:w="3"/><text x="6.8808%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="6.6308%" y="676" width="0.5376%" height="15" fill="rgb(220,168,23)" fg:x="37" fg:w="3"/><text x="6.8808%" y="686.50"></text></g><g><title>&lt;module&gt; (sympy/geometry/__init__.py:13) (3 samples, 0.54%)</title><rect x="6.6308%" y="692" width="0.5376%" height="15" fill="rgb(242,38,24)" fg:x="37" fg:w="3"/><text x="6.8808%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="6.6308%" y="708" width="0.5376%" height="15" fill="rgb(225,182,9)" fg:x="37" fg:w="3"/><text x="6.8808%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="6.6308%" y="724" width="0.5376%" height="15" fill="rgb(243,178,37)" fg:x="37" fg:w="3"/><text x="6.8808%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="6.6308%" y="740" width="0.5376%" height="15" fill="rgb(232,139,19)" fg:x="37" fg:w="3"/><text x="6.8808%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="6.6308%" y="756" width="0.5376%" height="15" fill="rgb(225,201,24)" fg:x="37" fg:w="3"/><text x="6.8808%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="6.6308%" y="772" width="0.5376%" height="15" fill="rgb(221,47,46)" fg:x="37" fg:w="3"/><text x="6.8808%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/geometry/point.py:37) (3 samples, 0.54%)</title><rect x="6.6308%" y="788" width="0.5376%" height="15" fill="rgb(249,23,13)" fg:x="37" fg:w="3"/><text x="6.8808%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="6.6308%" y="804" width="0.5376%" height="15" fill="rgb(219,9,5)" fg:x="37" fg:w="3"/><text x="6.8808%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="6.6308%" y="820" width="0.5376%" height="15" fill="rgb(254,171,16)" fg:x="37" fg:w="3"/><text x="6.8808%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="6.6308%" y="836" width="0.5376%" height="15" fill="rgb(230,171,20)" fg:x="37" fg:w="3"/><text x="6.8808%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="6.6308%" y="852" width="0.5376%" height="15" fill="rgb(210,71,41)" fg:x="37" fg:w="3"/><text x="6.8808%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="6.6308%" y="868" width="0.5376%" height="15" fill="rgb(206,173,20)" fg:x="37" fg:w="3"/><text x="6.8808%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/geometry/entity.py:36) (2 samples, 0.36%)</title><rect x="6.8100%" y="884" width="0.3584%" height="15" fill="rgb(233,88,34)" fg:x="38" fg:w="2"/><text x="7.0600%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="6.8100%" y="900" width="0.3584%" height="15" fill="rgb(223,209,46)" fg:x="38" fg:w="2"/><text x="7.0600%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="6.8100%" y="916" width="0.3584%" height="15" fill="rgb(250,43,18)" fg:x="38" fg:w="2"/><text x="7.0600%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="6.8100%" y="932" width="0.3584%" height="15" fill="rgb(208,13,10)" fg:x="38" fg:w="2"/><text x="7.0600%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="6.8100%" y="948" width="0.3584%" height="15" fill="rgb(212,200,36)" fg:x="38" fg:w="2"/><text x="7.0600%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="6.8100%" y="964" width="0.3584%" height="15" fill="rgb(225,90,30)" fg:x="38" fg:w="2"/><text x="7.0600%" y="974.50"></text></g><g><title>&lt;module&gt; (sympy/sets/handlers/union.py:67) (1 samples, 0.18%)</title><rect x="6.9892%" y="980" width="0.1792%" height="15" fill="rgb(236,182,39)" fg:x="39" fg:w="1"/><text x="7.2392%" y="990.50"></text></g><g><title>_ (sympy/multipledispatch/dispatcher.py:148) (1 samples, 0.18%)</title><rect x="6.9892%" y="996" width="0.1792%" height="15" fill="rgb(212,144,35)" fg:x="39" fg:w="1"/><text x="7.2392%" y="1006.50"></text></g><g><title>add (sympy/multipledispatch/dispatcher.py:219) (1 samples, 0.18%)</title><rect x="6.9892%" y="1012" width="0.1792%" height="15" fill="rgb(228,63,44)" fg:x="39" fg:w="1"/><text x="7.2392%" y="1022.50"></text></g><g><title>reorder (sympy/multipledispatch/dispatcher.py:225) (1 samples, 0.18%)</title><rect x="6.9892%" y="1028" width="0.1792%" height="15" fill="rgb(228,109,6)" fg:x="39" fg:w="1"/><text x="7.2392%" y="1038.50"></text></g><g><title>ambiguities (sympy/multipledispatch/conflict.py:27) (1 samples, 0.18%)</title><rect x="6.9892%" y="1044" width="0.1792%" height="15" fill="rgb(238,117,24)" fg:x="39" fg:w="1"/><text x="7.2392%" y="1054.50"></text></g><g><title>&lt;setcomp&gt; (sympy/multipledispatch/conflict.py:28) (1 samples, 0.18%)</title><rect x="6.9892%" y="1060" width="0.1792%" height="15" fill="rgb(242,26,26)" fg:x="39" fg:w="1"/><text x="7.2392%" y="1070.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_fp.py:1) (1 samples, 0.18%)</title><rect x="7.1685%" y="788" width="0.1792%" height="15" fill="rgb(221,92,48)" fg:x="40" fg:w="1"/><text x="7.4185%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.1685%" y="804" width="0.1792%" height="15" fill="rgb(209,209,32)" fg:x="40" fg:w="1"/><text x="7.4185%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.1685%" y="820" width="0.1792%" height="15" fill="rgb(221,70,22)" fg:x="40" fg:w="1"/><text x="7.4185%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.1685%" y="836" width="0.1792%" height="15" fill="rgb(248,145,5)" fg:x="40" fg:w="1"/><text x="7.4185%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.1685%" y="852" width="0.1792%" height="15" fill="rgb(226,116,26)" fg:x="40" fg:w="1"/><text x="7.4185%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.1685%" y="868" width="0.1792%" height="15" fill="rgb(244,5,17)" fg:x="40" fg:w="1"/><text x="7.4185%" y="878.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_base.py:7) (1 samples, 0.18%)</title><rect x="7.1685%" y="884" width="0.1792%" height="15" fill="rgb(252,159,33)" fg:x="40" fg:w="1"/><text x="7.4185%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.1685%" y="900" width="0.1792%" height="15" fill="rgb(206,71,0)" fg:x="40" fg:w="1"/><text x="7.4185%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (1 samples, 0.18%)</title><rect x="7.1685%" y="916" width="0.1792%" height="15" fill="rgb(233,118,54)" fg:x="40" fg:w="1"/><text x="7.4185%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.1685%" y="932" width="0.1792%" height="15" fill="rgb(234,83,48)" fg:x="40" fg:w="1"/><text x="7.4185%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.1685%" y="948" width="0.1792%" height="15" fill="rgb(228,3,54)" fg:x="40" fg:w="1"/><text x="7.4185%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.1685%" y="964" width="0.1792%" height="15" fill="rgb(226,155,13)" fg:x="40" fg:w="1"/><text x="7.4185%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.1685%" y="980" width="0.1792%" height="15" fill="rgb(241,28,37)" fg:x="40" fg:w="1"/><text x="7.4185%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.1685%" y="996" width="0.1792%" height="15" fill="rgb(233,93,10)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.1685%" y="1012" width="0.1792%" height="15" fill="rgb(225,113,19)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1022.50"></text></g><g><title>&lt;module&gt; (mpmath/calculus/__init__.py:6) (1 samples, 0.18%)</title><rect x="7.1685%" y="1028" width="0.1792%" height="15" fill="rgb(241,2,18)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="7.1685%" y="1044" width="0.1792%" height="15" fill="rgb(228,207,21)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.1685%" y="1060" width="0.1792%" height="15" fill="rgb(213,211,35)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.1685%" y="1076" width="0.1792%" height="15" fill="rgb(209,83,10)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1002) (1 samples, 0.18%)</title><rect x="7.1685%" y="1092" width="0.1792%" height="15" fill="rgb(209,164,1)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:945) (1 samples, 0.18%)</title><rect x="7.1685%" y="1108" width="0.1792%" height="15" fill="rgb(213,184,43)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1439) (1 samples, 0.18%)</title><rect x="7.1685%" y="1124" width="0.1792%" height="15" fill="rgb(231,61,34)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1411) (1 samples, 0.18%)</title><rect x="7.1685%" y="1140" width="0.1792%" height="15" fill="rgb(235,75,3)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1544) (1 samples, 0.18%)</title><rect x="7.1685%" y="1156" width="0.1792%" height="15" fill="rgb(220,106,47)" fg:x="40" fg:w="1"/><text x="7.4185%" y="1166.50"></text></g><g><title>&lt;module&gt; (mpmath/__init__.py:5) (2 samples, 0.36%)</title><rect x="7.1685%" y="692" width="0.3584%" height="15" fill="rgb(210,196,33)" fg:x="40" fg:w="2"/><text x="7.4185%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="7.1685%" y="708" width="0.3584%" height="15" fill="rgb(229,154,42)" fg:x="40" fg:w="2"/><text x="7.4185%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="7.1685%" y="724" width="0.3584%" height="15" fill="rgb(228,114,26)" fg:x="40" fg:w="2"/><text x="7.4185%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="7.1685%" y="740" width="0.3584%" height="15" fill="rgb(208,144,1)" fg:x="40" fg:w="2"/><text x="7.4185%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="7.1685%" y="756" width="0.3584%" height="15" fill="rgb(239,112,37)" fg:x="40" fg:w="2"/><text x="7.4185%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="7.1685%" y="772" width="0.3584%" height="15" fill="rgb(210,96,50)" fg:x="40" fg:w="2"/><text x="7.4185%" y="782.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_fp.py:7) (1 samples, 0.18%)</title><rect x="7.3477%" y="788" width="0.1792%" height="15" fill="rgb(222,178,2)" fg:x="41" fg:w="1"/><text x="7.5977%" y="798.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="7.3477%" y="804" width="0.1792%" height="15" fill="rgb(226,74,18)" fg:x="41" fg:w="1"/><text x="7.5977%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.3477%" y="820" width="0.1792%" height="15" fill="rgb(225,67,54)" fg:x="41" fg:w="1"/><text x="7.5977%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.3477%" y="836" width="0.1792%" height="15" fill="rgb(251,92,32)" fg:x="41" fg:w="1"/><text x="7.5977%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.3477%" y="852" width="0.1792%" height="15" fill="rgb(228,149,22)" fg:x="41" fg:w="1"/><text x="7.5977%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.3477%" y="868" width="0.1792%" height="15" fill="rgb(243,54,13)" fg:x="41" fg:w="1"/><text x="7.5977%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="7.3477%" y="884" width="0.1792%" height="15" fill="rgb(243,180,28)" fg:x="41" fg:w="1"/><text x="7.5977%" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="7.3477%" y="900" width="0.1792%" height="15" fill="rgb(208,167,24)" fg:x="41" fg:w="1"/><text x="7.5977%" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="7.3477%" y="916" width="0.1792%" height="15" fill="rgb(245,73,45)" fg:x="41" fg:w="1"/><text x="7.5977%" y="926.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="7.3477%" y="932" width="0.1792%" height="15" fill="rgb(237,203,48)" fg:x="41" fg:w="1"/><text x="7.5977%" y="942.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="7.3477%" y="948" width="0.1792%" height="15" fill="rgb(211,197,16)" fg:x="41" fg:w="1"/><text x="7.5977%" y="958.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:22) (3 samples, 0.54%)</title><rect x="7.1685%" y="596" width="0.5376%" height="15" fill="rgb(243,99,51)" fg:x="40" fg:w="3"/><text x="7.4185%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="7.1685%" y="612" width="0.5376%" height="15" fill="rgb(215,123,29)" fg:x="40" fg:w="3"/><text x="7.4185%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="7.1685%" y="628" width="0.5376%" height="15" fill="rgb(239,186,37)" fg:x="40" fg:w="3"/><text x="7.4185%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="7.1685%" y="644" width="0.5376%" height="15" fill="rgb(252,136,39)" fg:x="40" fg:w="3"/><text x="7.4185%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="7.1685%" y="660" width="0.5376%" height="15" fill="rgb(223,213,32)" fg:x="40" fg:w="3"/><text x="7.4185%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="7.1685%" y="676" width="0.5376%" height="15" fill="rgb(233,115,5)" fg:x="40" fg:w="3"/><text x="7.4185%" y="686.50"></text></g><g><title>&lt;module&gt; (mpmath/__init__.py:6) (1 samples, 0.18%)</title><rect x="7.5269%" y="692" width="0.1792%" height="15" fill="rgb(207,226,44)" fg:x="42" fg:w="1"/><text x="7.7769%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.5269%" y="708" width="0.1792%" height="15" fill="rgb(208,126,0)" fg:x="42" fg:w="1"/><text x="7.7769%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.5269%" y="724" width="0.1792%" height="15" fill="rgb(244,66,21)" fg:x="42" fg:w="1"/><text x="7.7769%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.5269%" y="740" width="0.1792%" height="15" fill="rgb(222,97,12)" fg:x="42" fg:w="1"/><text x="7.7769%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.5269%" y="756" width="0.1792%" height="15" fill="rgb(219,213,19)" fg:x="42" fg:w="1"/><text x="7.7769%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.5269%" y="772" width="0.1792%" height="15" fill="rgb(252,169,30)" fg:x="42" fg:w="1"/><text x="7.7769%" y="782.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_mp.py:53) (1 samples, 0.18%)</title><rect x="7.5269%" y="788" width="0.1792%" height="15" fill="rgb(206,32,51)" fg:x="42" fg:w="1"/><text x="7.7769%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.5269%" y="804" width="0.1792%" height="15" fill="rgb(250,172,42)" fg:x="42" fg:w="1"/><text x="7.7769%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.5269%" y="820" width="0.1792%" height="15" fill="rgb(209,34,43)" fg:x="42" fg:w="1"/><text x="7.7769%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.5269%" y="836" width="0.1792%" height="15" fill="rgb(223,11,35)" fg:x="42" fg:w="1"/><text x="7.7769%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="7.5269%" y="852" width="0.1792%" height="15" fill="rgb(251,219,26)" fg:x="42" fg:w="1"/><text x="7.7769%" y="862.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="7.5269%" y="868" width="0.1792%" height="15" fill="rgb(231,119,3)" fg:x="42" fg:w="1"/><text x="7.7769%" y="878.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="7.5269%" y="884" width="0.1792%" height="15" fill="rgb(216,97,11)" fg:x="42" fg:w="1"/><text x="7.7769%" y="894.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:71) (1 samples, 0.18%)</title><rect x="7.7061%" y="596" width="0.1792%" height="15" fill="rgb(223,59,9)" fg:x="43" fg:w="1"/><text x="7.9561%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.7061%" y="612" width="0.1792%" height="15" fill="rgb(233,93,31)" fg:x="43" fg:w="1"/><text x="7.9561%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.7061%" y="628" width="0.1792%" height="15" fill="rgb(239,81,33)" fg:x="43" fg:w="1"/><text x="7.9561%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.7061%" y="644" width="0.1792%" height="15" fill="rgb(213,120,34)" fg:x="43" fg:w="1"/><text x="7.9561%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.7061%" y="660" width="0.1792%" height="15" fill="rgb(243,49,53)" fg:x="43" fg:w="1"/><text x="7.9561%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.7061%" y="676" width="0.1792%" height="15" fill="rgb(247,216,33)" fg:x="43" fg:w="1"/><text x="7.9561%" y="686.50"></text></g><g><title>&lt;module&gt; (sympy/assumptions/__init__.py:9) (1 samples, 0.18%)</title><rect x="7.7061%" y="692" width="0.1792%" height="15" fill="rgb(226,26,14)" fg:x="43" fg:w="1"/><text x="7.9561%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.7061%" y="708" width="0.1792%" height="15" fill="rgb(215,49,53)" fg:x="43" fg:w="1"/><text x="7.9561%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.7061%" y="724" width="0.1792%" height="15" fill="rgb(245,162,40)" fg:x="43" fg:w="1"/><text x="7.9561%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.7061%" y="740" width="0.1792%" height="15" fill="rgb(229,68,17)" fg:x="43" fg:w="1"/><text x="7.9561%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="7.7061%" y="756" width="0.1792%" height="15" fill="rgb(213,182,10)" fg:x="43" fg:w="1"/><text x="7.9561%" y="766.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="7.7061%" y="772" width="0.1792%" height="15" fill="rgb(245,125,30)" fg:x="43" fg:w="1"/><text x="7.9561%" y="782.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="7.7061%" y="788" width="0.1792%" height="15" fill="rgb(232,202,2)" fg:x="43" fg:w="1"/><text x="7.9561%" y="798.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:123) (1 samples, 0.18%)</title><rect x="7.8853%" y="692" width="0.1792%" height="15" fill="rgb(237,140,51)" fg:x="44" fg:w="1"/><text x="8.1353%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="708" width="0.1792%" height="15" fill="rgb(236,157,25)" fg:x="44" fg:w="1"/><text x="8.1353%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="724" width="0.1792%" height="15" fill="rgb(219,209,0)" fg:x="44" fg:w="1"/><text x="8.1353%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="740" width="0.1792%" height="15" fill="rgb(240,116,54)" fg:x="44" fg:w="1"/><text x="8.1353%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="756" width="0.1792%" height="15" fill="rgb(216,10,36)" fg:x="44" fg:w="1"/><text x="8.1353%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="772" width="0.1792%" height="15" fill="rgb(222,72,44)" fg:x="44" fg:w="1"/><text x="8.1353%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/polys/partfrac.py:15) (1 samples, 0.18%)</title><rect x="7.8853%" y="788" width="0.1792%" height="15" fill="rgb(232,159,9)" fg:x="44" fg:w="1"/><text x="8.1353%" y="798.50"></text></g><g><title>xthreaded (sympy/utilities/decorator.py:76) (1 samples, 0.18%)</title><rect x="7.8853%" y="804" width="0.1792%" height="15" fill="rgb(210,39,32)" fg:x="44" fg:w="1"/><text x="8.1353%" y="814.50"></text></g><g><title>threaded_factory (sympy/utilities/decorator.py:13) (1 samples, 0.18%)</title><rect x="7.8853%" y="820" width="0.1792%" height="15" fill="rgb(216,194,45)" fg:x="44" fg:w="1"/><text x="8.1353%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="836" width="0.1792%" height="15" fill="rgb(218,18,35)" fg:x="44" fg:w="1"/><text x="8.1353%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="852" width="0.1792%" height="15" fill="rgb(207,83,51)" fg:x="44" fg:w="1"/><text x="8.1353%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="868" width="0.1792%" height="15" fill="rgb(225,63,43)" fg:x="44" fg:w="1"/><text x="8.1353%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="884" width="0.1792%" height="15" fill="rgb(207,57,36)" fg:x="44" fg:w="1"/><text x="8.1353%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="900" width="0.1792%" height="15" fill="rgb(216,99,33)" fg:x="44" fg:w="1"/><text x="8.1353%" y="910.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/__init__.py:21) (1 samples, 0.18%)</title><rect x="7.8853%" y="916" width="0.1792%" height="15" fill="rgb(225,42,16)" fg:x="44" fg:w="1"/><text x="8.1353%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="932" width="0.1792%" height="15" fill="rgb(220,201,45)" fg:x="44" fg:w="1"/><text x="8.1353%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="948" width="0.1792%" height="15" fill="rgb(225,33,4)" fg:x="44" fg:w="1"/><text x="8.1353%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="964" width="0.1792%" height="15" fill="rgb(224,33,50)" fg:x="44" fg:w="1"/><text x="8.1353%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="980" width="0.1792%" height="15" fill="rgb(246,198,51)" fg:x="44" fg:w="1"/><text x="8.1353%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="996" width="0.1792%" height="15" fill="rgb(205,22,4)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1006.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/immutable.py:8) (1 samples, 0.18%)</title><rect x="7.8853%" y="1012" width="0.1792%" height="15" fill="rgb(206,3,8)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="1028" width="0.1792%" height="15" fill="rgb(251,23,15)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="1044" width="0.1792%" height="15" fill="rgb(252,88,28)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="1060" width="0.1792%" height="15" fill="rgb(212,127,14)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="1076" width="0.1792%" height="15" fill="rgb(247,145,37)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="1092" width="0.1792%" height="15" fill="rgb(209,117,53)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1102.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/expressions/__init__.py:3) (1 samples, 0.18%)</title><rect x="7.8853%" y="1108" width="0.1792%" height="15" fill="rgb(212,90,42)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="1124" width="0.1792%" height="15" fill="rgb(218,164,37)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="1140" width="0.1792%" height="15" fill="rgb(246,65,34)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="1156" width="0.1792%" height="15" fill="rgb(231,100,33)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="1172" width="0.1792%" height="15" fill="rgb(228,126,14)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="1188" width="0.1792%" height="15" fill="rgb(215,173,21)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1198.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/expressions/slice.py:1) (1 samples, 0.18%)</title><rect x="7.8853%" y="1204" width="0.1792%" height="15" fill="rgb(210,6,40)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="7.8853%" y="1220" width="0.1792%" height="15" fill="rgb(212,48,18)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="7.8853%" y="1236" width="0.1792%" height="15" fill="rgb(230,214,11)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="7.8853%" y="1252" width="0.1792%" height="15" fill="rgb(254,105,39)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="7.8853%" y="1268" width="0.1792%" height="15" fill="rgb(245,158,5)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="7.8853%" y="1284" width="0.1792%" height="15" fill="rgb(249,208,11)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1294.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/expressions/matexpr.py:469) (1 samples, 0.18%)</title><rect x="7.8853%" y="1300" width="0.1792%" height="15" fill="rgb(210,39,28)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1310.50"></text></g><g><title>_ (sympy/multipledispatch/core.py:71) (1 samples, 0.18%)</title><rect x="7.8853%" y="1316" width="0.1792%" height="15" fill="rgb(211,56,53)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1326.50"></text></g><g><title>add (sympy/multipledispatch/dispatcher.py:219) (1 samples, 0.18%)</title><rect x="7.8853%" y="1332" width="0.1792%" height="15" fill="rgb(226,201,30)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1342.50"></text></g><g><title>reorder (sympy/multipledispatch/dispatcher.py:225) (1 samples, 0.18%)</title><rect x="7.8853%" y="1348" width="0.1792%" height="15" fill="rgb(239,101,34)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1358.50"></text></g><g><title>ambiguities (sympy/multipledispatch/conflict.py:27) (1 samples, 0.18%)</title><rect x="7.8853%" y="1364" width="0.1792%" height="15" fill="rgb(226,209,5)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1374.50"></text></g><g><title>&lt;setcomp&gt; (sympy/multipledispatch/conflict.py:29) (1 samples, 0.18%)</title><rect x="7.8853%" y="1380" width="0.1792%" height="15" fill="rgb(250,105,47)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1390.50"></text></g><g><title>ambiguous (sympy/multipledispatch/conflict.py:21) (1 samples, 0.18%)</title><rect x="7.8853%" y="1396" width="0.1792%" height="15" fill="rgb(230,72,3)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1406.50"></text></g><g><title>consistent (sympy/multipledispatch/conflict.py:15) (1 samples, 0.18%)</title><rect x="7.8853%" y="1412" width="0.1792%" height="15" fill="rgb(232,218,39)" fg:x="44" fg:w="1"/><text x="8.1353%" y="1422.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:17) (1 samples, 0.18%)</title><rect x="8.0645%" y="1652" width="0.1792%" height="15" fill="rgb(248,166,6)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="8.0645%" y="1668" width="0.1792%" height="15" fill="rgb(247,89,20)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="8.0645%" y="1684" width="0.1792%" height="15" fill="rgb(248,130,54)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="8.0645%" y="1700" width="0.1792%" height="15" fill="rgb(234,196,4)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="8.0645%" y="1716" width="0.1792%" height="15" fill="rgb(250,143,31)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="8.0645%" y="1732" width="0.1792%" height="15" fill="rgb(211,110,34)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1742.50"></text></g><g><title>&lt;module&gt; (sympy/functions/elementary/trigonometric.py:1681) (1 samples, 0.18%)</title><rect x="8.0645%" y="1748" width="0.1792%" height="15" fill="rgb(215,124,48)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1758.50"></text></g><g><title>__init_subclass__ (sympy/core/basic.py:121) (1 samples, 0.18%)</title><rect x="8.0645%" y="1764" width="0.1792%" height="15" fill="rgb(216,46,13)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1774.50"></text></g><g><title>_prepare_class_assumptions (sympy/core/assumptions.py:623) (1 samples, 0.18%)</title><rect x="8.0645%" y="1780" width="0.1792%" height="15" fill="rgb(205,184,25)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1790.50"></text></g><g><title>as_property (sympy/core/assumptions.py:491) (1 samples, 0.18%)</title><rect x="8.0645%" y="1796" width="0.1792%" height="15" fill="rgb(228,1,10)" fg:x="45" fg:w="1"/><text x="8.3145%" y="1806.50"></text></g><g><title>&lt;module&gt; (sympy/sets/__init__.py:6) (1 samples, 0.18%)</title><rect x="8.2437%" y="1892" width="0.1792%" height="15" fill="rgb(213,116,27)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="8.2437%" y="1908" width="0.1792%" height="15" fill="rgb(241,95,50)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="8.2437%" y="1924" width="0.1792%" height="15" fill="rgb(238,48,32)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="8.2437%" y="1940" width="0.1792%" height="15" fill="rgb(235,113,49)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="8.2437%" y="1956" width="0.1792%" height="15" fill="rgb(205,127,43)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="8.2437%" y="1972" width="0.1792%" height="15" fill="rgb(250,162,2)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1982.50"></text></g><g><title>&lt;module&gt; (sympy/sets/contains.py:8) (1 samples, 0.18%)</title><rect x="8.2437%" y="1988" width="0.1792%" height="15" fill="rgb(220,13,41)" fg:x="46" fg:w="1"/><text x="8.4937%" y="1998.50"></text></g><g><title>__init__ (sympy/core/function.py:165) (1 samples, 0.18%)</title><rect x="8.2437%" y="2004" width="0.1792%" height="15" fill="rgb(249,221,25)" fg:x="46" fg:w="1"/><text x="8.4937%" y="2014.50"></text></g><g><title>arity (sympy/core/function.py:144) (1 samples, 0.18%)</title><rect x="8.2437%" y="2020" width="0.1792%" height="15" fill="rgb(215,208,19)" fg:x="46" fg:w="1"/><text x="8.4937%" y="2030.50"></text></g><g><title>signature (inspect.py:3254) (1 samples, 0.18%)</title><rect x="8.2437%" y="2036" width="0.1792%" height="15" fill="rgb(236,175,2)" fg:x="46" fg:w="1"/><text x="8.4937%" y="2046.50"></text></g><g><title>from_callable (inspect.py:3002) (1 samples, 0.18%)</title><rect x="8.2437%" y="2052" width="0.1792%" height="15" fill="rgb(241,52,2)" fg:x="46" fg:w="1"/><text x="8.4937%" y="2062.50"></text></g><g><title>_signature_from_callable (inspect.py:2398) (1 samples, 0.18%)</title><rect x="8.2437%" y="2068" width="0.1792%" height="15" fill="rgb(248,140,14)" fg:x="46" fg:w="1"/><text x="8.4937%" y="2078.50"></text></g><g><title>&lt;module&gt; (sympy/printing/latex.py:18) (3 samples, 0.54%)</title><rect x="8.0645%" y="1220" width="0.5376%" height="15" fill="rgb(253,22,42)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1236" width="0.5376%" height="15" fill="rgb(234,61,47)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (3 samples, 0.54%)</title><rect x="8.0645%" y="1252" width="0.5376%" height="15" fill="rgb(208,226,15)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1268" width="0.5376%" height="15" fill="rgb(217,221,4)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1284" width="0.5376%" height="15" fill="rgb(212,174,34)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="8.0645%" y="1300" width="0.5376%" height="15" fill="rgb(253,83,4)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="8.0645%" y="1316" width="0.5376%" height="15" fill="rgb(250,195,49)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="8.0645%" y="1332" width="0.5376%" height="15" fill="rgb(241,192,25)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1348" width="0.5376%" height="15" fill="rgb(208,124,10)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1358.50"></text></g><g><title>&lt;module&gt; (sympy/tensor/__init__.py:4) (3 samples, 0.54%)</title><rect x="8.0645%" y="1364" width="0.5376%" height="15" fill="rgb(222,33,0)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1380" width="0.5376%" height="15" fill="rgb(234,209,28)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="8.0645%" y="1396" width="0.5376%" height="15" fill="rgb(224,11,23)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="8.0645%" y="1412" width="0.5376%" height="15" fill="rgb(232,99,1)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="8.0645%" y="1428" width="0.5376%" height="15" fill="rgb(237,95,45)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1444" width="0.5376%" height="15" fill="rgb(208,109,11)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1454.50"></text></g><g><title>&lt;module&gt; (sympy/tensor/indexed.py:114) (3 samples, 0.54%)</title><rect x="8.0645%" y="1460" width="0.5376%" height="15" fill="rgb(216,190,48)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1476" width="0.5376%" height="15" fill="rgb(251,171,36)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (3 samples, 0.54%)</title><rect x="8.0645%" y="1492" width="0.5376%" height="15" fill="rgb(230,62,22)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1508" width="0.5376%" height="15" fill="rgb(225,114,35)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1524" width="0.5376%" height="15" fill="rgb(215,118,42)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (3 samples, 0.54%)</title><rect x="8.0645%" y="1540" width="0.5376%" height="15" fill="rgb(243,119,21)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1556" width="0.5376%" height="15" fill="rgb(252,177,53)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="8.0645%" y="1572" width="0.5376%" height="15" fill="rgb(237,209,29)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="8.0645%" y="1588" width="0.5376%" height="15" fill="rgb(212,65,23)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="8.0645%" y="1604" width="0.5376%" height="15" fill="rgb(230,222,46)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="8.0645%" y="1620" width="0.5376%" height="15" fill="rgb(215,135,32)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="8.0645%" y="1636" width="0.5376%" height="15" fill="rgb(246,101,22)" fg:x="45" fg:w="3"/><text x="8.3145%" y="1646.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:37) (2 samples, 0.36%)</title><rect x="8.2437%" y="1652" width="0.3584%" height="15" fill="rgb(206,107,13)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="8.2437%" y="1668" width="0.3584%" height="15" fill="rgb(250,100,44)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="8.2437%" y="1684" width="0.3584%" height="15" fill="rgb(231,147,38)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="8.2437%" y="1700" width="0.3584%" height="15" fill="rgb(229,8,40)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="8.2437%" y="1716" width="0.3584%" height="15" fill="rgb(221,135,30)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="8.2437%" y="1732" width="0.3584%" height="15" fill="rgb(249,193,18)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1742.50"></text></g><g><title>&lt;module&gt; (sympy/functions/special/bsplines.py:5) (2 samples, 0.36%)</title><rect x="8.2437%" y="1748" width="0.3584%" height="15" fill="rgb(209,133,39)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="8.2437%" y="1764" width="0.3584%" height="15" fill="rgb(232,100,14)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.36%)</title><rect x="8.2437%" y="1780" width="0.3584%" height="15" fill="rgb(224,185,1)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="8.2437%" y="1796" width="0.3584%" height="15" fill="rgb(223,139,8)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="8.2437%" y="1812" width="0.3584%" height="15" fill="rgb(232,213,38)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="8.2437%" y="1828" width="0.3584%" height="15" fill="rgb(207,94,22)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="8.2437%" y="1844" width="0.3584%" height="15" fill="rgb(219,183,54)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="8.2437%" y="1860" width="0.3584%" height="15" fill="rgb(216,185,54)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="8.2437%" y="1876" width="0.3584%" height="15" fill="rgb(254,217,39)" fg:x="46" fg:w="2"/><text x="8.4937%" y="1886.50"></text></g><g><title>&lt;module&gt; (sympy/sets/__init__.py:9) (1 samples, 0.18%)</title><rect x="8.4229%" y="1892" width="0.1792%" height="15" fill="rgb(240,178,23)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="8.4229%" y="1908" width="0.1792%" height="15" fill="rgb(218,11,47)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="8.4229%" y="1924" width="0.1792%" height="15" fill="rgb(218,51,51)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="8.4229%" y="1940" width="0.1792%" height="15" fill="rgb(238,126,27)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="8.4229%" y="1956" width="0.1792%" height="15" fill="rgb(249,202,22)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1966.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="8.4229%" y="1972" width="0.1792%" height="15" fill="rgb(254,195,49)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1982.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="8.4229%" y="1988" width="0.1792%" height="15" fill="rgb(208,123,14)" fg:x="47" fg:w="1"/><text x="8.6729%" y="1998.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:78) (4 samples, 0.72%)</title><rect x="8.0645%" y="692" width="0.7168%" height="15" fill="rgb(224,200,8)" fg:x="45" fg:w="4"/><text x="8.3145%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="708" width="0.7168%" height="15" fill="rgb(217,61,36)" fg:x="45" fg:w="4"/><text x="8.3145%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.0645%" y="724" width="0.7168%" height="15" fill="rgb(206,35,45)" fg:x="45" fg:w="4"/><text x="8.3145%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.0645%" y="740" width="0.7168%" height="15" fill="rgb(217,65,33)" fg:x="45" fg:w="4"/><text x="8.3145%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.0645%" y="756" width="0.7168%" height="15" fill="rgb(222,158,48)" fg:x="45" fg:w="4"/><text x="8.3145%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="772" width="0.7168%" height="15" fill="rgb(254,2,54)" fg:x="45" fg:w="4"/><text x="8.3145%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/polys/polyfuncs.py:10) (4 samples, 0.72%)</title><rect x="8.0645%" y="788" width="0.7168%" height="15" fill="rgb(250,143,38)" fg:x="45" fg:w="4"/><text x="8.3145%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="804" width="0.7168%" height="15" fill="rgb(248,25,0)" fg:x="45" fg:w="4"/><text x="8.3145%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.0645%" y="820" width="0.7168%" height="15" fill="rgb(206,152,27)" fg:x="45" fg:w="4"/><text x="8.3145%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.0645%" y="836" width="0.7168%" height="15" fill="rgb(240,77,30)" fg:x="45" fg:w="4"/><text x="8.3145%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.0645%" y="852" width="0.7168%" height="15" fill="rgb(231,5,3)" fg:x="45" fg:w="4"/><text x="8.3145%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="868" width="0.7168%" height="15" fill="rgb(207,226,32)" fg:x="45" fg:w="4"/><text x="8.3145%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/polys/specialpolys.py:298) (4 samples, 0.72%)</title><rect x="8.0645%" y="884" width="0.7168%" height="15" fill="rgb(222,207,47)" fg:x="45" fg:w="4"/><text x="8.3145%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="900" width="0.7168%" height="15" fill="rgb(229,115,45)" fg:x="45" fg:w="4"/><text x="8.3145%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.0645%" y="916" width="0.7168%" height="15" fill="rgb(224,191,6)" fg:x="45" fg:w="4"/><text x="8.3145%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.0645%" y="932" width="0.7168%" height="15" fill="rgb(230,227,24)" fg:x="45" fg:w="4"/><text x="8.3145%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.0645%" y="948" width="0.7168%" height="15" fill="rgb(228,80,19)" fg:x="45" fg:w="4"/><text x="8.3145%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="964" width="0.7168%" height="15" fill="rgb(247,229,0)" fg:x="45" fg:w="4"/><text x="8.3145%" y="974.50"></text></g><g><title>&lt;module&gt; (sympy/polys/rings.py:30) (4 samples, 0.72%)</title><rect x="8.0645%" y="980" width="0.7168%" height="15" fill="rgb(237,194,15)" fg:x="45" fg:w="4"/><text x="8.3145%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="996" width="0.7168%" height="15" fill="rgb(219,203,20)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (4 samples, 0.72%)</title><rect x="8.0645%" y="1012" width="0.7168%" height="15" fill="rgb(234,128,8)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="1028" width="0.7168%" height="15" fill="rgb(248,202,8)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="1044" width="0.7168%" height="15" fill="rgb(206,104,37)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.0645%" y="1060" width="0.7168%" height="15" fill="rgb(223,8,27)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.0645%" y="1076" width="0.7168%" height="15" fill="rgb(216,217,28)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.0645%" y="1092" width="0.7168%" height="15" fill="rgb(249,199,1)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="1108" width="0.7168%" height="15" fill="rgb(240,85,17)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1118.50"></text></g><g><title>&lt;module&gt; (sympy/printing/__init__.py:5) (4 samples, 0.72%)</title><rect x="8.0645%" y="1124" width="0.7168%" height="15" fill="rgb(206,108,45)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.0645%" y="1140" width="0.7168%" height="15" fill="rgb(245,210,41)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.0645%" y="1156" width="0.7168%" height="15" fill="rgb(206,13,37)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.0645%" y="1172" width="0.7168%" height="15" fill="rgb(250,61,18)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.0645%" y="1188" width="0.7168%" height="15" fill="rgb(235,172,48)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.0645%" y="1204" width="0.7168%" height="15" fill="rgb(249,201,17)" fg:x="45" fg:w="4"/><text x="8.3145%" y="1214.50"></text></g><g><title>&lt;module&gt; (sympy/printing/latex.py:99) (1 samples, 0.18%)</title><rect x="8.6022%" y="1220" width="0.1792%" height="15" fill="rgb(219,208,6)" fg:x="48" fg:w="1"/><text x="8.8522%" y="1230.50"></text></g><g><title>&lt;module&gt; (sympy/polys/rootoftools.py:152) (1 samples, 0.18%)</title><rect x="8.7814%" y="980" width="0.1792%" height="15" fill="rgb(248,31,23)" fg:x="49" fg:w="1"/><text x="9.0314%" y="990.50"></text></g><g><title>__init_subclass__ (sympy/core/basic.py:121) (1 samples, 0.18%)</title><rect x="8.7814%" y="996" width="0.1792%" height="15" fill="rgb(245,15,42)" fg:x="49" fg:w="1"/><text x="9.0314%" y="1006.50"></text></g><g><title>_prepare_class_assumptions (sympy/core/assumptions.py:638) (1 samples, 0.18%)</title><rect x="8.7814%" y="1012" width="0.1792%" height="15" fill="rgb(222,217,39)" fg:x="49" fg:w="1"/><text x="9.0314%" y="1022.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/__init__.py:17) (2 samples, 0.36%)</title><rect x="8.7814%" y="788" width="0.3584%" height="15" fill="rgb(210,219,27)" fg:x="49" fg:w="2"/><text x="9.0314%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="8.7814%" y="804" width="0.3584%" height="15" fill="rgb(252,166,36)" fg:x="49" fg:w="2"/><text x="9.0314%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="8.7814%" y="820" width="0.3584%" height="15" fill="rgb(245,132,34)" fg:x="49" fg:w="2"/><text x="9.0314%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="8.7814%" y="836" width="0.3584%" height="15" fill="rgb(236,54,3)" fg:x="49" fg:w="2"/><text x="9.0314%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="8.7814%" y="852" width="0.3584%" height="15" fill="rgb(241,173,43)" fg:x="49" fg:w="2"/><text x="9.0314%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="8.7814%" y="868" width="0.3584%" height="15" fill="rgb(215,190,9)" fg:x="49" fg:w="2"/><text x="9.0314%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/minpoly.py:33) (2 samples, 0.36%)</title><rect x="8.7814%" y="884" width="0.3584%" height="15" fill="rgb(242,101,16)" fg:x="49" fg:w="2"/><text x="9.0314%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="8.7814%" y="900" width="0.3584%" height="15" fill="rgb(223,190,21)" fg:x="49" fg:w="2"/><text x="9.0314%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="8.7814%" y="916" width="0.3584%" height="15" fill="rgb(215,228,25)" fg:x="49" fg:w="2"/><text x="9.0314%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="8.7814%" y="932" width="0.3584%" height="15" fill="rgb(225,36,22)" fg:x="49" fg:w="2"/><text x="9.0314%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="8.7814%" y="948" width="0.3584%" height="15" fill="rgb(251,106,46)" fg:x="49" fg:w="2"/><text x="9.0314%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="8.7814%" y="964" width="0.3584%" height="15" fill="rgb(208,90,1)" fg:x="49" fg:w="2"/><text x="9.0314%" y="974.50"></text></g><g><title>&lt;module&gt; (sympy/polys/rootoftools.py:166) (1 samples, 0.18%)</title><rect x="8.9606%" y="980" width="0.1792%" height="15" fill="rgb(243,10,4)" fg:x="50" fg:w="1"/><text x="9.2106%" y="990.50"></text></g><g><title>ComplexRootOf (sympy/polys/rootoftools.py:432) (1 samples, 0.18%)</title><rect x="8.9606%" y="996" width="0.1792%" height="15" fill="rgb(212,137,27)" fg:x="50" fg:w="1"/><text x="9.2106%" y="1006.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1507) (22 samples, 3.94%)</title><rect x="5.5556%" y="180" width="3.9427%" height="15" fill="rgb(231,220,49)" fg:x="31" fg:w="22"/><text x="5.8056%" y="190.50">&lt;mod..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (22 samples, 3.94%)</title><rect x="5.5556%" y="196" width="3.9427%" height="15" fill="rgb(237,96,20)" fg:x="31" fg:w="22"/><text x="5.8056%" y="206.50">_han..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 3.94%)</title><rect x="5.5556%" y="212" width="3.9427%" height="15" fill="rgb(239,229,30)" fg:x="31" fg:w="22"/><text x="5.8056%" y="222.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 3.94%)</title><rect x="5.5556%" y="228" width="3.9427%" height="15" fill="rgb(219,65,33)" fg:x="31" fg:w="22"/><text x="5.8056%" y="238.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 3.94%)</title><rect x="5.5556%" y="244" width="3.9427%" height="15" fill="rgb(243,134,7)" fg:x="31" fg:w="22"/><text x="5.8056%" y="254.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 3.94%)</title><rect x="5.5556%" y="260" width="3.9427%" height="15" fill="rgb(216,177,54)" fg:x="31" fg:w="22"/><text x="5.8056%" y="270.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (22 samples, 3.94%)</title><rect x="5.5556%" y="276" width="3.9427%" height="15" fill="rgb(211,160,20)" fg:x="31" fg:w="22"/><text x="5.8056%" y="286.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 3.94%)</title><rect x="5.5556%" y="292" width="3.9427%" height="15" fill="rgb(239,85,39)" fg:x="31" fg:w="22"/><text x="5.8056%" y="302.50">_cal..</text></g><g><title>&lt;module&gt; (torch/masked/__init__.py:3) (22 samples, 3.94%)</title><rect x="5.5556%" y="308" width="3.9427%" height="15" fill="rgb(232,125,22)" fg:x="31" fg:w="22"/><text x="5.8056%" y="318.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 3.94%)</title><rect x="5.5556%" y="324" width="3.9427%" height="15" fill="rgb(244,57,34)" fg:x="31" fg:w="22"/><text x="5.8056%" y="334.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 3.94%)</title><rect x="5.5556%" y="340" width="3.9427%" height="15" fill="rgb(214,203,32)" fg:x="31" fg:w="22"/><text x="5.8056%" y="350.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 3.94%)</title><rect x="5.5556%" y="356" width="3.9427%" height="15" fill="rgb(207,58,43)" fg:x="31" fg:w="22"/><text x="5.8056%" y="366.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (22 samples, 3.94%)</title><rect x="5.5556%" y="372" width="3.9427%" height="15" fill="rgb(215,193,15)" fg:x="31" fg:w="22"/><text x="5.8056%" y="382.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 3.94%)</title><rect x="5.5556%" y="388" width="3.9427%" height="15" fill="rgb(232,15,44)" fg:x="31" fg:w="22"/><text x="5.8056%" y="398.50">_cal..</text></g><g><title>&lt;module&gt; (torch/masked/_ops.py:11) (22 samples, 3.94%)</title><rect x="5.5556%" y="404" width="3.9427%" height="15" fill="rgb(212,3,48)" fg:x="31" fg:w="22"/><text x="5.8056%" y="414.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 3.94%)</title><rect x="5.5556%" y="420" width="3.9427%" height="15" fill="rgb(218,128,7)" fg:x="31" fg:w="22"/><text x="5.8056%" y="430.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 3.94%)</title><rect x="5.5556%" y="436" width="3.9427%" height="15" fill="rgb(226,216,39)" fg:x="31" fg:w="22"/><text x="5.8056%" y="446.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 3.94%)</title><rect x="5.5556%" y="452" width="3.9427%" height="15" fill="rgb(243,47,51)" fg:x="31" fg:w="22"/><text x="5.8056%" y="462.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (22 samples, 3.94%)</title><rect x="5.5556%" y="468" width="3.9427%" height="15" fill="rgb(241,183,40)" fg:x="31" fg:w="22"/><text x="5.8056%" y="478.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 3.94%)</title><rect x="5.5556%" y="484" width="3.9427%" height="15" fill="rgb(231,217,32)" fg:x="31" fg:w="22"/><text x="5.8056%" y="494.50">_cal..</text></g><g><title>&lt;module&gt; (torch/_prims_common/__init__.py:23) (22 samples, 3.94%)</title><rect x="5.5556%" y="500" width="3.9427%" height="15" fill="rgb(229,61,38)" fg:x="31" fg:w="22"/><text x="5.8056%" y="510.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 3.94%)</title><rect x="5.5556%" y="516" width="3.9427%" height="15" fill="rgb(225,210,5)" fg:x="31" fg:w="22"/><text x="5.8056%" y="526.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 3.94%)</title><rect x="5.5556%" y="532" width="3.9427%" height="15" fill="rgb(231,79,45)" fg:x="31" fg:w="22"/><text x="5.8056%" y="542.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 3.94%)</title><rect x="5.5556%" y="548" width="3.9427%" height="15" fill="rgb(224,100,7)" fg:x="31" fg:w="22"/><text x="5.8056%" y="558.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (21 samples, 3.76%)</title><rect x="5.7348%" y="564" width="3.7634%" height="15" fill="rgb(241,198,18)" fg:x="32" fg:w="21"/><text x="5.9848%" y="574.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (21 samples, 3.76%)</title><rect x="5.7348%" y="580" width="3.7634%" height="15" fill="rgb(252,97,53)" fg:x="32" fg:w="21"/><text x="5.9848%" y="590.50">_cal..</text></g><g><title>&lt;module&gt; (sympy/__init__.py:74) (9 samples, 1.61%)</title><rect x="7.8853%" y="596" width="1.6129%" height="15" fill="rgb(220,88,7)" fg:x="44" fg:w="9"/><text x="8.1353%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 1.61%)</title><rect x="7.8853%" y="612" width="1.6129%" height="15" fill="rgb(213,176,14)" fg:x="44" fg:w="9"/><text x="8.1353%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 1.61%)</title><rect x="7.8853%" y="628" width="1.6129%" height="15" fill="rgb(246,73,7)" fg:x="44" fg:w="9"/><text x="8.1353%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 1.61%)</title><rect x="7.8853%" y="644" width="1.6129%" height="15" fill="rgb(245,64,36)" fg:x="44" fg:w="9"/><text x="8.1353%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 1.61%)</title><rect x="7.8853%" y="660" width="1.6129%" height="15" fill="rgb(245,80,10)" fg:x="44" fg:w="9"/><text x="8.1353%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 1.61%)</title><rect x="7.8853%" y="676" width="1.6129%" height="15" fill="rgb(232,107,50)" fg:x="44" fg:w="9"/><text x="8.1353%" y="686.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:93) (4 samples, 0.72%)</title><rect x="8.7814%" y="692" width="0.7168%" height="15" fill="rgb(253,3,0)" fg:x="49" fg:w="4"/><text x="9.0314%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="8.7814%" y="708" width="0.7168%" height="15" fill="rgb(212,99,53)" fg:x="49" fg:w="4"/><text x="9.0314%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="8.7814%" y="724" width="0.7168%" height="15" fill="rgb(249,111,54)" fg:x="49" fg:w="4"/><text x="9.0314%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="8.7814%" y="740" width="0.7168%" height="15" fill="rgb(249,55,30)" fg:x="49" fg:w="4"/><text x="9.0314%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="8.7814%" y="756" width="0.7168%" height="15" fill="rgb(237,47,42)" fg:x="49" fg:w="4"/><text x="9.0314%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="8.7814%" y="772" width="0.7168%" height="15" fill="rgb(211,20,18)" fg:x="49" fg:w="4"/><text x="9.0314%" y="782.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/__init__.py:21) (2 samples, 0.36%)</title><rect x="9.1398%" y="788" width="0.3584%" height="15" fill="rgb(231,203,46)" fg:x="51" fg:w="2"/><text x="9.3898%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.1398%" y="804" width="0.3584%" height="15" fill="rgb(237,142,3)" fg:x="51" fg:w="2"/><text x="9.3898%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.1398%" y="820" width="0.3584%" height="15" fill="rgb(241,107,1)" fg:x="51" fg:w="2"/><text x="9.3898%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.1398%" y="836" width="0.3584%" height="15" fill="rgb(229,83,13)" fg:x="51" fg:w="2"/><text x="9.3898%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.1398%" y="852" width="0.3584%" height="15" fill="rgb(241,91,40)" fg:x="51" fg:w="2"/><text x="9.3898%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.1398%" y="868" width="0.3584%" height="15" fill="rgb(225,3,45)" fg:x="51" fg:w="2"/><text x="9.3898%" y="878.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/utilities.py:7) (2 samples, 0.36%)</title><rect x="9.1398%" y="884" width="0.3584%" height="15" fill="rgb(244,223,14)" fg:x="51" fg:w="2"/><text x="9.3898%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.1398%" y="900" width="0.3584%" height="15" fill="rgb(224,124,37)" fg:x="51" fg:w="2"/><text x="9.3898%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.36%)</title><rect x="9.1398%" y="916" width="0.3584%" height="15" fill="rgb(251,171,30)" fg:x="51" fg:w="2"/><text x="9.3898%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.1398%" y="932" width="0.3584%" height="15" fill="rgb(236,46,54)" fg:x="51" fg:w="2"/><text x="9.3898%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.1398%" y="948" width="0.3584%" height="15" fill="rgb(245,213,5)" fg:x="51" fg:w="2"/><text x="9.3898%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.1398%" y="964" width="0.3584%" height="15" fill="rgb(230,144,27)" fg:x="51" fg:w="2"/><text x="9.3898%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.1398%" y="980" width="0.3584%" height="15" fill="rgb(220,86,6)" fg:x="51" fg:w="2"/><text x="9.3898%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.1398%" y="996" width="0.3584%" height="15" fill="rgb(240,20,13)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.1398%" y="1012" width="0.3584%" height="15" fill="rgb(217,89,34)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1022.50"></text></g><g><title>&lt;module&gt; (sympy/polys/matrices/__init__.py:11) (2 samples, 0.36%)</title><rect x="9.1398%" y="1028" width="0.3584%" height="15" fill="rgb(229,13,5)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.1398%" y="1044" width="0.3584%" height="15" fill="rgb(244,67,35)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.1398%" y="1060" width="0.3584%" height="15" fill="rgb(221,40,2)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.1398%" y="1076" width="0.3584%" height="15" fill="rgb(237,157,21)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.1398%" y="1092" width="0.3584%" height="15" fill="rgb(222,94,11)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.1398%" y="1108" width="0.3584%" height="15" fill="rgb(249,113,6)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1118.50"></text></g><g><title>&lt;module&gt; (sympy/polys/matrices/domainmatrix.py:25) (2 samples, 0.36%)</title><rect x="9.1398%" y="1124" width="0.3584%" height="15" fill="rgb(238,137,36)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.1398%" y="1140" width="0.3584%" height="15" fill="rgb(210,102,26)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.1398%" y="1156" width="0.3584%" height="15" fill="rgb(218,30,30)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.1398%" y="1172" width="0.3584%" height="15" fill="rgb(214,67,26)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (2 samples, 0.36%)</title><rect x="9.1398%" y="1188" width="0.3584%" height="15" fill="rgb(251,9,53)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (2 samples, 0.36%)</title><rect x="9.1398%" y="1204" width="0.3584%" height="15" fill="rgb(228,204,25)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (2 samples, 0.36%)</title><rect x="9.1398%" y="1220" width="0.3584%" height="15" fill="rgb(207,153,8)" fg:x="51" fg:w="2"/><text x="9.3898%" y="1230.50"></text></g><g><title>&lt;module&gt; (torch/export/__init__.py:16) (2 samples, 0.36%)</title><rect x="9.4982%" y="308" width="0.3584%" height="15" fill="rgb(242,9,16)" fg:x="53" fg:w="2"/><text x="9.7482%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.4982%" y="324" width="0.3584%" height="15" fill="rgb(217,211,10)" fg:x="53" fg:w="2"/><text x="9.7482%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.4982%" y="340" width="0.3584%" height="15" fill="rgb(219,228,52)" fg:x="53" fg:w="2"/><text x="9.7482%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.4982%" y="356" width="0.3584%" height="15" fill="rgb(231,92,29)" fg:x="53" fg:w="2"/><text x="9.7482%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.4982%" y="372" width="0.3584%" height="15" fill="rgb(232,8,23)" fg:x="53" fg:w="2"/><text x="9.7482%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.4982%" y="388" width="0.3584%" height="15" fill="rgb(216,211,34)" fg:x="53" fg:w="2"/><text x="9.7482%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:34) (2 samples, 0.36%)</title><rect x="9.4982%" y="404" width="0.3584%" height="15" fill="rgb(236,151,0)" fg:x="53" fg:w="2"/><text x="9.7482%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.4982%" y="420" width="0.3584%" height="15" fill="rgb(209,168,3)" fg:x="53" fg:w="2"/><text x="9.7482%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.4982%" y="436" width="0.3584%" height="15" fill="rgb(208,129,28)" fg:x="53" fg:w="2"/><text x="9.7482%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.4982%" y="452" width="0.3584%" height="15" fill="rgb(229,78,22)" fg:x="53" fg:w="2"/><text x="9.7482%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.4982%" y="468" width="0.3584%" height="15" fill="rgb(228,187,13)" fg:x="53" fg:w="2"/><text x="9.7482%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.4982%" y="484" width="0.3584%" height="15" fill="rgb(240,119,24)" fg:x="53" fg:w="2"/><text x="9.7482%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/_guards.py:135) (2 samples, 0.36%)</title><rect x="9.4982%" y="500" width="0.3584%" height="15" fill="rgb(209,194,42)" fg:x="53" fg:w="2"/><text x="9.7482%" y="510.50"></text></g><g><title>dataclass (dataclasses.py:1184) (1 samples, 0.18%)</title><rect x="9.6774%" y="516" width="0.1792%" height="15" fill="rgb(247,200,46)" fg:x="54" fg:w="1"/><text x="9.9274%" y="526.50"></text></g><g><title>wrap (dataclasses.py:1175) (1 samples, 0.18%)</title><rect x="9.6774%" y="532" width="0.1792%" height="15" fill="rgb(218,76,16)" fg:x="54" fg:w="1"/><text x="9.9274%" y="542.50"></text></g><g><title>_process_class (dataclasses.py:1040) (1 samples, 0.18%)</title><rect x="9.6774%" y="548" width="0.1792%" height="15" fill="rgb(225,21,48)" fg:x="54" fg:w="1"/><text x="9.9274%" y="558.50"></text></g><g><title>_init_fn (dataclasses.py:579) (1 samples, 0.18%)</title><rect x="9.6774%" y="564" width="0.1792%" height="15" fill="rgb(239,223,50)" fg:x="54" fg:w="1"/><text x="9.9274%" y="574.50"></text></g><g><title>_create_fn (dataclasses.py:432) (1 samples, 0.18%)</title><rect x="9.6774%" y="580" width="0.1792%" height="15" fill="rgb(244,45,21)" fg:x="54" fg:w="1"/><text x="9.9274%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/__init__.py:3) (1 samples, 0.18%)</title><rect x="9.8566%" y="500" width="0.1792%" height="15" fill="rgb(232,33,43)" fg:x="55" fg:w="1"/><text x="10.1066%" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="9.8566%" y="516" width="0.1792%" height="15" fill="rgb(209,8,3)" fg:x="55" fg:w="1"/><text x="10.1066%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="9.8566%" y="532" width="0.1792%" height="15" fill="rgb(214,25,53)" fg:x="55" fg:w="1"/><text x="10.1066%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="9.8566%" y="548" width="0.1792%" height="15" fill="rgb(254,186,54)" fg:x="55" fg:w="1"/><text x="10.1066%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="9.8566%" y="564" width="0.1792%" height="15" fill="rgb(208,174,49)" fg:x="55" fg:w="1"/><text x="10.1066%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="9.8566%" y="580" width="0.1792%" height="15" fill="rgb(233,191,51)" fg:x="55" fg:w="1"/><text x="10.1066%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="9.8566%" y="596" width="0.1792%" height="15" fill="rgb(222,134,10)" fg:x="55" fg:w="1"/><text x="10.1066%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="9.8566%" y="612" width="0.1792%" height="15" fill="rgb(230,226,20)" fg:x="55" fg:w="1"/><text x="10.1066%" y="622.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/net_min_base.py:11) (1 samples, 0.18%)</title><rect x="9.8566%" y="628" width="0.1792%" height="15" fill="rgb(251,111,25)" fg:x="55" fg:w="1"/><text x="10.1066%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="9.8566%" y="644" width="0.1792%" height="15" fill="rgb(224,40,46)" fg:x="55" fg:w="1"/><text x="10.1066%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="9.8566%" y="660" width="0.1792%" height="15" fill="rgb(236,108,47)" fg:x="55" fg:w="1"/><text x="10.1066%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="9.8566%" y="676" width="0.1792%" height="15" fill="rgb(234,93,0)" fg:x="55" fg:w="1"/><text x="10.1066%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="9.8566%" y="692" width="0.1792%" height="15" fill="rgb(224,213,32)" fg:x="55" fg:w="1"/><text x="10.1066%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="9.8566%" y="708" width="0.1792%" height="15" fill="rgb(251,11,48)" fg:x="55" fg:w="1"/><text x="10.1066%" y="718.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/split_utils.py:10) (1 samples, 0.18%)</title><rect x="9.8566%" y="724" width="0.1792%" height="15" fill="rgb(236,173,5)" fg:x="55" fg:w="1"/><text x="10.1066%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="9.8566%" y="740" width="0.1792%" height="15" fill="rgb(230,95,12)" fg:x="55" fg:w="1"/><text x="10.1066%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="9.8566%" y="756" width="0.1792%" height="15" fill="rgb(232,209,1)" fg:x="55" fg:w="1"/><text x="10.1066%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="9.8566%" y="772" width="0.1792%" height="15" fill="rgb(232,6,1)" fg:x="55" fg:w="1"/><text x="10.1066%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="9.8566%" y="788" width="0.1792%" height="15" fill="rgb(210,224,50)" fg:x="55" fg:w="1"/><text x="10.1066%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="9.8566%" y="804" width="0.1792%" height="15" fill="rgb(228,127,35)" fg:x="55" fg:w="1"/><text x="10.1066%" y="814.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/tools_common.py:213) (1 samples, 0.18%)</title><rect x="9.8566%" y="820" width="0.1792%" height="15" fill="rgb(245,102,45)" fg:x="55" fg:w="1"/><text x="10.1066%" y="830.50"></text></g><g><title>mark_not_back_compat (torch/fx/_compatibility.py:25) (1 samples, 0.18%)</title><rect x="9.8566%" y="836" width="0.1792%" height="15" fill="rgb(214,1,49)" fg:x="55" fg:w="1"/><text x="10.1066%" y="846.50"></text></g><g><title>dedent (textwrap.py:439) (1 samples, 0.18%)</title><rect x="9.8566%" y="852" width="0.1792%" height="15" fill="rgb(226,163,40)" fg:x="55" fg:w="1"/><text x="10.1066%" y="862.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1729) (4 samples, 0.72%)</title><rect x="9.4982%" y="180" width="0.7168%" height="15" fill="rgb(239,212,28)" fg:x="53" fg:w="4"/><text x="9.7482%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.72%)</title><rect x="9.4982%" y="196" width="0.7168%" height="15" fill="rgb(220,20,13)" fg:x="53" fg:w="4"/><text x="9.7482%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="9.4982%" y="212" width="0.7168%" height="15" fill="rgb(210,164,35)" fg:x="53" fg:w="4"/><text x="9.7482%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="9.4982%" y="228" width="0.7168%" height="15" fill="rgb(248,109,41)" fg:x="53" fg:w="4"/><text x="9.7482%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="9.4982%" y="244" width="0.7168%" height="15" fill="rgb(238,23,50)" fg:x="53" fg:w="4"/><text x="9.7482%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="9.4982%" y="260" width="0.7168%" height="15" fill="rgb(211,48,49)" fg:x="53" fg:w="4"/><text x="9.7482%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="9.4982%" y="276" width="0.7168%" height="15" fill="rgb(223,36,21)" fg:x="53" fg:w="4"/><text x="9.7482%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="9.4982%" y="292" width="0.7168%" height="15" fill="rgb(207,123,46)" fg:x="53" fg:w="4"/><text x="9.7482%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/export/__init__.py:18) (2 samples, 0.36%)</title><rect x="9.8566%" y="308" width="0.3584%" height="15" fill="rgb(240,218,32)" fg:x="55" fg:w="2"/><text x="10.1066%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.8566%" y="324" width="0.3584%" height="15" fill="rgb(252,5,43)" fg:x="55" fg:w="2"/><text x="10.1066%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.36%)</title><rect x="9.8566%" y="340" width="0.3584%" height="15" fill="rgb(252,84,19)" fg:x="55" fg:w="2"/><text x="10.1066%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.8566%" y="356" width="0.3584%" height="15" fill="rgb(243,152,39)" fg:x="55" fg:w="2"/><text x="10.1066%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.8566%" y="372" width="0.3584%" height="15" fill="rgb(234,160,15)" fg:x="55" fg:w="2"/><text x="10.1066%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.36%)</title><rect x="9.8566%" y="388" width="0.3584%" height="15" fill="rgb(237,34,20)" fg:x="55" fg:w="2"/><text x="10.1066%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.8566%" y="404" width="0.3584%" height="15" fill="rgb(229,97,13)" fg:x="55" fg:w="2"/><text x="10.1066%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="9.8566%" y="420" width="0.3584%" height="15" fill="rgb(234,71,50)" fg:x="55" fg:w="2"/><text x="10.1066%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="9.8566%" y="436" width="0.3584%" height="15" fill="rgb(253,155,4)" fg:x="55" fg:w="2"/><text x="10.1066%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="9.8566%" y="452" width="0.3584%" height="15" fill="rgb(222,185,37)" fg:x="55" fg:w="2"/><text x="10.1066%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="9.8566%" y="468" width="0.3584%" height="15" fill="rgb(251,177,13)" fg:x="55" fg:w="2"/><text x="10.1066%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="9.8566%" y="484" width="0.3584%" height="15" fill="rgb(250,179,40)" fg:x="55" fg:w="2"/><text x="10.1066%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/__init__.py:6) (1 samples, 0.18%)</title><rect x="10.0358%" y="500" width="0.1792%" height="15" fill="rgb(242,44,2)" fg:x="56" fg:w="1"/><text x="10.2858%" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="10.0358%" y="516" width="0.1792%" height="15" fill="rgb(216,177,13)" fg:x="56" fg:w="1"/><text x="10.2858%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="10.0358%" y="532" width="0.1792%" height="15" fill="rgb(216,106,43)" fg:x="56" fg:w="1"/><text x="10.2858%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="10.0358%" y="548" width="0.1792%" height="15" fill="rgb(216,183,2)" fg:x="56" fg:w="1"/><text x="10.2858%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="10.0358%" y="564" width="0.1792%" height="15" fill="rgb(249,75,3)" fg:x="56" fg:w="1"/><text x="10.2858%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="10.0358%" y="580" width="0.1792%" height="15" fill="rgb(219,67,39)" fg:x="56" fg:w="1"/><text x="10.2858%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="10.0358%" y="596" width="0.1792%" height="15" fill="rgb(253,228,2)" fg:x="56" fg:w="1"/><text x="10.2858%" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1015) (1 samples, 0.18%)</title><rect x="10.0358%" y="612" width="0.1792%" height="15" fill="rgb(235,138,27)" fg:x="56" fg:w="1"/><text x="10.2858%" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:672) (1 samples, 0.18%)</title><rect x="10.0358%" y="628" width="0.1792%" height="15" fill="rgb(236,97,51)" fg:x="56" fg:w="1"/><text x="10.2858%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::hasKernelForDispatchKey (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.2151%" y="372" width="0.1792%" height="15" fill="rgb(240,80,30)" fg:x="57" fg:w="1"/><text x="10.4651%" y="382.50"></text></g><g><title>pybind11::detail::type_caster&lt;c10::DispatchKey, void&gt;::load (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.3943%" y="372" width="0.1792%" height="15" fill="rgb(230,178,19)" fg:x="58" fg:w="1"/><text x="10.6443%" y="382.50"></text></g><g><title>c10::parseDispatchKey (libc10.so) (1 samples, 0.18%)</title><rect x="10.3943%" y="388" width="0.1792%" height="15" fill="rgb(210,190,27)" fg:x="58" fg:w="1"/><text x="10.6443%" y="398.50"></text></g><g><title>0x7f34fefa3a25 (libc.so.6) (1 samples, 0.18%)</title><rect x="10.3943%" y="404" width="0.1792%" height="15" fill="rgb(222,107,31)" fg:x="58" fg:w="1"/><text x="10.6443%" y="414.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.5735%" y="372" width="0.1792%" height="15" fill="rgb(216,127,34)" fg:x="59" fg:w="1"/><text x="10.8235%" y="382.50"></text></g><g><title>pybind11::detail::get_type_info (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.5735%" y="388" width="0.1792%" height="15" fill="rgb(234,116,52)" fg:x="59" fg:w="1"/><text x="10.8235%" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.5735%" y="404" width="0.1792%" height="15" fill="rgb(222,124,15)" fg:x="59" fg:w="1"/><text x="10.8235%" y="414.50"></text></g><g><title>activate_meta (torch/_meta_registrations.py:5675) (4 samples, 0.72%)</title><rect x="10.2151%" y="324" width="0.7168%" height="15" fill="rgb(231,179,28)" fg:x="57" fg:w="4"/><text x="10.4651%" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (4 samples, 0.72%)</title><rect x="10.2151%" y="340" width="0.7168%" height="15" fill="rgb(226,93,45)" fg:x="57" fg:w="4"/><text x="10.4651%" y="350.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(char const*, c10::DispatchKey)#16}, bool, char const*, c10::DispatchKey, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(char const*, c10::DispatchKey&amp;&amp;)#16}, bool (*)(char const*, c10::DispatchKey), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (4 samples, 0.72%)</title><rect x="10.2151%" y="356" width="0.7168%" height="15" fill="rgb(215,8,51)" fg:x="57" fg:w="4"/><text x="10.4651%" y="366.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="372" width="0.1792%" height="15" fill="rgb(223,106,5)" fg:x="60" fg:w="1"/><text x="11.0027%" y="382.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="388" width="0.1792%" height="15" fill="rgb(250,191,5)" fg:x="60" fg:w="1"/><text x="11.0027%" y="398.50"></text></g><g><title>torch::jit::Lexer::expect (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="404" width="0.1792%" height="15" fill="rgb(242,132,44)" fg:x="60" fg:w="1"/><text x="11.0027%" y="414.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="420" width="0.1792%" height="15" fill="rgb(251,152,29)" fg:x="60" fg:w="1"/><text x="11.0027%" y="430.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="436" width="0.1792%" height="15" fill="rgb(218,179,5)" fg:x="60" fg:w="1"/><text x="11.0027%" y="446.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="10.7527%" y="452" width="0.1792%" height="15" fill="rgb(227,67,19)" fg:x="60" fg:w="1"/><text x="11.0027%" y="462.50"></text></g><g><title>impl (torch/library.py:111) (1 samples, 0.18%)</title><rect x="10.9319%" y="340" width="0.1792%" height="15" fill="rgb(233,119,31)" fg:x="61" fg:w="1"/><text x="11.1819%" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.9319%" y="356" width="0.1792%" height="15" fill="rgb(241,120,22)" fg:x="61" fg:w="1"/><text x="11.1819%" y="366.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(c10::FunctionSchema&amp;)#207} const&amp;, std::string, c10::FunctionSchema&amp;, &gt;(torch::jit::initJITBindings(_object*)::{lambda(c10::FunctionSchema&amp;)#207} const&amp;, std::string (*)(c10::FunctionSchema&amp;), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (1 samples, 0.18%)</title><rect x="10.9319%" y="372" width="0.1792%" height="15" fill="rgb(224,102,30)" fg:x="61" fg:w="1"/><text x="11.1819%" y="382.50"></text></g><g><title>std::string::string (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="10.9319%" y="388" width="0.1792%" height="15" fill="rgb(210,164,37)" fg:x="61" fg:w="1"/><text x="11.1819%" y="398.50"></text></g><g><title>std::string::_Rep::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="11.1111%" y="420" width="0.1792%" height="15" fill="rgb(226,191,16)" fg:x="62" fg:w="1"/><text x="11.3611%" y="430.50"></text></g><g><title>impl (torch/library.py:134) (2 samples, 0.36%)</title><rect x="11.1111%" y="340" width="0.3584%" height="15" fill="rgb(214,40,45)" fg:x="62" fg:w="2"/><text x="11.3611%" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (2 samples, 0.36%)</title><rect x="11.1111%" y="356" width="0.3584%" height="15" fill="rgb(244,29,26)" fg:x="62" fg:w="2"/><text x="11.3611%" y="366.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(char const*, c10::DispatchKey)#16}, bool, char const*, c10::DispatchKey, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(char const*, c10::DispatchKey&amp;&amp;)#16}, bool (*)(char const*, c10::DispatchKey), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (2 samples, 0.36%)</title><rect x="11.1111%" y="372" width="0.3584%" height="15" fill="rgb(216,16,5)" fg:x="62" fg:w="2"/><text x="11.3611%" y="382.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="11.1111%" y="388" width="0.3584%" height="15" fill="rgb(249,76,35)" fg:x="62" fg:w="2"/><text x="11.3611%" y="398.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="11.1111%" y="404" width="0.3584%" height="15" fill="rgb(207,11,44)" fg:x="62" fg:w="2"/><text x="11.3611%" y="414.50"></text></g><g><title>torch::jit::Lexer::nextIf (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="11.2903%" y="420" width="0.1792%" height="15" fill="rgb(228,190,49)" fg:x="63" fg:w="1"/><text x="11.5403%" y="430.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="11.2903%" y="436" width="0.1792%" height="15" fill="rgb(214,173,12)" fg:x="63" fg:w="1"/><text x="11.5403%" y="446.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="11.2903%" y="452" width="0.1792%" height="15" fill="rgb(218,26,35)" fg:x="63" fg:w="1"/><text x="11.5403%" y="462.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="11.2903%" y="468" width="0.1792%" height="15" fill="rgb(220,200,19)" fg:x="63" fg:w="1"/><text x="11.5403%" y="478.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:5715) (8 samples, 1.43%)</title><rect x="10.2151%" y="308" width="1.4337%" height="15" fill="rgb(239,95,49)" fg:x="57" fg:w="8"/><text x="10.4651%" y="318.50"></text></g><g><title>activate_meta (torch/_meta_registrations.py:5712) (4 samples, 0.72%)</title><rect x="10.9319%" y="324" width="0.7168%" height="15" fill="rgb(235,85,53)" fg:x="61" fg:w="4"/><text x="11.1819%" y="334.50"></text></g><g><title>impl (torch/library.py:141) (1 samples, 0.18%)</title><rect x="11.4695%" y="340" width="0.1792%" height="15" fill="rgb(233,133,31)" fg:x="64" fg:w="1"/><text x="11.7195%" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="11.4695%" y="356" width="0.1792%" height="15" fill="rgb(218,25,20)" fg:x="64" fg:w="1"/><text x="11.7195%" y="366.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:1029) (1 samples, 0.18%)</title><rect x="11.6487%" y="596" width="0.1792%" height="15" fill="rgb(252,210,38)" fg:x="65" fg:w="1"/><text x="11.8987%" y="606.50"></text></g><g><title>_make_elementwise_binary_prim (torch/_prims/__init__.py:455) (1 samples, 0.18%)</title><rect x="11.6487%" y="612" width="0.1792%" height="15" fill="rgb(242,134,21)" fg:x="65" fg:w="1"/><text x="11.8987%" y="622.50"></text></g><g><title>_make_prim (torch/_prims/__init__.py:316) (1 samples, 0.18%)</title><rect x="11.6487%" y="628" width="0.1792%" height="15" fill="rgb(213,28,48)" fg:x="65" fg:w="1"/><text x="11.8987%" y="638.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="11.6487%" y="644" width="0.1792%" height="15" fill="rgb(250,196,2)" fg:x="65" fg:w="1"/><text x="11.8987%" y="654.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="11.6487%" y="660" width="0.1792%" height="15" fill="rgb(227,5,17)" fg:x="65" fg:w="1"/><text x="11.8987%" y="670.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:1050) (1 samples, 0.18%)</title><rect x="11.8280%" y="596" width="0.1792%" height="15" fill="rgb(221,226,24)" fg:x="66" fg:w="1"/><text x="12.0780%" y="606.50"></text></g><g><title>_make_elementwise_binary_prim (torch/_prims/__init__.py:455) (1 samples, 0.18%)</title><rect x="11.8280%" y="612" width="0.1792%" height="15" fill="rgb(211,5,48)" fg:x="66" fg:w="1"/><text x="12.0780%" y="622.50"></text></g><g><title>_make_prim (torch/_prims/__init__.py:297) (1 samples, 0.18%)</title><rect x="11.8280%" y="628" width="0.1792%" height="15" fill="rgb(219,150,6)" fg:x="66" fg:w="1"/><text x="12.0780%" y="638.50"></text></g><g><title>impl (torch/library.py:141) (1 samples, 0.18%)</title><rect x="11.8280%" y="644" width="0.1792%" height="15" fill="rgb(251,46,16)" fg:x="66" fg:w="1"/><text x="12.0780%" y="654.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="11.8280%" y="660" width="0.1792%" height="15" fill="rgb(220,204,40)" fg:x="66" fg:w="1"/><text x="12.0780%" y="670.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object)#6}, void, pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [1], pybind11::arg, pybind11::arg, pybind11::arg&gt;(torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object)#6}, void (*)(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [1], pybind11::arg, pybind11::arg, pybind11::arg)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (1 samples, 0.18%)</title><rect x="11.8280%" y="676" width="0.1792%" height="15" fill="rgb(211,85,2)" fg:x="66" fg:w="1"/><text x="12.0780%" y="686.50"></text></g><g><title>torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object)#6}::operator() const (libtorch_python.so) (1 samples, 0.18%)</title><rect x="11.8280%" y="692" width="0.1792%" height="15" fill="rgb(229,17,7)" fg:x="66" fg:w="1"/><text x="12.0780%" y="702.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.18%)</title><rect x="11.8280%" y="708" width="0.1792%" height="15" fill="rgb(239,72,28)" fg:x="66" fg:w="1"/><text x="12.0780%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1002) (1 samples, 0.18%)</title><rect x="12.0072%" y="724" width="0.1792%" height="15" fill="rgb(230,47,54)" fg:x="67" fg:w="1"/><text x="12.2572%" y="734.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:945) (1 samples, 0.18%)</title><rect x="12.0072%" y="740" width="0.1792%" height="15" fill="rgb(214,50,8)" fg:x="67" fg:w="1"/><text x="12.2572%" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1439) (1 samples, 0.18%)</title><rect x="12.0072%" y="756" width="0.1792%" height="15" fill="rgb(216,198,43)" fg:x="67" fg:w="1"/><text x="12.2572%" y="766.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1411) (1 samples, 0.18%)</title><rect x="12.0072%" y="772" width="0.1792%" height="15" fill="rgb(234,20,35)" fg:x="67" fg:w="1"/><text x="12.2572%" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1572) (1 samples, 0.18%)</title><rect x="12.0072%" y="788" width="0.1792%" height="15" fill="rgb(254,45,19)" fg:x="67" fg:w="1"/><text x="12.2572%" y="798.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:128) (1 samples, 0.18%)</title><rect x="12.0072%" y="804" width="0.1792%" height="15" fill="rgb(219,14,44)" fg:x="67" fg:w="1"/><text x="12.2572%" y="814.50"></text></g><g><title>&lt;module&gt; (torchgen/model.py:1313) (1 samples, 0.18%)</title><rect x="12.1864%" y="884" width="0.1792%" height="15" fill="rgb(217,220,26)" fg:x="68" fg:w="1"/><text x="12.4364%" y="894.50"></text></g><g><title>wrap (dataclasses.py:1175) (1 samples, 0.18%)</title><rect x="12.1864%" y="900" width="0.1792%" height="15" fill="rgb(213,158,28)" fg:x="68" fg:w="1"/><text x="12.4364%" y="910.50"></text></g><g><title>_process_class (dataclasses.py:1090) (1 samples, 0.18%)</title><rect x="12.1864%" y="916" width="0.1792%" height="15" fill="rgb(252,51,52)" fg:x="68" fg:w="1"/><text x="12.4364%" y="926.50"></text></g><g><title>_hash_add (dataclasses.py:844) (1 samples, 0.18%)</title><rect x="12.1864%" y="932" width="0.1792%" height="15" fill="rgb(246,89,16)" fg:x="68" fg:w="1"/><text x="12.4364%" y="942.50"></text></g><g><title>_hash_fn (dataclasses.py:639) (1 samples, 0.18%)</title><rect x="12.1864%" y="948" width="0.1792%" height="15" fill="rgb(216,158,49)" fg:x="68" fg:w="1"/><text x="12.4364%" y="958.50"></text></g><g><title>_create_fn (dataclasses.py:432) (1 samples, 0.18%)</title><rect x="12.1864%" y="964" width="0.1792%" height="15" fill="rgb(236,107,19)" fg:x="68" fg:w="1"/><text x="12.4364%" y="974.50"></text></g><g><title>0x7f34fefa72c3 (libc.so.6) (1 samples, 0.18%)</title><rect x="12.1864%" y="980" width="0.1792%" height="15" fill="rgb(228,185,30)" fg:x="68" fg:w="1"/><text x="12.4364%" y="990.50"></text></g><g><title>&lt;module&gt; (torchgen/model.py:2050) (1 samples, 0.18%)</title><rect x="12.3656%" y="884" width="0.1792%" height="15" fill="rgb(246,134,8)" fg:x="69" fg:w="1"/><text x="12.6156%" y="894.50"></text></g><g><title>wrap (dataclasses.py:1175) (1 samples, 0.18%)</title><rect x="12.3656%" y="900" width="0.1792%" height="15" fill="rgb(214,143,50)" fg:x="69" fg:w="1"/><text x="12.6156%" y="910.50"></text></g><g><title>_process_class (dataclasses.py:1098) (1 samples, 0.18%)</title><rect x="12.3656%" y="916" width="0.1792%" height="15" fill="rgb(228,75,8)" fg:x="69" fg:w="1"/><text x="12.6156%" y="926.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:15) (4 samples, 0.72%)</title><rect x="12.0072%" y="596" width="0.7168%" height="15" fill="rgb(207,175,4)" fg:x="67" fg:w="4"/><text x="12.2572%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="12.0072%" y="612" width="0.7168%" height="15" fill="rgb(205,108,24)" fg:x="67" fg:w="4"/><text x="12.2572%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="12.0072%" y="628" width="0.7168%" height="15" fill="rgb(244,120,49)" fg:x="67" fg:w="4"/><text x="12.2572%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="12.0072%" y="644" width="0.7168%" height="15" fill="rgb(223,47,38)" fg:x="67" fg:w="4"/><text x="12.2572%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="12.0072%" y="660" width="0.7168%" height="15" fill="rgb(229,179,11)" fg:x="67" fg:w="4"/><text x="12.2572%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="12.0072%" y="676" width="0.7168%" height="15" fill="rgb(231,122,1)" fg:x="67" fg:w="4"/><text x="12.2572%" y="686.50"></text></g><g><title>&lt;module&gt; (torch/_prims/debug_prims.py:5) (4 samples, 0.72%)</title><rect x="12.0072%" y="692" width="0.7168%" height="15" fill="rgb(245,119,9)" fg:x="67" fg:w="4"/><text x="12.2572%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="12.0072%" y="708" width="0.7168%" height="15" fill="rgb(241,163,25)" fg:x="67" fg:w="4"/><text x="12.2572%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="12.1864%" y="724" width="0.5376%" height="15" fill="rgb(217,214,3)" fg:x="68" fg:w="3"/><text x="12.4364%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="12.1864%" y="740" width="0.5376%" height="15" fill="rgb(240,86,28)" fg:x="68" fg:w="3"/><text x="12.4364%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="12.1864%" y="756" width="0.5376%" height="15" fill="rgb(215,47,9)" fg:x="68" fg:w="3"/><text x="12.4364%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="12.1864%" y="772" width="0.5376%" height="15" fill="rgb(252,25,45)" fg:x="68" fg:w="3"/><text x="12.4364%" y="782.50"></text></g><g><title>&lt;module&gt; (torch/_custom_op/impl.py:9) (3 samples, 0.54%)</title><rect x="12.1864%" y="788" width="0.5376%" height="15" fill="rgb(251,164,9)" fg:x="68" fg:w="3"/><text x="12.4364%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.54%)</title><rect x="12.1864%" y="804" width="0.5376%" height="15" fill="rgb(233,194,0)" fg:x="68" fg:w="3"/><text x="12.4364%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.54%)</title><rect x="12.1864%" y="820" width="0.5376%" height="15" fill="rgb(249,111,24)" fg:x="68" fg:w="3"/><text x="12.4364%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.54%)</title><rect x="12.1864%" y="836" width="0.5376%" height="15" fill="rgb(250,223,3)" fg:x="68" fg:w="3"/><text x="12.4364%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.54%)</title><rect x="12.1864%" y="852" width="0.5376%" height="15" fill="rgb(236,178,37)" fg:x="68" fg:w="3"/><text x="12.4364%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.54%)</title><rect x="12.1864%" y="868" width="0.5376%" height="15" fill="rgb(241,158,50)" fg:x="68" fg:w="3"/><text x="12.4364%" y="878.50"></text></g><g><title>&lt;module&gt; (torchgen/model.py:38) (1 samples, 0.18%)</title><rect x="12.5448%" y="884" width="0.1792%" height="15" fill="rgb(213,121,41)" fg:x="70" fg:w="1"/><text x="12.7948%" y="894.50"></text></g><g><title>wrap (dataclasses.py:1175) (1 samples, 0.18%)</title><rect x="12.5448%" y="900" width="0.1792%" height="15" fill="rgb(240,92,3)" fg:x="70" fg:w="1"/><text x="12.7948%" y="910.50"></text></g><g><title>_process_class (dataclasses.py:1040) (1 samples, 0.18%)</title><rect x="12.5448%" y="916" width="0.1792%" height="15" fill="rgb(205,123,3)" fg:x="70" fg:w="1"/><text x="12.7948%" y="926.50"></text></g><g><title>_init_fn (dataclasses.py:579) (1 samples, 0.18%)</title><rect x="12.5448%" y="932" width="0.1792%" height="15" fill="rgb(205,97,47)" fg:x="70" fg:w="1"/><text x="12.7948%" y="942.50"></text></g><g><title>_create_fn (dataclasses.py:432) (1 samples, 0.18%)</title><rect x="12.5448%" y="948" width="0.1792%" height="15" fill="rgb(247,152,14)" fg:x="70" fg:w="1"/><text x="12.7948%" y="958.50"></text></g><g><title>getmodule (inspect.py:875) (1 samples, 0.18%)</title><rect x="12.7240%" y="692" width="0.1792%" height="15" fill="rgb(248,195,53)" fg:x="71" fg:w="1"/><text x="12.9740%" y="702.50"></text></g><g><title>getabsfile (inspect.py:845) (1 samples, 0.18%)</title><rect x="12.7240%" y="708" width="0.1792%" height="15" fill="rgb(226,201,16)" fg:x="71" fg:w="1"/><text x="12.9740%" y="718.50"></text></g><g><title>abspath (posixpath.py:386) (1 samples, 0.18%)</title><rect x="12.7240%" y="724" width="0.1792%" height="15" fill="rgb(205,98,0)" fg:x="71" fg:w="1"/><text x="12.9740%" y="734.50"></text></g><g><title>normpath (posixpath.py:360) (1 samples, 0.18%)</title><rect x="12.7240%" y="740" width="0.1792%" height="15" fill="rgb(214,191,48)" fg:x="71" fg:w="1"/><text x="12.9740%" y="750.50"></text></g><g><title>_joinrealpath (posixpath.py:411) (1 samples, 0.18%)</title><rect x="12.9032%" y="724" width="0.1792%" height="15" fill="rgb(237,112,39)" fg:x="72" fg:w="1"/><text x="13.1532%" y="734.50"></text></g><g><title>isabs (posixpath.py:64) (1 samples, 0.18%)</title><rect x="12.9032%" y="740" width="0.1792%" height="15" fill="rgb(247,203,27)" fg:x="72" fg:w="1"/><text x="13.1532%" y="750.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:2968) (4 samples, 0.72%)</title><rect x="12.7240%" y="596" width="0.7168%" height="15" fill="rgb(235,124,28)" fg:x="71" fg:w="4"/><text x="12.9740%" y="606.50"></text></g><g><title>register_debug_prims (torch/_prims/debug_prims.py:41) (4 samples, 0.72%)</title><rect x="12.7240%" y="612" width="0.7168%" height="15" fill="rgb(208,207,46)" fg:x="71" fg:w="4"/><text x="12.9740%" y="622.50"></text></g><g><title>inner (torch/_custom_op/impl.py:330) (4 samples, 0.72%)</title><rect x="12.7240%" y="628" width="0.7168%" height="15" fill="rgb(234,176,4)" fg:x="71" fg:w="4"/><text x="12.9740%" y="638.50"></text></g><g><title>_register_impl (torch/_custom_op/impl.py:221) (4 samples, 0.72%)</title><rect x="12.7240%" y="644" width="0.7168%" height="15" fill="rgb(230,133,28)" fg:x="71" fg:w="4"/><text x="12.9740%" y="654.50"></text></g><g><title>getframeinfo (inspect.py:1624) (4 samples, 0.72%)</title><rect x="12.7240%" y="660" width="0.7168%" height="15" fill="rgb(211,137,40)" fg:x="71" fg:w="4"/><text x="12.9740%" y="670.50"></text></g><g><title>findsource (inspect.py:952) (4 samples, 0.72%)</title><rect x="12.7240%" y="676" width="0.7168%" height="15" fill="rgb(254,35,13)" fg:x="71" fg:w="4"/><text x="12.9740%" y="686.50"></text></g><g><title>getmodule (inspect.py:878) (3 samples, 0.54%)</title><rect x="12.9032%" y="692" width="0.5376%" height="15" fill="rgb(225,49,51)" fg:x="72" fg:w="3"/><text x="13.1532%" y="702.50"></text></g><g><title>realpath (posixpath.py:396) (3 samples, 0.54%)</title><rect x="12.9032%" y="708" width="0.5376%" height="15" fill="rgb(251,10,15)" fg:x="72" fg:w="3"/><text x="13.1532%" y="718.50"></text></g><g><title>_joinrealpath (posixpath.py:431) (2 samples, 0.36%)</title><rect x="13.0824%" y="724" width="0.3584%" height="15" fill="rgb(228,207,15)" fg:x="73" fg:w="2"/><text x="13.3324%" y="734.50"></text></g><g><title>fstatat64 (libc.so.6) (1 samples, 0.18%)</title><rect x="13.2616%" y="740" width="0.1792%" height="15" fill="rgb(241,99,19)" fg:x="74" fg:w="1"/><text x="13.5116%" y="750.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:10) (11 samples, 1.97%)</title><rect x="11.6487%" y="500" width="1.9713%" height="15" fill="rgb(207,104,49)" fg:x="65" fg:w="11"/><text x="11.8987%" y="510.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 1.97%)</title><rect x="11.6487%" y="516" width="1.9713%" height="15" fill="rgb(234,99,18)" fg:x="65" fg:w="11"/><text x="11.8987%" y="526.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 1.97%)</title><rect x="11.6487%" y="532" width="1.9713%" height="15" fill="rgb(213,191,49)" fg:x="65" fg:w="11"/><text x="11.8987%" y="542.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 1.97%)</title><rect x="11.6487%" y="548" width="1.9713%" height="15" fill="rgb(210,226,19)" fg:x="65" fg:w="11"/><text x="11.8987%" y="558.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 1.97%)</title><rect x="11.6487%" y="564" width="1.9713%" height="15" fill="rgb(229,97,18)" fg:x="65" fg:w="11"/><text x="11.8987%" y="574.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 1.97%)</title><rect x="11.6487%" y="580" width="1.9713%" height="15" fill="rgb(211,167,15)" fg:x="65" fg:w="11"/><text x="11.8987%" y="590.50">_..</text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:599) (1 samples, 0.18%)</title><rect x="13.4409%" y="596" width="0.1792%" height="15" fill="rgb(210,169,34)" fg:x="75" fg:w="1"/><text x="13.6909%" y="606.50"></text></g><g><title>_make_elementwise_unary_prim (torch/_prims/__init__.py:440) (1 samples, 0.18%)</title><rect x="13.4409%" y="612" width="0.1792%" height="15" fill="rgb(241,121,31)" fg:x="75" fg:w="1"/><text x="13.6909%" y="622.50"></text></g><g><title>_make_prim (torch/_prims/__init__.py:274) (1 samples, 0.18%)</title><rect x="13.4409%" y="628" width="0.1792%" height="15" fill="rgb(232,40,11)" fg:x="75" fg:w="1"/><text x="13.6909%" y="638.50"></text></g><g><title>define (torch/library.py:84) (1 samples, 0.18%)</title><rect x="13.4409%" y="644" width="0.1792%" height="15" fill="rgb(205,86,26)" fg:x="75" fg:w="1"/><text x="13.6909%" y="654.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:1659) (1 samples, 0.18%)</title><rect x="13.6201%" y="500" width="0.1792%" height="15" fill="rgb(231,126,28)" fg:x="76" fg:w="1"/><text x="13.8701%" y="510.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:190) (1 samples, 0.18%)</title><rect x="13.7993%" y="500" width="0.1792%" height="15" fill="rgb(219,221,18)" fg:x="77" fg:w="1"/><text x="14.0493%" y="510.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:123) (1 samples, 0.18%)</title><rect x="13.7993%" y="516" width="0.1792%" height="15" fill="rgb(211,40,0)" fg:x="77" fg:w="1"/><text x="14.0493%" y="526.50"></text></g><g><title>_convert_out_params (torch/_decomp/__init__.py:58) (1 samples, 0.18%)</title><rect x="13.7993%" y="532" width="0.1792%" height="15" fill="rgb(239,85,43)" fg:x="77" fg:w="1"/><text x="14.0493%" y="542.50"></text></g><g><title>signature (inspect.py:3254) (1 samples, 0.18%)</title><rect x="13.7993%" y="548" width="0.1792%" height="15" fill="rgb(231,55,21)" fg:x="77" fg:w="1"/><text x="14.0493%" y="558.50"></text></g><g><title>from_callable (inspect.py:3002) (1 samples, 0.18%)</title><rect x="13.7993%" y="564" width="0.1792%" height="15" fill="rgb(225,184,43)" fg:x="77" fg:w="1"/><text x="14.0493%" y="574.50"></text></g><g><title>_signature_from_callable (inspect.py:2463) (1 samples, 0.18%)</title><rect x="13.7993%" y="580" width="0.1792%" height="15" fill="rgb(251,158,41)" fg:x="77" fg:w="1"/><text x="14.0493%" y="590.50"></text></g><g><title>_signature_from_function (inspect.py:2323) (1 samples, 0.18%)</title><rect x="13.7993%" y="596" width="0.1792%" height="15" fill="rgb(234,159,37)" fg:x="77" fg:w="1"/><text x="14.0493%" y="606.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:190) (14 samples, 2.51%)</title><rect x="11.6487%" y="404" width="2.5090%" height="15" fill="rgb(216,204,22)" fg:x="65" fg:w="14"/><text x="11.8987%" y="414.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (14 samples, 2.51%)</title><rect x="11.6487%" y="420" width="2.5090%" height="15" fill="rgb(214,17,3)" fg:x="65" fg:w="14"/><text x="11.8987%" y="430.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (14 samples, 2.51%)</title><rect x="11.6487%" y="436" width="2.5090%" height="15" fill="rgb(212,111,17)" fg:x="65" fg:w="14"/><text x="11.8987%" y="446.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (14 samples, 2.51%)</title><rect x="11.6487%" y="452" width="2.5090%" height="15" fill="rgb(221,157,24)" fg:x="65" fg:w="14"/><text x="11.8987%" y="462.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (14 samples, 2.51%)</title><rect x="11.6487%" y="468" width="2.5090%" height="15" fill="rgb(252,16,13)" fg:x="65" fg:w="14"/><text x="11.8987%" y="478.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (14 samples, 2.51%)</title><rect x="11.6487%" y="484" width="2.5090%" height="15" fill="rgb(221,62,2)" fg:x="65" fg:w="14"/><text x="11.8987%" y="494.50">_c..</text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:2529) (1 samples, 0.18%)</title><rect x="13.9785%" y="500" width="0.1792%" height="15" fill="rgb(247,87,22)" fg:x="78" fg:w="1"/><text x="14.2285%" y="510.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:123) (1 samples, 0.18%)</title><rect x="13.9785%" y="516" width="0.1792%" height="15" fill="rgb(215,73,9)" fg:x="78" fg:w="1"/><text x="14.2285%" y="526.50"></text></g><g><title>_convert_out_params (torch/_decomp/__init__.py:58) (1 samples, 0.18%)</title><rect x="13.9785%" y="532" width="0.1792%" height="15" fill="rgb(207,175,33)" fg:x="78" fg:w="1"/><text x="14.2285%" y="542.50"></text></g><g><title>signature (inspect.py:3254) (1 samples, 0.18%)</title><rect x="13.9785%" y="548" width="0.1792%" height="15" fill="rgb(243,129,54)" fg:x="78" fg:w="1"/><text x="14.2285%" y="558.50"></text></g><g><title>from_callable (inspect.py:3002) (1 samples, 0.18%)</title><rect x="13.9785%" y="564" width="0.1792%" height="15" fill="rgb(227,119,45)" fg:x="78" fg:w="1"/><text x="14.2285%" y="574.50"></text></g><g><title>_signature_from_callable (inspect.py:2398) (1 samples, 0.18%)</title><rect x="13.9785%" y="580" width="0.1792%" height="15" fill="rgb(205,109,36)" fg:x="78" fg:w="1"/><text x="14.2285%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:1086) (1 samples, 0.18%)</title><rect x="14.1577%" y="500" width="0.1792%" height="15" fill="rgb(205,6,39)" fg:x="79" fg:w="1"/><text x="14.4077%" y="510.50"></text></g><g><title>inner (torch/_refs/__init__.py:992) (1 samples, 0.18%)</title><rect x="14.1577%" y="516" width="0.1792%" height="15" fill="rgb(221,32,16)" fg:x="79" fg:w="1"/><text x="14.4077%" y="526.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:133) (1 samples, 0.18%)</title><rect x="14.1577%" y="532" width="0.1792%" height="15" fill="rgb(228,144,50)" fg:x="79" fg:w="1"/><text x="14.4077%" y="542.50"></text></g><g><title>tree_map (torch/utils/_pytree.py:283) (1 samples, 0.18%)</title><rect x="14.1577%" y="548" width="0.1792%" height="15" fill="rgb(229,201,53)" fg:x="79" fg:w="1"/><text x="14.4077%" y="558.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/_pytree.py:283) (1 samples, 0.18%)</title><rect x="14.1577%" y="564" width="0.1792%" height="15" fill="rgb(249,153,27)" fg:x="79" fg:w="1"/><text x="14.4077%" y="574.50"></text></g><g><title>register (torch/_decomp/__init__.py:130) (1 samples, 0.18%)</title><rect x="14.1577%" y="580" width="0.1792%" height="15" fill="rgb(227,106,25)" fg:x="79" fg:w="1"/><text x="14.4077%" y="590.50"></text></g><g><title>_add_op_to_registry (torch/_decomp/__init__.py:53) (1 samples, 0.18%)</title><rect x="14.1577%" y="596" width="0.1792%" height="15" fill="rgb(230,65,29)" fg:x="79" fg:w="1"/><text x="14.4077%" y="606.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.1577%" y="612" width="0.1792%" height="15" fill="rgb(221,57,46)" fg:x="79" fg:w="1"/><text x="14.4077%" y="622.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.1577%" y="628" width="0.1792%" height="15" fill="rgb(229,161,17)" fg:x="79" fg:w="1"/><text x="14.4077%" y="638.50"></text></g><g><title>PyThread_tss_set (python3.10) (1 samples, 0.18%)</title><rect x="14.1577%" y="644" width="0.1792%" height="15" fill="rgb(222,213,11)" fg:x="79" fg:w="1"/><text x="14.4077%" y="654.50"></text></g><g><title>pthread_setspecific (libc.so.6) (1 samples, 0.18%)</title><rect x="14.1577%" y="660" width="0.1792%" height="15" fill="rgb(235,35,13)" fg:x="79" fg:w="1"/><text x="14.4077%" y="670.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:1548) (1 samples, 0.18%)</title><rect x="14.3369%" y="500" width="0.1792%" height="15" fill="rgb(233,158,34)" fg:x="80" fg:w="1"/><text x="14.5869%" y="510.50"></text></g><g><title>inner (torch/_refs/__init__.py:456) (1 samples, 0.18%)</title><rect x="14.3369%" y="516" width="0.1792%" height="15" fill="rgb(215,151,48)" fg:x="80" fg:w="1"/><text x="14.5869%" y="526.50"></text></g><g><title>_out_wrapper (torch/_prims_common/wrappers.py:273) (1 samples, 0.18%)</title><rect x="14.3369%" y="532" width="0.1792%" height="15" fill="rgb(229,84,14)" fg:x="80" fg:w="1"/><text x="14.5869%" y="542.50"></text></g><g><title>__init__ (inspect.py:2639) (1 samples, 0.18%)</title><rect x="14.3369%" y="548" width="0.1792%" height="15" fill="rgb(229,68,14)" fg:x="80" fg:w="1"/><text x="14.5869%" y="558.50"></text></g><g><title>__getattr__ (torch/_ops.py:670) (1 samples, 0.18%)</title><rect x="14.5161%" y="596" width="0.1792%" height="15" fill="rgb(243,106,26)" fg:x="81" fg:w="1"/><text x="14.7661%" y="606.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.5161%" y="612" width="0.1792%" height="15" fill="rgb(206,45,38)" fg:x="81" fg:w="1"/><text x="14.7661%" y="622.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}, pybind11::tuple, std::string const&amp;, std::string const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}, pybind11::tuple (*)(std::string const&amp;, std::string const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.5161%" y="628" width="0.1792%" height="15" fill="rgb(226,6,15)" fg:x="81" fg:w="1"/><text x="14.7661%" y="638.50"></text></g><g><title>torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}::operator() const (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.5161%" y="644" width="0.1792%" height="15" fill="rgb(232,22,54)" fg:x="81" fg:w="1"/><text x="14.7661%" y="654.50"></text></g><g><title>pybind11::cpp_function::initialize_generic (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.5161%" y="660" width="0.1792%" height="15" fill="rgb(229,222,32)" fg:x="81" fg:w="1"/><text x="14.7661%" y="670.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:3836) (2 samples, 0.36%)</title><rect x="14.5161%" y="500" width="0.3584%" height="15" fill="rgb(228,62,29)" fg:x="81" fg:w="2"/><text x="14.7661%" y="510.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:133) (2 samples, 0.36%)</title><rect x="14.5161%" y="516" width="0.3584%" height="15" fill="rgb(251,103,34)" fg:x="81" fg:w="2"/><text x="14.7661%" y="526.50"></text></g><g><title>tree_map (torch/utils/_pytree.py:283) (2 samples, 0.36%)</title><rect x="14.5161%" y="532" width="0.3584%" height="15" fill="rgb(233,12,30)" fg:x="81" fg:w="2"/><text x="14.7661%" y="542.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/_pytree.py:283) (2 samples, 0.36%)</title><rect x="14.5161%" y="548" width="0.3584%" height="15" fill="rgb(238,52,0)" fg:x="81" fg:w="2"/><text x="14.7661%" y="558.50"></text></g><g><title>register (torch/_decomp/__init__.py:130) (2 samples, 0.36%)</title><rect x="14.5161%" y="564" width="0.3584%" height="15" fill="rgb(223,98,5)" fg:x="81" fg:w="2"/><text x="14.7661%" y="574.50"></text></g><g><title>_add_op_to_registry (torch/_decomp/__init__.py:44) (2 samples, 0.36%)</title><rect x="14.5161%" y="580" width="0.3584%" height="15" fill="rgb(228,75,37)" fg:x="81" fg:w="2"/><text x="14.7661%" y="590.50"></text></g><g><title>__getattr__ (torch/_ops.py:674) (1 samples, 0.18%)</title><rect x="14.6953%" y="596" width="0.1792%" height="15" fill="rgb(205,115,49)" fg:x="82" fg:w="1"/><text x="14.9453%" y="606.50"></text></g><g><title>__init__ (torch/_ops.py:427) (1 samples, 0.18%)</title><rect x="14.6953%" y="612" width="0.1792%" height="15" fill="rgb(250,154,43)" fg:x="82" fg:w="1"/><text x="14.9453%" y="622.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.6953%" y="628" width="0.1792%" height="15" fill="rgb(226,43,29)" fg:x="82" fg:w="1"/><text x="14.9453%" y="638.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(c10::FunctionSchema&amp;)#208} const&amp;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;, c10::FunctionSchema&amp;, &gt;(torch::jit::initJITBindings(_object*)::{lambda(c10::FunctionSchema&amp;)#208} const&amp;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt; (*)(c10::FunctionSchema&amp;), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.6953%" y="644" width="0.1792%" height="15" fill="rgb(249,228,39)" fg:x="82" fg:w="1"/><text x="14.9453%" y="654.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.6953%" y="660" width="0.1792%" height="15" fill="rgb(216,79,43)" fg:x="82" fg:w="1"/><text x="14.9453%" y="670.50"></text></g><g><title>pybind11::detail::find_registered_python_instance (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.6953%" y="676" width="0.1792%" height="15" fill="rgb(228,95,12)" fg:x="82" fg:w="1"/><text x="14.9453%" y="686.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (libtorch_python.so) (1 samples, 0.18%)</title><rect x="14.6953%" y="692" width="0.1792%" height="15" fill="rgb(249,221,15)" fg:x="82" fg:w="1"/><text x="14.9453%" y="702.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:3842) (1 samples, 0.18%)</title><rect x="14.8746%" y="500" width="0.1792%" height="15" fill="rgb(233,34,13)" fg:x="83" fg:w="1"/><text x="15.1246%" y="510.50"></text></g><g><title>__getattr__ (torch/_ops.py:775) (1 samples, 0.18%)</title><rect x="14.8746%" y="516" width="0.1792%" height="15" fill="rgb(214,103,39)" fg:x="83" fg:w="1"/><text x="15.1246%" y="526.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1753) (28 samples, 5.02%)</title><rect x="10.2151%" y="180" width="5.0179%" height="15" fill="rgb(251,126,39)" fg:x="57" fg:w="28"/><text x="10.4651%" y="190.50">&lt;modul..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (28 samples, 5.02%)</title><rect x="10.2151%" y="196" width="5.0179%" height="15" fill="rgb(214,216,36)" fg:x="57" fg:w="28"/><text x="10.4651%" y="206.50">_handl..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (28 samples, 5.02%)</title><rect x="10.2151%" y="212" width="5.0179%" height="15" fill="rgb(220,221,8)" fg:x="57" fg:w="28"/><text x="10.4651%" y="222.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (28 samples, 5.02%)</title><rect x="10.2151%" y="228" width="5.0179%" height="15" fill="rgb(240,216,3)" fg:x="57" fg:w="28"/><text x="10.4651%" y="238.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (28 samples, 5.02%)</title><rect x="10.2151%" y="244" width="5.0179%" height="15" fill="rgb(232,218,17)" fg:x="57" fg:w="28"/><text x="10.4651%" y="254.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (28 samples, 5.02%)</title><rect x="10.2151%" y="260" width="5.0179%" height="15" fill="rgb(229,163,45)" fg:x="57" fg:w="28"/><text x="10.4651%" y="270.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (28 samples, 5.02%)</title><rect x="10.2151%" y="276" width="5.0179%" height="15" fill="rgb(231,110,42)" fg:x="57" fg:w="28"/><text x="10.4651%" y="286.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (28 samples, 5.02%)</title><rect x="10.2151%" y="292" width="5.0179%" height="15" fill="rgb(208,170,48)" fg:x="57" fg:w="28"/><text x="10.4651%" y="302.50">_call_..</text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:8) (20 samples, 3.58%)</title><rect x="11.6487%" y="308" width="3.5842%" height="15" fill="rgb(239,116,25)" fg:x="65" fg:w="20"/><text x="11.8987%" y="318.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (20 samples, 3.58%)</title><rect x="11.6487%" y="324" width="3.5842%" height="15" fill="rgb(219,200,50)" fg:x="65" fg:w="20"/><text x="11.8987%" y="334.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (20 samples, 3.58%)</title><rect x="11.6487%" y="340" width="3.5842%" height="15" fill="rgb(245,200,0)" fg:x="65" fg:w="20"/><text x="11.8987%" y="350.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (20 samples, 3.58%)</title><rect x="11.6487%" y="356" width="3.5842%" height="15" fill="rgb(245,119,33)" fg:x="65" fg:w="20"/><text x="11.8987%" y="366.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (20 samples, 3.58%)</title><rect x="11.6487%" y="372" width="3.5842%" height="15" fill="rgb(231,125,12)" fg:x="65" fg:w="20"/><text x="11.8987%" y="382.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (20 samples, 3.58%)</title><rect x="11.6487%" y="388" width="3.5842%" height="15" fill="rgb(216,96,41)" fg:x="65" fg:w="20"/><text x="11.8987%" y="398.50">_cal..</text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:191) (6 samples, 1.08%)</title><rect x="14.1577%" y="404" width="1.0753%" height="15" fill="rgb(248,43,45)" fg:x="79" fg:w="6"/><text x="14.4077%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (6 samples, 1.08%)</title><rect x="14.1577%" y="420" width="1.0753%" height="15" fill="rgb(217,222,7)" fg:x="79" fg:w="6"/><text x="14.4077%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (6 samples, 1.08%)</title><rect x="14.1577%" y="436" width="1.0753%" height="15" fill="rgb(233,28,6)" fg:x="79" fg:w="6"/><text x="14.4077%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (6 samples, 1.08%)</title><rect x="14.1577%" y="452" width="1.0753%" height="15" fill="rgb(231,218,15)" fg:x="79" fg:w="6"/><text x="14.4077%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (6 samples, 1.08%)</title><rect x="14.1577%" y="468" width="1.0753%" height="15" fill="rgb(226,171,48)" fg:x="79" fg:w="6"/><text x="14.4077%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 1.08%)</title><rect x="14.1577%" y="484" width="1.0753%" height="15" fill="rgb(235,201,9)" fg:x="79" fg:w="6"/><text x="14.4077%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:5900) (1 samples, 0.18%)</title><rect x="15.0538%" y="500" width="0.1792%" height="15" fill="rgb(217,80,15)" fg:x="84" fg:w="1"/><text x="15.3038%" y="510.50"></text></g><g><title>_make_inplace (torch/_refs/__init__.py:502) (1 samples, 0.18%)</title><rect x="15.0538%" y="516" width="0.1792%" height="15" fill="rgb(219,152,8)" fg:x="84" fg:w="1"/><text x="15.3038%" y="526.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:133) (1 samples, 0.18%)</title><rect x="15.0538%" y="532" width="0.1792%" height="15" fill="rgb(243,107,38)" fg:x="84" fg:w="1"/><text x="15.3038%" y="542.50"></text></g><g><title>tree_map (torch/utils/_pytree.py:283) (1 samples, 0.18%)</title><rect x="15.0538%" y="548" width="0.1792%" height="15" fill="rgb(231,17,5)" fg:x="84" fg:w="1"/><text x="15.3038%" y="558.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/_pytree.py:283) (1 samples, 0.18%)</title><rect x="15.0538%" y="564" width="0.1792%" height="15" fill="rgb(209,25,54)" fg:x="84" fg:w="1"/><text x="15.3038%" y="574.50"></text></g><g><title>register (torch/_decomp/__init__.py:130) (1 samples, 0.18%)</title><rect x="15.0538%" y="580" width="0.1792%" height="15" fill="rgb(219,0,2)" fg:x="84" fg:w="1"/><text x="15.3038%" y="590.50"></text></g><g><title>_add_op_to_registry (torch/_decomp/__init__.py:44) (1 samples, 0.18%)</title><rect x="15.0538%" y="596" width="0.1792%" height="15" fill="rgb(246,9,5)" fg:x="84" fg:w="1"/><text x="15.3038%" y="606.50"></text></g><g><title>__getattr__ (torch/_ops.py:670) (1 samples, 0.18%)</title><rect x="15.0538%" y="612" width="0.1792%" height="15" fill="rgb(226,159,4)" fg:x="84" fg:w="1"/><text x="15.3038%" y="622.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="628" width="0.1792%" height="15" fill="rgb(219,175,34)" fg:x="84" fg:w="1"/><text x="15.3038%" y="638.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}, pybind11::tuple, std::string const&amp;, std::string const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}, pybind11::tuple (*)(std::string const&amp;, std::string const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="644" width="0.1792%" height="15" fill="rgb(236,10,46)" fg:x="84" fg:w="1"/><text x="15.3038%" y="654.50"></text></g><g><title>torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;, std::string const&amp;)#194}::operator() const (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="660" width="0.1792%" height="15" fill="rgb(240,211,16)" fg:x="84" fg:w="1"/><text x="15.3038%" y="670.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="676" width="0.1792%" height="15" fill="rgb(205,3,43)" fg:x="84" fg:w="1"/><text x="15.3038%" y="686.50"></text></g><g><title>pybind11::detail::find_registered_python_instance (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="692" width="0.1792%" height="15" fill="rgb(245,7,22)" fg:x="84" fg:w="1"/><text x="15.3038%" y="702.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (libtorch_python.so) (1 samples, 0.18%)</title><rect x="15.0538%" y="708" width="0.1792%" height="15" fill="rgb(239,132,32)" fg:x="84" fg:w="1"/><text x="15.3038%" y="718.50"></text></g><g><title>0x7f34c3a3ad21 (?) (1 samples, 0.18%)</title><rect x="15.2330%" y="420" width="0.1792%" height="15" fill="rgb(228,202,34)" fg:x="85" fg:w="1"/><text x="15.4830%" y="430.50"></text></g><g><title>0x7f34c3a8487a (nvidia/cublas/lib/libcublasLt.so.12) (1 samples, 0.18%)</title><rect x="15.4122%" y="420" width="0.1792%" height="15" fill="rgb(254,200,22)" fg:x="86" fg:w="1"/><text x="15.6622%" y="430.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:235) (3 samples, 0.54%)</title><rect x="15.2330%" y="180" width="0.5376%" height="15" fill="rgb(219,10,39)" fg:x="85" fg:w="3"/><text x="15.4830%" y="190.50"></text></g><g><title>_load_global_deps (torch/__init__.py:174) (3 samples, 0.54%)</title><rect x="15.2330%" y="196" width="0.5376%" height="15" fill="rgb(226,210,39)" fg:x="85" fg:w="3"/><text x="15.4830%" y="206.50"></text></g><g><title>__init__ (ctypes/__init__.py:374) (3 samples, 0.54%)</title><rect x="15.2330%" y="212" width="0.5376%" height="15" fill="rgb(208,219,16)" fg:x="85" fg:w="3"/><text x="15.4830%" y="222.50"></text></g><g><title>0x7f34fe612001 (_ctypes.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="15.2330%" y="228" width="0.5376%" height="15" fill="rgb(216,158,51)" fg:x="85" fg:w="3"/><text x="15.4830%" y="238.50"></text></g><g><title>dlopen (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="244" width="0.5376%" height="15" fill="rgb(233,14,44)" fg:x="85" fg:w="3"/><text x="15.4830%" y="254.50"></text></g><g><title>0x7f34fee8512e (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="260" width="0.5376%" height="15" fill="rgb(237,97,39)" fg:x="85" fg:w="3"/><text x="15.4830%" y="270.50"></text></g><g><title>_dl_catch_error (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="276" width="0.5376%" height="15" fill="rgb(218,198,43)" fg:x="85" fg:w="3"/><text x="15.4830%" y="286.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="292" width="0.5376%" height="15" fill="rgb(231,104,20)" fg:x="85" fg:w="3"/><text x="15.4830%" y="302.50"></text></g><g><title>0x7f34fee8563c (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="308" width="0.5376%" height="15" fill="rgb(254,36,13)" fg:x="85" fg:w="3"/><text x="15.4830%" y="318.50"></text></g><g><title>0x7f34ff17334e (ld-linux-x86-64.so.2) (3 samples, 0.54%)</title><rect x="15.2330%" y="324" width="0.5376%" height="15" fill="rgb(248,14,50)" fg:x="85" fg:w="3"/><text x="15.4830%" y="334.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="340" width="0.5376%" height="15" fill="rgb(217,107,29)" fg:x="85" fg:w="3"/><text x="15.4830%" y="350.50"></text></g><g><title>0x7f34ff172ff6 (ld-linux-x86-64.so.2) (3 samples, 0.54%)</title><rect x="15.2330%" y="356" width="0.5376%" height="15" fill="rgb(251,169,33)" fg:x="85" fg:w="3"/><text x="15.4830%" y="366.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (3 samples, 0.54%)</title><rect x="15.2330%" y="372" width="0.5376%" height="15" fill="rgb(217,108,32)" fg:x="85" fg:w="3"/><text x="15.4830%" y="382.50"></text></g><g><title>0x7f34ff16b568 (ld-linux-x86-64.so.2) (3 samples, 0.54%)</title><rect x="15.2330%" y="388" width="0.5376%" height="15" fill="rgb(219,66,42)" fg:x="85" fg:w="3"/><text x="15.4830%" y="398.50"></text></g><g><title>0x7f34ff16b47e (ld-linux-x86-64.so.2) (3 samples, 0.54%)</title><rect x="15.2330%" y="404" width="0.5376%" height="15" fill="rgb(206,180,7)" fg:x="85" fg:w="3"/><text x="15.4830%" y="414.50"></text></g><g><title>0x7f34c3be9d05 (nvidia/cublas/lib/libcublasLt.so.12) (1 samples, 0.18%)</title><rect x="15.5914%" y="420" width="0.1792%" height="15" fill="rgb(208,226,31)" fg:x="87" fg:w="1"/><text x="15.8414%" y="430.50"></text></g><g><title>0x7f34c6bdcb12 (nvidia/cublas/lib/libcublasLt.so.12) (1 samples, 0.18%)</title><rect x="15.5914%" y="436" width="0.1792%" height="15" fill="rgb(218,26,49)" fg:x="87" fg:w="1"/><text x="15.8414%" y="446.50"></text></g><g><title>0x7f34c6befeaa (nvidia/cublas/lib/libcublasLt.so.12) (1 samples, 0.18%)</title><rect x="15.5914%" y="452" width="0.1792%" height="15" fill="rgb(233,197,48)" fg:x="87" fg:w="1"/><text x="15.8414%" y="462.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="15.5914%" y="468" width="0.1792%" height="15" fill="rgb(252,181,51)" fg:x="87" fg:w="1"/><text x="15.8414%" y="478.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="15.5914%" y="484" width="0.1792%" height="15" fill="rgb(253,90,19)" fg:x="87" fg:w="1"/><text x="15.8414%" y="494.50"></text></g><g><title>0x7f34ff176334 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="15.7706%" y="452" width="0.1792%" height="15" fill="rgb(215,171,30)" fg:x="88" fg:w="1"/><text x="16.0206%" y="462.50"></text></g><g><title>0x7f34ff1763ac (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="15.9498%" y="452" width="0.1792%" height="15" fill="rgb(214,222,9)" fg:x="89" fg:w="1"/><text x="16.1998%" y="462.50"></text></g><g><title>0x7f34ff176429 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="16.1290%" y="452" width="0.1792%" height="15" fill="rgb(223,3,22)" fg:x="90" fg:w="1"/><text x="16.3790%" y="462.50"></text></g><g><title>0x7f34ff171128 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="16.3082%" y="468" width="0.1792%" height="15" fill="rgb(225,196,46)" fg:x="91" fg:w="1"/><text x="16.5582%" y="478.50"></text></g><g><title>0x7f34ff171143 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="16.4875%" y="468" width="0.1792%" height="15" fill="rgb(209,110,37)" fg:x="92" fg:w="1"/><text x="16.7375%" y="478.50"></text></g><g><title>0x7f34ff17114b (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="16.6667%" y="468" width="0.1792%" height="15" fill="rgb(249,89,12)" fg:x="93" fg:w="1"/><text x="16.9167%" y="478.50"></text></g><g><title>0x7f34ff1704fa (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="16.8459%" y="484" width="0.1792%" height="15" fill="rgb(226,27,33)" fg:x="94" fg:w="1"/><text x="17.0959%" y="494.50"></text></g><g><title>0x7f34ff170722 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="17.0251%" y="484" width="0.1792%" height="15" fill="rgb(213,82,22)" fg:x="95" fg:w="1"/><text x="17.2751%" y="494.50"></text></g><g><title>0x7f34ff172f9a (ld-linux-x86-64.so.2) (10 samples, 1.79%)</title><rect x="15.7706%" y="404" width="1.7921%" height="15" fill="rgb(248,140,0)" fg:x="88" fg:w="10"/><text x="16.0206%" y="414.50">0..</text></g><g><title>_dl_catch_exception (libc.so.6) (10 samples, 1.79%)</title><rect x="15.7706%" y="420" width="1.7921%" height="15" fill="rgb(228,106,3)" fg:x="88" fg:w="10"/><text x="16.0206%" y="430.50">_..</text></g><g><title>0x7f34ff173bae (ld-linux-x86-64.so.2) (10 samples, 1.79%)</title><rect x="15.7706%" y="436" width="1.7921%" height="15" fill="rgb(209,23,37)" fg:x="88" fg:w="10"/><text x="16.0206%" y="446.50">0..</text></g><g><title>0x7f34ff1764e8 (ld-linux-x86-64.so.2) (7 samples, 1.25%)</title><rect x="16.3082%" y="452" width="1.2545%" height="15" fill="rgb(241,93,50)" fg:x="91" fg:w="7"/><text x="16.5582%" y="462.50"></text></g><g><title>0x7f34ff171211 (ld-linux-x86-64.so.2) (4 samples, 0.72%)</title><rect x="16.8459%" y="468" width="0.7168%" height="15" fill="rgb(253,46,43)" fg:x="94" fg:w="4"/><text x="17.0959%" y="478.50"></text></g><g><title>0x7f34ff170734 (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="17.2043%" y="484" width="0.3584%" height="15" fill="rgb(226,206,43)" fg:x="96" fg:w="2"/><text x="17.4543%" y="494.50"></text></g><g><title>_GLOBAL__sub_I_ADInplaceOrViewType_0.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="468" width="0.1792%" height="15" fill="rgb(217,54,7)" fg:x="98" fg:w="1"/><text x="17.8127%" y="478.50"></text></g><g><title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_ADInplaceOrView_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="484" width="0.1792%" height="15" fill="rgb(223,5,52)" fg:x="98" fg:w="1"/><text x="17.8127%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::floor_divide_out_out(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="500" width="0.1792%" height="15" fill="rgb(206,52,46)" fg:x="98" fg:w="1"/><text x="17.8127%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="516" width="0.1792%" height="15" fill="rgb(253,136,11)" fg:x="98" fg:w="1"/><text x="17.8127%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="532" width="0.1792%" height="15" fill="rgb(208,106,33)" fg:x="98" fg:w="1"/><text x="17.8127%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="548" width="0.1792%" height="15" fill="rgb(206,54,4)" fg:x="98" fg:w="1"/><text x="17.8127%" y="558.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="564" width="0.1792%" height="15" fill="rgb(213,3,15)" fg:x="98" fg:w="1"/><text x="17.8127%" y="574.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="580" width="0.1792%" height="15" fill="rgb(252,211,39)" fg:x="98" fg:w="1"/><text x="17.8127%" y="590.50"></text></g><g><title>c10::Argument::cloneWithType (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="596" width="0.1792%" height="15" fill="rgb(223,6,36)" fg:x="98" fg:w="1"/><text x="17.8127%" y="606.50"></text></g><g><title>std::string::_Rep::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.5627%" y="612" width="0.1792%" height="15" fill="rgb(252,169,45)" fg:x="98" fg:w="1"/><text x="17.8127%" y="622.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.7419%" y="500" width="0.1792%" height="15" fill="rgb(212,48,26)" fg:x="99" fg:w="1"/><text x="17.9919%" y="510.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.7419%" y="516" width="0.1792%" height="15" fill="rgb(251,102,48)" fg:x="99" fg:w="1"/><text x="17.9919%" y="526.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.7419%" y="532" width="0.1792%" height="15" fill="rgb(243,208,16)" fg:x="99" fg:w="1"/><text x="17.9919%" y="542.50"></text></g><g><title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.7419%" y="548" width="0.1792%" height="15" fill="rgb(219,96,24)" fg:x="99" fg:w="1"/><text x="17.9919%" y="558.50"></text></g><g><title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::grow (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.7419%" y="564" width="0.1792%" height="15" fill="rgb(219,33,29)" fg:x="99" fg:w="1"/><text x="17.9919%" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="17.7419%" y="580" width="0.1792%" height="15" fill="rgb(223,176,5)" fg:x="99" fg:w="1"/><text x="17.9919%" y="590.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="17.7419%" y="596" width="0.1792%" height="15" fill="rgb(228,140,14)" fg:x="99" fg:w="1"/><text x="17.9919%" y="606.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="17.7419%" y="612" width="0.1792%" height="15" fill="rgb(217,179,31)" fg:x="99" fg:w="1"/><text x="17.9919%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_ADInplaceOrViewType_1.cpp (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="17.7419%" y="468" width="0.3584%" height="15" fill="rgb(230,9,30)" fg:x="99" fg:w="2"/><text x="17.9919%" y="478.50"></text></g><g><title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_ADInplaceOrView_2 (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="17.7419%" y="484" width="0.3584%" height="15" fill="rgb(230,136,20)" fg:x="99" fg:w="2"/><text x="17.9919%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::bitwise_and_out_Tensor_out(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="500" width="0.1792%" height="15" fill="rgb(215,210,22)" fg:x="100" fg:w="1"/><text x="18.1711%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="516" width="0.1792%" height="15" fill="rgb(218,43,5)" fg:x="100" fg:w="1"/><text x="18.1711%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="532" width="0.1792%" height="15" fill="rgb(216,11,5)" fg:x="100" fg:w="1"/><text x="18.1711%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="548" width="0.1792%" height="15" fill="rgb(209,82,29)" fg:x="100" fg:w="1"/><text x="18.1711%" y="558.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="564" width="0.1792%" height="15" fill="rgb(244,115,12)" fg:x="100" fg:w="1"/><text x="18.1711%" y="574.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="580" width="0.1792%" height="15" fill="rgb(222,82,18)" fg:x="100" fg:w="1"/><text x="18.1711%" y="590.50"></text></g><g><title>c10::Argument::cloneWithType (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="596" width="0.1792%" height="15" fill="rgb(249,227,8)" fg:x="100" fg:w="1"/><text x="18.1711%" y="606.50"></text></g><g><title>c10::Argument::Argument (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="612" width="0.1792%" height="15" fill="rgb(253,141,45)" fg:x="100" fg:w="1"/><text x="18.1711%" y="622.50"></text></g><g><title>c10::AliasInfo::AliasInfo (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="628" width="0.1792%" height="15" fill="rgb(234,184,4)" fg:x="100" fg:w="1"/><text x="18.1711%" y="638.50"></text></g><g><title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;c10::Symbol, true&gt; const*)#1}&gt; (libtorch_python.so) (1 samples, 0.18%)</title><rect x="17.9211%" y="644" width="0.1792%" height="15" fill="rgb(218,194,23)" fg:x="100" fg:w="1"/><text x="18.1711%" y="654.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="17.9211%" y="660" width="0.1792%" height="15" fill="rgb(235,66,41)" fg:x="100" fg:w="1"/><text x="18.1711%" y="670.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="17.9211%" y="676" width="0.1792%" height="15" fill="rgb(245,217,1)" fg:x="100" fg:w="1"/><text x="18.1711%" y="686.50"></text></g><g><title>_GLOBAL__sub_I_BatchRulesDecompositions.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="468" width="0.1792%" height="15" fill="rgb(229,91,1)" fg:x="101" fg:w="1"/><text x="18.3504%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="484" width="0.1792%" height="15" fill="rgb(207,101,30)" fg:x="101" fg:w="1"/><text x="18.3504%" y="494.50"></text></g><g><title>at::functorch::TORCH_LIBRARY_IMPL_init_aten_FuncTorchBatchedDecomposition_3 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="500" width="0.1792%" height="15" fill="rgb(223,82,49)" fg:x="101" fg:w="1"/><text x="18.3504%" y="510.50"></text></g><g><title>torch::Library::impl&lt;char const*, at::Tensor (*)(at::Tensor const&amp;)&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="516" width="0.1792%" height="15" fill="rgb(218,167,17)" fg:x="101" fg:w="1"/><text x="18.3504%" y="526.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="532" width="0.1792%" height="15" fill="rgb(208,103,14)" fg:x="101" fg:w="1"/><text x="18.3504%" y="542.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="548" width="0.1792%" height="15" fill="rgb(238,20,8)" fg:x="101" fg:w="1"/><text x="18.3504%" y="558.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.1004%" y="564" width="0.1792%" height="15" fill="rgb(218,80,54)" fg:x="101" fg:w="1"/><text x="18.3504%" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="18.1004%" y="580" width="0.1792%" height="15" fill="rgb(240,144,17)" fg:x="101" fg:w="1"/><text x="18.3504%" y="590.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="18.1004%" y="596" width="0.1792%" height="15" fill="rgb(245,27,50)" fg:x="101" fg:w="1"/><text x="18.3504%" y="606.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="18.1004%" y="612" width="0.1792%" height="15" fill="rgb(251,51,7)" fg:x="101" fg:w="1"/><text x="18.3504%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_BatchRulesUnaryOps.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="468" width="0.1792%" height="15" fill="rgb(245,217,29)" fg:x="102" fg:w="1"/><text x="18.5296%" y="478.50"></text></g><g><title>at::functorch::TORCH_LIBRARY_IMPL_init_aten_FuncTorchBatched_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="484" width="0.1792%" height="15" fill="rgb(221,176,29)" fg:x="102" fg:w="1"/><text x="18.5296%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="500" width="0.1792%" height="15" fill="rgb(212,180,24)" fg:x="102" fg:w="1"/><text x="18.5296%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="516" width="0.1792%" height="15" fill="rgb(254,24,2)" fg:x="102" fg:w="1"/><text x="18.5296%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="532" width="0.1792%" height="15" fill="rgb(230,100,2)" fg:x="102" fg:w="1"/><text x="18.5296%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.2796%" y="548" width="0.1792%" height="15" fill="rgb(219,142,25)" fg:x="102" fg:w="1"/><text x="18.5296%" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="18.2796%" y="564" width="0.1792%" height="15" fill="rgb(240,73,43)" fg:x="102" fg:w="1"/><text x="18.5296%" y="574.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="18.2796%" y="580" width="0.1792%" height="15" fill="rgb(214,114,15)" fg:x="102" fg:w="1"/><text x="18.5296%" y="590.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="18.2796%" y="596" width="0.1792%" height="15" fill="rgb(207,130,4)" fg:x="102" fg:w="1"/><text x="18.5296%" y="606.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="564" width="0.1792%" height="15" fill="rgb(221,25,40)" fg:x="103" fg:w="1"/><text x="18.7088%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="580" width="0.1792%" height="15" fill="rgb(241,184,7)" fg:x="103" fg:w="1"/><text x="18.7088%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="596" width="0.1792%" height="15" fill="rgb(235,159,4)" fg:x="103" fg:w="1"/><text x="18.7088%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="612" width="0.1792%" height="15" fill="rgb(214,87,48)" fg:x="103" fg:w="1"/><text x="18.7088%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="628" width="0.1792%" height="15" fill="rgb(246,198,24)" fg:x="103" fg:w="1"/><text x="18.7088%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="644" width="0.1792%" height="15" fill="rgb(209,66,40)" fg:x="103" fg:w="1"/><text x="18.7088%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="660" width="0.1792%" height="15" fill="rgb(233,147,39)" fg:x="103" fg:w="1"/><text x="18.7088%" y="670.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="676" width="0.1792%" height="15" fill="rgb(231,145,52)" fg:x="103" fg:w="1"/><text x="18.7088%" y="686.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="18.4588%" y="692" width="0.1792%" height="15" fill="rgb(206,20,26)" fg:x="103" fg:w="1"/><text x="18.7088%" y="702.50"></text></g><g><title>_GLOBAL__sub_I_NamedRegistrations.cpp (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="468" width="0.3584%" height="15" fill="rgb(238,220,4)" fg:x="103" fg:w="2"/><text x="18.7088%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="484" width="0.3584%" height="15" fill="rgb(252,195,42)" fg:x="103" fg:w="2"/><text x="18.7088%" y="494.50"></text></g><g><title>TORCH_LIBRARY_IMPL_init_aten_Named_2 (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="500" width="0.3584%" height="15" fill="rgb(209,10,6)" fg:x="103" fg:w="2"/><text x="18.7088%" y="510.50"></text></g><g><title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="516" width="0.3584%" height="15" fill="rgb(229,3,52)" fg:x="103" fg:w="2"/><text x="18.7088%" y="526.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="532" width="0.3584%" height="15" fill="rgb(253,49,37)" fg:x="103" fg:w="2"/><text x="18.7088%" y="542.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.4588%" y="548" width="0.3584%" height="15" fill="rgb(240,103,49)" fg:x="103" fg:w="2"/><text x="18.7088%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.6380%" y="564" width="0.1792%" height="15" fill="rgb(250,182,30)" fg:x="104" fg:w="1"/><text x="18.8880%" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="18.6380%" y="580" width="0.1792%" height="15" fill="rgb(248,8,30)" fg:x="104" fg:w="1"/><text x="18.8880%" y="590.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.8172%" y="500" width="0.1792%" height="15" fill="rgb(237,120,30)" fg:x="105" fg:w="1"/><text x="19.0672%" y="510.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.8172%" y="516" width="0.1792%" height="15" fill="rgb(221,146,34)" fg:x="105" fg:w="1"/><text x="19.0672%" y="526.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.8172%" y="532" width="0.1792%" height="15" fill="rgb(242,55,13)" fg:x="105" fg:w="1"/><text x="19.0672%" y="542.50"></text></g><g><title>__pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="18.8172%" y="548" width="0.1792%" height="15" fill="rgb(242,112,31)" fg:x="105" fg:w="1"/><text x="19.0672%" y="558.50"></text></g><g><title>_GLOBAL__sub_I_RegisterCPU.cpp (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.8172%" y="468" width="0.3584%" height="15" fill="rgb(249,192,27)" fg:x="105" fg:w="2"/><text x="19.0672%" y="478.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CPU_2 (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="18.8172%" y="484" width="0.3584%" height="15" fill="rgb(208,204,44)" fg:x="105" fg:w="2"/><text x="19.0672%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_out_col2im_out(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="500" width="0.1792%" height="15" fill="rgb(208,93,54)" fg:x="106" fg:w="1"/><text x="19.2464%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="516" width="0.1792%" height="15" fill="rgb(242,1,31)" fg:x="106" fg:w="1"/><text x="19.2464%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="532" width="0.1792%" height="15" fill="rgb(241,83,25)" fg:x="106" fg:w="1"/><text x="19.2464%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="548" width="0.1792%" height="15" fill="rgb(205,169,50)" fg:x="106" fg:w="1"/><text x="19.2464%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="564" width="0.1792%" height="15" fill="rgb(239,186,37)" fg:x="106" fg:w="1"/><text x="19.2464%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="580" width="0.1792%" height="15" fill="rgb(205,221,10)" fg:x="106" fg:w="1"/><text x="19.2464%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="596" width="0.1792%" height="15" fill="rgb(218,196,15)" fg:x="106" fg:w="1"/><text x="19.2464%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="612" width="0.1792%" height="15" fill="rgb(218,196,35)" fg:x="106" fg:w="1"/><text x="19.2464%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="628" width="0.1792%" height="15" fill="rgb(233,63,24)" fg:x="106" fg:w="1"/><text x="19.2464%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="644" width="0.1792%" height="15" fill="rgb(225,8,4)" fg:x="106" fg:w="1"/><text x="19.2464%" y="654.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="18.9964%" y="660" width="0.1792%" height="15" fill="rgb(234,105,35)" fg:x="106" fg:w="1"/><text x="19.2464%" y="670.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.1756%" y="500" width="0.1792%" height="15" fill="rgb(236,21,32)" fg:x="107" fg:w="1"/><text x="19.4256%" y="510.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.1756%" y="516" width="0.1792%" height="15" fill="rgb(228,109,6)" fg:x="107" fg:w="1"/><text x="19.4256%" y="526.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.1756%" y="532" width="0.1792%" height="15" fill="rgb(229,215,31)" fg:x="107" fg:w="1"/><text x="19.4256%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.1756%" y="548" width="0.1792%" height="15" fill="rgb(221,52,54)" fg:x="107" fg:w="1"/><text x="19.4256%" y="558.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="532" width="0.1792%" height="15" fill="rgb(252,129,43)" fg:x="108" fg:w="1"/><text x="19.6048%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="548" width="0.1792%" height="15" fill="rgb(248,183,27)" fg:x="108" fg:w="1"/><text x="19.6048%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="564" width="0.1792%" height="15" fill="rgb(250,0,22)" fg:x="108" fg:w="1"/><text x="19.6048%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="580" width="0.1792%" height="15" fill="rgb(213,166,10)" fg:x="108" fg:w="1"/><text x="19.6048%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="596" width="0.1792%" height="15" fill="rgb(207,163,36)" fg:x="108" fg:w="1"/><text x="19.6048%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="612" width="0.1792%" height="15" fill="rgb(208,122,22)" fg:x="108" fg:w="1"/><text x="19.6048%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="628" width="0.1792%" height="15" fill="rgb(207,104,49)" fg:x="108" fg:w="1"/><text x="19.6048%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="644" width="0.1792%" height="15" fill="rgb(248,211,50)" fg:x="108" fg:w="1"/><text x="19.6048%" y="654.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="660" width="0.1792%" height="15" fill="rgb(217,13,45)" fg:x="108" fg:w="1"/><text x="19.6048%" y="670.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="19.3548%" y="676" width="0.1792%" height="15" fill="rgb(211,216,49)" fg:x="108" fg:w="1"/><text x="19.6048%" y="686.50"></text></g><g><title>_GLOBAL__sub_I_RegisterCompositeExplicitAutograd.cpp (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="19.1756%" y="468" width="0.5376%" height="15" fill="rgb(221,58,53)" fg:x="107" fg:w="3"/><text x="19.4256%" y="478.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CompositeExplicitAutograd_2 (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="19.1756%" y="484" width="0.5376%" height="15" fill="rgb(220,112,41)" fg:x="107" fg:w="3"/><text x="19.4256%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, long, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__smooth_l1_loss_backward(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, long, double)&gt; &gt; &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="19.3548%" y="500" width="0.3584%" height="15" fill="rgb(236,38,28)" fg:x="108" fg:w="2"/><text x="19.6048%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="19.3548%" y="516" width="0.3584%" height="15" fill="rgb(227,195,22)" fg:x="108" fg:w="2"/><text x="19.6048%" y="526.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.5341%" y="532" width="0.1792%" height="15" fill="rgb(214,55,33)" fg:x="109" fg:w="1"/><text x="19.7841%" y="542.50"></text></g><g><title>std::string::find (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="19.5341%" y="548" width="0.1792%" height="15" fill="rgb(248,80,13)" fg:x="109" fg:w="1"/><text x="19.7841%" y="558.50"></text></g><g><title>0x7f34fefa3724 (libc.so.6) (1 samples, 0.18%)</title><rect x="19.5341%" y="564" width="0.1792%" height="15" fill="rgb(238,52,6)" fg:x="109" fg:w="1"/><text x="19.7841%" y="574.50"></text></g><g><title>_GLOBAL__sub_I_RegisterCompositeImplicitAutograd.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="468" width="0.1792%" height="15" fill="rgb(224,198,47)" fg:x="110" fg:w="1"/><text x="19.9633%" y="478.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CompositeImplicitAutograd_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="484" width="0.1792%" height="15" fill="rgb(233,171,20)" fg:x="110" fg:w="1"/><text x="19.9633%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (at::Tensor const&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_special_digamma_out(at::Tensor const&amp;, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="500" width="0.1792%" height="15" fill="rgb(241,30,25)" fg:x="110" fg:w="1"/><text x="19.9633%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="516" width="0.1792%" height="15" fill="rgb(207,171,38)" fg:x="110" fg:w="1"/><text x="19.9633%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="532" width="0.1792%" height="15" fill="rgb(234,70,1)" fg:x="110" fg:w="1"/><text x="19.9633%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="548" width="0.1792%" height="15" fill="rgb(232,178,18)" fg:x="110" fg:w="1"/><text x="19.9633%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="564" width="0.1792%" height="15" fill="rgb(241,78,40)" fg:x="110" fg:w="1"/><text x="19.9633%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="580" width="0.1792%" height="15" fill="rgb(222,35,25)" fg:x="110" fg:w="1"/><text x="19.9633%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="596" width="0.1792%" height="15" fill="rgb(207,92,16)" fg:x="110" fg:w="1"/><text x="19.9633%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="612" width="0.1792%" height="15" fill="rgb(216,59,51)" fg:x="110" fg:w="1"/><text x="19.9633%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="628" width="0.1792%" height="15" fill="rgb(213,80,28)" fg:x="110" fg:w="1"/><text x="19.9633%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="644" width="0.1792%" height="15" fill="rgb(220,93,7)" fg:x="110" fg:w="1"/><text x="19.9633%" y="654.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="19.7133%" y="660" width="0.1792%" height="15" fill="rgb(225,24,44)" fg:x="110" fg:w="1"/><text x="19.9633%" y="670.50"></text></g><g><title>_GLOBAL__sub_I_RegisterFunctionalization_2.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="468" width="0.1792%" height="15" fill="rgb(243,74,40)" fg:x="111" fg:w="1"/><text x="20.1425%" y="478.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Functionalize_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="484" width="0.1792%" height="15" fill="rgb(228,39,7)" fg:x="111" fg:w="1"/><text x="20.1425%" y="494.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="500" width="0.1792%" height="15" fill="rgb(227,79,8)" fg:x="111" fg:w="1"/><text x="20.1425%" y="510.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="516" width="0.1792%" height="15" fill="rgb(236,58,11)" fg:x="111" fg:w="1"/><text x="20.1425%" y="526.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="532" width="0.1792%" height="15" fill="rgb(249,63,35)" fg:x="111" fg:w="1"/><text x="20.1425%" y="542.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="548" width="0.1792%" height="15" fill="rgb(252,114,16)" fg:x="111" fg:w="1"/><text x="20.1425%" y="558.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="19.8925%" y="564" width="0.1792%" height="15" fill="rgb(254,151,24)" fg:x="111" fg:w="1"/><text x="20.1425%" y="574.50"></text></g><g><title>_GLOBAL__sub_I_RegisterMeta.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="468" width="0.1792%" height="15" fill="rgb(253,54,39)" fg:x="112" fg:w="1"/><text x="20.3217%" y="478.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Meta_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="484" width="0.1792%" height="15" fill="rgb(243,25,45)" fg:x="112" fg:w="1"/><text x="20.3217%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, bool, c10::optional&lt;double&gt;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_Meta_upsample_linear1d_out_out(at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, bool, c10::optional&lt;double&gt;, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="500" width="0.1792%" height="15" fill="rgb(234,134,9)" fg:x="112" fg:w="1"/><text x="20.3217%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="516" width="0.1792%" height="15" fill="rgb(227,166,31)" fg:x="112" fg:w="1"/><text x="20.3217%" y="526.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="532" width="0.1792%" height="15" fill="rgb(245,143,41)" fg:x="112" fg:w="1"/><text x="20.3217%" y="542.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="548" width="0.1792%" height="15" fill="rgb(238,181,32)" fg:x="112" fg:w="1"/><text x="20.3217%" y="558.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="564" width="0.1792%" height="15" fill="rgb(224,113,18)" fg:x="112" fg:w="1"/><text x="20.3217%" y="574.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="580" width="0.1792%" height="15" fill="rgb(240,229,28)" fg:x="112" fg:w="1"/><text x="20.3217%" y="590.50"></text></g><g><title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_realloc_insert&lt;torch::jit::Token&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.0717%" y="596" width="0.1792%" height="15" fill="rgb(250,185,3)" fg:x="112" fg:w="1"/><text x="20.3217%" y="606.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="20.0717%" y="612" width="0.1792%" height="15" fill="rgb(212,59,25)" fg:x="112" fg:w="1"/><text x="20.3217%" y="622.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="20.0717%" y="628" width="0.1792%" height="15" fill="rgb(221,87,20)" fg:x="112" fg:w="1"/><text x="20.3217%" y="638.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="20.0717%" y="644" width="0.1792%" height="15" fill="rgb(213,74,28)" fg:x="112" fg:w="1"/><text x="20.3217%" y="654.50"></text></g><g><title>torch::Library::_def &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="500" width="0.3584%" height="15" fill="rgb(224,132,34)" fg:x="113" fg:w="2"/><text x="20.5009%" y="510.50"></text></g><g><title>c10::Dispatcher::registerDef (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="516" width="0.3584%" height="15" fill="rgb(222,101,24)" fg:x="113" fg:w="2"/><text x="20.5009%" y="526.50"></text></g><g><title>c10::impl::OperatorEntry::registerSchema (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="532" width="0.3584%" height="15" fill="rgb(254,142,4)" fg:x="113" fg:w="2"/><text x="20.5009%" y="542.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="548" width="0.3584%" height="15" fill="rgb(230,229,49)" fg:x="113" fg:w="2"/><text x="20.5009%" y="558.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="564" width="0.3584%" height="15" fill="rgb(238,70,47)" fg:x="113" fg:w="2"/><text x="20.5009%" y="574.50"></text></g><g><title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::emplace_back&lt;c10::Argument&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="580" width="0.3584%" height="15" fill="rgb(231,160,17)" fg:x="113" fg:w="2"/><text x="20.5009%" y="590.50"></text></g><g><title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="20.2509%" y="596" width="0.3584%" height="15" fill="rgb(218,68,53)" fg:x="113" fg:w="2"/><text x="20.5009%" y="606.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (2 samples, 0.36%)</title><rect x="20.2509%" y="612" width="0.3584%" height="15" fill="rgb(236,111,10)" fg:x="113" fg:w="2"/><text x="20.5009%" y="622.50"></text></g><g><title>malloc (libc.so.6) (2 samples, 0.36%)</title><rect x="20.2509%" y="628" width="0.3584%" height="15" fill="rgb(224,34,41)" fg:x="113" fg:w="2"/><text x="20.5009%" y="638.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (2 samples, 0.36%)</title><rect x="20.2509%" y="644" width="0.3584%" height="15" fill="rgb(241,118,19)" fg:x="113" fg:w="2"/><text x="20.5009%" y="654.50"></text></g><g><title>torch::Library::def&lt;char const (&amp;) [109]&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="500" width="0.1792%" height="15" fill="rgb(238,129,25)" fg:x="115" fg:w="1"/><text x="20.8593%" y="510.50"></text></g><g><title>torch::Library::_def &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="516" width="0.1792%" height="15" fill="rgb(238,22,31)" fg:x="115" fg:w="1"/><text x="20.8593%" y="526.50"></text></g><g><title>c10::Dispatcher::registerDef (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="532" width="0.1792%" height="15" fill="rgb(222,174,48)" fg:x="115" fg:w="1"/><text x="20.8593%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="548" width="0.1792%" height="15" fill="rgb(206,152,40)" fg:x="115" fg:w="1"/><text x="20.8593%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="564" width="0.1792%" height="15" fill="rgb(218,99,54)" fg:x="115" fg:w="1"/><text x="20.8593%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="580" width="0.1792%" height="15" fill="rgb(220,174,26)" fg:x="115" fg:w="1"/><text x="20.8593%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="596" width="0.1792%" height="15" fill="rgb(245,116,9)" fg:x="115" fg:w="1"/><text x="20.8593%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="612" width="0.1792%" height="15" fill="rgb(209,72,35)" fg:x="115" fg:w="1"/><text x="20.8593%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="628" width="0.1792%" height="15" fill="rgb(226,126,21)" fg:x="115" fg:w="1"/><text x="20.8593%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="644" width="0.1792%" height="15" fill="rgb(227,192,1)" fg:x="115" fg:w="1"/><text x="20.8593%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::hasKernelForDispatchKey (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.6093%" y="660" width="0.1792%" height="15" fill="rgb(237,180,29)" fg:x="115" fg:w="1"/><text x="20.8593%" y="670.50"></text></g><g><title>torch::Library::def&lt;char const (&amp;) [113]&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.7885%" y="500" width="0.1792%" height="15" fill="rgb(230,197,35)" fg:x="116" fg:w="1"/><text x="21.0385%" y="510.50"></text></g><g><title>torch::Library::_def &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.7885%" y="516" width="0.1792%" height="15" fill="rgb(246,193,31)" fg:x="116" fg:w="1"/><text x="21.0385%" y="526.50"></text></g><g><title>std::locale::locale (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="20.7885%" y="532" width="0.1792%" height="15" fill="rgb(241,36,4)" fg:x="116" fg:w="1"/><text x="21.0385%" y="542.50"></text></g><g><title>torch::Library::def&lt;char const (&amp;) [56]&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="500" width="0.1792%" height="15" fill="rgb(241,130,17)" fg:x="117" fg:w="1"/><text x="21.2177%" y="510.50"></text></g><g><title>torch::Library::_def &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="516" width="0.1792%" height="15" fill="rgb(206,137,32)" fg:x="117" fg:w="1"/><text x="21.2177%" y="526.50"></text></g><g><title>c10::Dispatcher::registerDef (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="532" width="0.1792%" height="15" fill="rgb(237,228,51)" fg:x="117" fg:w="1"/><text x="21.2177%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="548" width="0.1792%" height="15" fill="rgb(243,6,42)" fg:x="117" fg:w="1"/><text x="21.2177%" y="558.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="564" width="0.1792%" height="15" fill="rgb(251,74,28)" fg:x="117" fg:w="1"/><text x="21.2177%" y="574.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="580" width="0.1792%" height="15" fill="rgb(218,20,49)" fg:x="117" fg:w="1"/><text x="21.2177%" y="590.50"></text></g><g><title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::emplace_back&lt;c10::Argument&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="20.9677%" y="596" width="0.1792%" height="15" fill="rgb(238,28,14)" fg:x="117" fg:w="1"/><text x="21.2177%" y="606.50"></text></g><g><title>torch::Library::def&lt;char const (&amp;) [69]&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="500" width="0.1792%" height="15" fill="rgb(229,40,46)" fg:x="118" fg:w="1"/><text x="21.3970%" y="510.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="516" width="0.1792%" height="15" fill="rgb(244,195,20)" fg:x="118" fg:w="1"/><text x="21.3970%" y="526.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="532" width="0.1792%" height="15" fill="rgb(253,56,35)" fg:x="118" fg:w="1"/><text x="21.3970%" y="542.50"></text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="548" width="0.1792%" height="15" fill="rgb(210,149,44)" fg:x="118" fg:w="1"/><text x="21.3970%" y="558.50"></text></g><g><title>torch::jit::Lexer::expect (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="564" width="0.1792%" height="15" fill="rgb(240,135,12)" fg:x="118" fg:w="1"/><text x="21.3970%" y="574.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="580" width="0.1792%" height="15" fill="rgb(251,24,50)" fg:x="118" fg:w="1"/><text x="21.3970%" y="590.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="596" width="0.1792%" height="15" fill="rgb(243,200,47)" fg:x="118" fg:w="1"/><text x="21.3970%" y="606.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.1470%" y="612" width="0.1792%" height="15" fill="rgb(224,166,26)" fg:x="118" fg:w="1"/><text x="21.3970%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_RegisterSchema.cpp (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="20.2509%" y="468" width="1.2545%" height="15" fill="rgb(233,0,47)" fg:x="113" fg:w="7"/><text x="20.5009%" y="478.50"></text></g><g><title>at::TORCH_LIBRARY_init_aten (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="20.2509%" y="484" width="1.2545%" height="15" fill="rgb(253,80,5)" fg:x="113" fg:w="7"/><text x="20.5009%" y="494.50"></text></g><g><title>torch::Library::def&lt;char const (&amp;) [95]&gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="500" width="0.1792%" height="15" fill="rgb(214,133,25)" fg:x="119" fg:w="1"/><text x="21.5762%" y="510.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="516" width="0.1792%" height="15" fill="rgb(209,27,14)" fg:x="119" fg:w="1"/><text x="21.5762%" y="526.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="532" width="0.1792%" height="15" fill="rgb(219,102,51)" fg:x="119" fg:w="1"/><text x="21.5762%" y="542.50"></text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="548" width="0.1792%" height="15" fill="rgb(237,18,16)" fg:x="119" fg:w="1"/><text x="21.5762%" y="558.50"></text></g><g><title>torch::jit::SchemaTypeParser::parseFakeAndRealType (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="564" width="0.1792%" height="15" fill="rgb(241,85,17)" fg:x="119" fg:w="1"/><text x="21.5762%" y="574.50"></text></g><g><title>torch::jit::SchemaTypeParser::parseAliasAnnotation (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="580" width="0.1792%" height="15" fill="rgb(236,90,42)" fg:x="119" fg:w="1"/><text x="21.5762%" y="590.50"></text></g><g><title>torch::jit::Lexer::nextIf (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="596" width="0.1792%" height="15" fill="rgb(249,57,21)" fg:x="119" fg:w="1"/><text x="21.5762%" y="606.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="612" width="0.1792%" height="15" fill="rgb(243,12,36)" fg:x="119" fg:w="1"/><text x="21.5762%" y="622.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.3262%" y="628" width="0.1792%" height="15" fill="rgb(253,128,47)" fg:x="119" fg:w="1"/><text x="21.5762%" y="638.50"></text></g><g><title>_GLOBAL__sub_I_TraceType_0.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="468" width="0.1792%" height="15" fill="rgb(207,33,20)" fg:x="120" fg:w="1"/><text x="21.7554%" y="478.50"></text></g><g><title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="484" width="0.1792%" height="15" fill="rgb(233,215,35)" fg:x="120" fg:w="1"/><text x="21.7554%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long), &amp;torch::TraceType::(anonymous namespace)::linalg_matrix_power(c10::DispatchKeySet, at::Tensor const&amp;, long)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="500" width="0.1792%" height="15" fill="rgb(249,188,52)" fg:x="120" fg:w="1"/><text x="21.7554%" y="510.50"></text></g><g><title>c10::detail::inferFunctionSchemaFromFunctor&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long)&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="516" width="0.1792%" height="15" fill="rgb(225,12,32)" fg:x="120" fg:w="1"/><text x="21.7554%" y="526.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="532" width="0.1792%" height="15" fill="rgb(247,98,14)" fg:x="120" fg:w="1"/><text x="21.7554%" y="542.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="548" width="0.1792%" height="15" fill="rgb(247,219,48)" fg:x="120" fg:w="1"/><text x="21.7554%" y="558.50"></text></g><g><title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.5054%" y="564" width="0.1792%" height="15" fill="rgb(253,60,48)" fg:x="120" fg:w="1"/><text x="21.7554%" y="574.50"></text></g><g><title>std::string::reserve (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="21.5054%" y="580" width="0.1792%" height="15" fill="rgb(245,15,52)" fg:x="120" fg:w="1"/><text x="21.7554%" y="590.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="21.5054%" y="596" width="0.1792%" height="15" fill="rgb(220,133,28)" fg:x="120" fg:w="1"/><text x="21.7554%" y="606.50"></text></g><g><title>0x7f34fee97709 (libc.so.6) (1 samples, 0.18%)</title><rect x="21.5054%" y="612" width="0.1792%" height="15" fill="rgb(217,180,4)" fg:x="120" fg:w="1"/><text x="21.7554%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_TraceType_1.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.6846%" y="468" width="0.1792%" height="15" fill="rgb(251,24,1)" fg:x="121" fg:w="1"/><text x="21.9346%" y="478.50"></text></g><g><title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.6846%" y="484" width="0.1792%" height="15" fill="rgb(212,185,49)" fg:x="121" fg:w="1"/><text x="21.9346%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, c10::optional&lt;at::Generator&gt;), &amp;torch::TraceType::(anonymous namespace)::random_(c10::DispatchKeySet, at::Tensor&amp;, c10::optional&lt;at::Generator&gt;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.6846%" y="500" width="0.1792%" height="15" fill="rgb(215,175,22)" fg:x="121" fg:w="1"/><text x="21.9346%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.6846%" y="516" width="0.1792%" height="15" fill="rgb(250,205,14)" fg:x="121" fg:w="1"/><text x="21.9346%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.6846%" y="532" width="0.1792%" height="15" fill="rgb(225,211,22)" fg:x="121" fg:w="1"/><text x="21.9346%" y="542.50"></text></g><g><title>pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="21.6846%" y="548" width="0.1792%" height="15" fill="rgb(251,179,42)" fg:x="121" fg:w="1"/><text x="21.9346%" y="558.50"></text></g><g><title>_GLOBAL__sub_I_TraceType_4.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="468" width="0.1792%" height="15" fill="rgb(208,216,51)" fg:x="122" fg:w="1"/><text x="22.1138%" y="478.50"></text></g><g><title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer_2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="484" width="0.1792%" height="15" fill="rgb(235,36,11)" fg:x="122" fg:w="1"/><text x="22.1138%" y="494.50"></text></g><g><title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::TraceType::(anonymous namespace)::erfc_(c10::DispatchKeySet, at::Tensor&amp;)&gt; &gt; &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="500" width="0.1792%" height="15" fill="rgb(213,189,28)" fg:x="122" fg:w="1"/><text x="22.1138%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="516" width="0.1792%" height="15" fill="rgb(227,203,42)" fg:x="122" fg:w="1"/><text x="22.1138%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="532" width="0.1792%" height="15" fill="rgb(244,72,36)" fg:x="122" fg:w="1"/><text x="22.1138%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="548" width="0.1792%" height="15" fill="rgb(213,53,17)" fg:x="122" fg:w="1"/><text x="22.1138%" y="558.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="564" width="0.1792%" height="15" fill="rgb(207,167,3)" fg:x="122" fg:w="1"/><text x="22.1138%" y="574.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="580" width="0.1792%" height="15" fill="rgb(216,98,30)" fg:x="122" fg:w="1"/><text x="22.1138%" y="590.50"></text></g><g><title>c10::Argument::cloneWithType (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="596" width="0.1792%" height="15" fill="rgb(236,123,15)" fg:x="122" fg:w="1"/><text x="22.1138%" y="606.50"></text></g><g><title>c10::AliasInfo::AliasInfo (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="21.8638%" y="612" width="0.1792%" height="15" fill="rgb(248,81,50)" fg:x="122" fg:w="1"/><text x="22.1138%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_VariableType_2.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="468" width="0.1792%" height="15" fill="rgb(214,120,4)" fg:x="123" fg:w="1"/><text x="22.2930%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="484" width="0.1792%" height="15" fill="rgb(208,179,34)" fg:x="123" fg:w="1"/><text x="22.2930%" y="494.50"></text></g><g><title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd_4 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="500" width="0.1792%" height="15" fill="rgb(227,140,7)" fg:x="123" fg:w="1"/><text x="22.2930%" y="510.50"></text></g><g><title>c10::detail::inferFunctionSchemaFromFunctor&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="516" width="0.1792%" height="15" fill="rgb(214,22,6)" fg:x="123" fg:w="1"/><text x="22.2930%" y="526.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="532" width="0.1792%" height="15" fill="rgb(207,137,27)" fg:x="123" fg:w="1"/><text x="22.2930%" y="542.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="548" width="0.1792%" height="15" fill="rgb(210,8,46)" fg:x="123" fg:w="1"/><text x="22.2930%" y="558.50"></text></g><g><title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.0430%" y="564" width="0.1792%" height="15" fill="rgb(240,16,54)" fg:x="123" fg:w="1"/><text x="22.2930%" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="22.0430%" y="580" width="0.1792%" height="15" fill="rgb(211,209,29)" fg:x="123" fg:w="1"/><text x="22.2930%" y="590.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="22.0430%" y="596" width="0.1792%" height="15" fill="rgb(226,228,24)" fg:x="123" fg:w="1"/><text x="22.2930%" y="606.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="22.0430%" y="612" width="0.1792%" height="15" fill="rgb(222,84,9)" fg:x="123" fg:w="1"/><text x="22.2930%" y="622.50"></text></g><g><title>_GLOBAL__sub_I_VariableType_4.cpp (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="468" width="0.1792%" height="15" fill="rgb(234,203,30)" fg:x="124" fg:w="1"/><text x="22.4722%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="484" width="0.1792%" height="15" fill="rgb(238,109,14)" fg:x="124" fg:w="1"/><text x="22.4722%" y="494.50"></text></g><g><title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd_4 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="500" width="0.1792%" height="15" fill="rgb(233,206,34)" fg:x="124" fg:w="1"/><text x="22.4722%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="516" width="0.1792%" height="15" fill="rgb(220,167,47)" fg:x="124" fg:w="1"/><text x="22.4722%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="532" width="0.1792%" height="15" fill="rgb(238,105,10)" fg:x="124" fg:w="1"/><text x="22.4722%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="548" width="0.1792%" height="15" fill="rgb(213,227,17)" fg:x="124" fg:w="1"/><text x="22.4722%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.2222%" y="564" width="0.1792%" height="15" fill="rgb(217,132,38)" fg:x="124" fg:w="1"/><text x="22.4722%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="564" width="0.1792%" height="15" fill="rgb(242,146,4)" fg:x="125" fg:w="1"/><text x="22.6514%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="580" width="0.1792%" height="15" fill="rgb(212,61,9)" fg:x="125" fg:w="1"/><text x="22.6514%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="596" width="0.1792%" height="15" fill="rgb(247,126,22)" fg:x="125" fg:w="1"/><text x="22.6514%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="612" width="0.1792%" height="15" fill="rgb(220,196,2)" fg:x="125" fg:w="1"/><text x="22.6514%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="628" width="0.1792%" height="15" fill="rgb(208,46,4)" fg:x="125" fg:w="1"/><text x="22.6514%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.4014%" y="644" width="0.1792%" height="15" fill="rgb(252,104,46)" fg:x="125" fg:w="1"/><text x="22.6514%" y="654.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="22.4014%" y="532" width="0.5376%" height="15" fill="rgb(237,152,48)" fg:x="125" fg:w="3"/><text x="22.6514%" y="542.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="22.4014%" y="548" width="0.5376%" height="15" fill="rgb(221,59,37)" fg:x="125" fg:w="3"/><text x="22.6514%" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (2 samples, 0.36%)</title><rect x="22.5806%" y="564" width="0.3584%" height="15" fill="rgb(209,202,51)" fg:x="126" fg:w="2"/><text x="22.8306%" y="574.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="22.7599%" y="580" width="0.1792%" height="15" fill="rgb(228,81,30)" fg:x="127" fg:w="1"/><text x="23.0099%" y="590.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="22.7599%" y="596" width="0.1792%" height="15" fill="rgb(227,42,39)" fg:x="127" fg:w="1"/><text x="23.0099%" y="606.50"></text></g><g><title>0x7f34ab68dea0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="22.9391%" y="580" width="0.1792%" height="15" fill="rgb(221,26,2)" fg:x="128" fg:w="1"/><text x="23.1891%" y="590.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="22.4014%" y="516" width="0.8961%" height="15" fill="rgb(254,61,31)" fg:x="125" fg:w="5"/><text x="22.6514%" y="526.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="22.9391%" y="532" width="0.3584%" height="15" fill="rgb(222,173,38)" fg:x="128" fg:w="2"/><text x="23.1891%" y="542.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="22.9391%" y="548" width="0.3584%" height="15" fill="rgb(218,50,12)" fg:x="128" fg:w="2"/><text x="23.1891%" y="558.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="22.9391%" y="564" width="0.3584%" height="15" fill="rgb(223,88,40)" fg:x="128" fg:w="2"/><text x="23.1891%" y="574.50"></text></g><g><title>torch::jit::Source::Source (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.1183%" y="580" width="0.1792%" height="15" fill="rgb(237,54,19)" fg:x="129" fg:w="1"/><text x="23.3683%" y="590.50"></text></g><g><title>torch::jit::StringCordView::StringCordView (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.1183%" y="596" width="0.1792%" height="15" fill="rgb(251,129,25)" fg:x="129" fg:w="1"/><text x="23.3683%" y="606.50"></text></g><g><title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::emplace_back&lt;unsigned long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.1183%" y="612" width="0.1792%" height="15" fill="rgb(238,97,19)" fg:x="129" fg:w="1"/><text x="23.3683%" y="622.50"></text></g><g><title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long&gt; (libtorch_python.so) (1 samples, 0.18%)</title><rect x="23.1183%" y="628" width="0.1792%" height="15" fill="rgb(240,169,18)" fg:x="129" fg:w="1"/><text x="23.3683%" y="638.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="23.1183%" y="644" width="0.1792%" height="15" fill="rgb(230,187,49)" fg:x="129" fg:w="1"/><text x="23.3683%" y="654.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="23.1183%" y="660" width="0.1792%" height="15" fill="rgb(209,44,26)" fg:x="129" fg:w="1"/><text x="23.3683%" y="670.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="548" width="0.1792%" height="15" fill="rgb(244,0,6)" fg:x="130" fg:w="1"/><text x="23.5475%" y="558.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="564" width="0.1792%" height="15" fill="rgb(248,18,21)" fg:x="130" fg:w="1"/><text x="23.5475%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="580" width="0.1792%" height="15" fill="rgb(245,180,19)" fg:x="130" fg:w="1"/><text x="23.5475%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="596" width="0.1792%" height="15" fill="rgb(252,118,36)" fg:x="130" fg:w="1"/><text x="23.5475%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="612" width="0.1792%" height="15" fill="rgb(210,224,19)" fg:x="130" fg:w="1"/><text x="23.5475%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="628" width="0.1792%" height="15" fill="rgb(218,30,24)" fg:x="130" fg:w="1"/><text x="23.5475%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="644" width="0.1792%" height="15" fill="rgb(219,75,50)" fg:x="130" fg:w="1"/><text x="23.5475%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="660" width="0.1792%" height="15" fill="rgb(234,72,50)" fg:x="130" fg:w="1"/><text x="23.5475%" y="670.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="23.2975%" y="676" width="0.1792%" height="15" fill="rgb(219,100,48)" fg:x="130" fg:w="1"/><text x="23.5475%" y="686.50"></text></g><g><title>torch::Library::impl&lt;char const*, at::Tensor (*)(at::Tensor const&amp;)&gt; &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.2975%" y="516" width="0.3584%" height="15" fill="rgb(253,5,41)" fg:x="130" fg:w="2"/><text x="23.5475%" y="526.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.2975%" y="532" width="0.3584%" height="15" fill="rgb(247,181,11)" fg:x="130" fg:w="2"/><text x="23.5475%" y="542.50"></text></g><g><title>torch::(anonymous namespace)::debugString (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.4767%" y="548" width="0.1792%" height="15" fill="rgb(222,223,25)" fg:x="131" fg:w="1"/><text x="23.7267%" y="558.50"></text></g><g><title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.4767%" y="564" width="0.1792%" height="15" fill="rgb(214,198,28)" fg:x="131" fg:w="1"/><text x="23.7267%" y="574.50"></text></g><g><title>std::string::_M_replace_safe (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="23.4767%" y="580" width="0.1792%" height="15" fill="rgb(230,46,43)" fg:x="131" fg:w="1"/><text x="23.7267%" y="590.50"></text></g><g><title>std::string::_M_mutate (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="23.4767%" y="596" width="0.1792%" height="15" fill="rgb(233,65,53)" fg:x="131" fg:w="1"/><text x="23.7267%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::getKernelForDispatchKey (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="23.6559%" y="676" width="0.1792%" height="15" fill="rgb(221,121,27)" fg:x="132" fg:w="1"/><text x="23.9059%" y="686.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="548" width="0.3584%" height="15" fill="rgb(247,70,47)" fg:x="132" fg:w="2"/><text x="23.9059%" y="558.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="564" width="0.3584%" height="15" fill="rgb(228,85,35)" fg:x="132" fg:w="2"/><text x="23.9059%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="580" width="0.3584%" height="15" fill="rgb(209,50,18)" fg:x="132" fg:w="2"/><text x="23.9059%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="596" width="0.3584%" height="15" fill="rgb(250,19,35)" fg:x="132" fg:w="2"/><text x="23.9059%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="612" width="0.3584%" height="15" fill="rgb(253,107,29)" fg:x="132" fg:w="2"/><text x="23.9059%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="628" width="0.3584%" height="15" fill="rgb(252,179,29)" fg:x="132" fg:w="2"/><text x="23.9059%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="644" width="0.3584%" height="15" fill="rgb(238,194,6)" fg:x="132" fg:w="2"/><text x="23.9059%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="23.6559%" y="660" width="0.3584%" height="15" fill="rgb(238,164,29)" fg:x="132" fg:w="2"/><text x="23.9059%" y="670.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="23.8351%" y="676" width="0.1792%" height="15" fill="rgb(224,25,9)" fg:x="133" fg:w="1"/><text x="24.0851%" y="686.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="23.8351%" y="692" width="0.1792%" height="15" fill="rgb(244,153,23)" fg:x="133" fg:w="1"/><text x="24.0851%" y="702.50"></text></g><g><title>torch::Library::impl&lt;char const*, at::Tensor (*)(at::Tensor const&amp;, at::Tensor const&amp;)&gt; &amp; (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="23.6559%" y="516" width="0.5376%" height="15" fill="rgb(212,203,14)" fg:x="132" fg:w="3"/><text x="23.9059%" y="526.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="23.6559%" y="532" width="0.5376%" height="15" fill="rgb(220,164,20)" fg:x="132" fg:w="3"/><text x="23.9059%" y="542.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="548" width="0.1792%" height="15" fill="rgb(222,203,48)" fg:x="134" fg:w="1"/><text x="24.2643%" y="558.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="564" width="0.1792%" height="15" fill="rgb(215,159,22)" fg:x="134" fg:w="1"/><text x="24.2643%" y="574.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="580" width="0.1792%" height="15" fill="rgb(216,183,47)" fg:x="134" fg:w="1"/><text x="24.2643%" y="590.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="596" width="0.1792%" height="15" fill="rgb(229,195,25)" fg:x="134" fg:w="1"/><text x="24.2643%" y="606.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="612" width="0.1792%" height="15" fill="rgb(224,132,51)" fg:x="134" fg:w="1"/><text x="24.2643%" y="622.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="628" width="0.1792%" height="15" fill="rgb(240,63,7)" fg:x="134" fg:w="1"/><text x="24.2643%" y="638.50"></text></g><g><title>torch::jit::StringCordView::Iterator::operator++ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.0143%" y="644" width="0.1792%" height="15" fill="rgb(249,182,41)" fg:x="134" fg:w="1"/><text x="24.2643%" y="654.50"></text></g><g><title>c10::getTypePtrCopy&lt;at::Tensor&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="24.3728%" y="596" width="0.1792%" height="15" fill="rgb(243,47,26)" fg:x="136" fg:w="1"/><text x="24.6228%" y="606.50"></text></g><g><title>c10::detail::inferFunctionSchemaFromFunctor&lt;at::Tensor (*)(at::Tensor const&amp;, at::Tensor const&amp;, bool)&gt; (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="24.1935%" y="532" width="1.0753%" height="15" fill="rgb(233,48,2)" fg:x="135" fg:w="6"/><text x="24.4435%" y="542.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="24.3728%" y="548" width="0.8961%" height="15" fill="rgb(244,165,34)" fg:x="136" fg:w="5"/><text x="24.6228%" y="558.50"></text></g><g><title>c10::detail::infer_schema::make_function_schema (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="24.3728%" y="564" width="0.8961%" height="15" fill="rgb(207,89,7)" fg:x="136" fg:w="5"/><text x="24.6228%" y="574.50"></text></g><g><title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="24.3728%" y="580" width="0.8961%" height="15" fill="rgb(244,117,36)" fg:x="136" fg:w="5"/><text x="24.6228%" y="590.50"></text></g><g><title>std::string::reserve (libstdc++.so.6.0.30) (4 samples, 0.72%)</title><rect x="24.5520%" y="596" width="0.7168%" height="15" fill="rgb(226,144,34)" fg:x="137" fg:w="4"/><text x="24.8020%" y="606.50"></text></g><g><title>std::string::_Rep::_M_clone (libstdc++.so.6.0.30) (4 samples, 0.72%)</title><rect x="24.5520%" y="612" width="0.7168%" height="15" fill="rgb(213,23,19)" fg:x="137" fg:w="4"/><text x="24.8020%" y="622.50"></text></g><g><title>std::string::_Rep::_S_create (libstdc++.so.6.0.30) (4 samples, 0.72%)</title><rect x="24.5520%" y="628" width="0.7168%" height="15" fill="rgb(217,75,12)" fg:x="137" fg:w="4"/><text x="24.8020%" y="638.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (4 samples, 0.72%)</title><rect x="24.5520%" y="644" width="0.7168%" height="15" fill="rgb(224,159,17)" fg:x="137" fg:w="4"/><text x="24.8020%" y="654.50"></text></g><g><title>malloc (libc.so.6) (4 samples, 0.72%)</title><rect x="24.5520%" y="660" width="0.7168%" height="15" fill="rgb(217,118,1)" fg:x="137" fg:w="4"/><text x="24.8020%" y="670.50"></text></g><g><title>0x7f34fee98d74 (libc.so.6) (4 samples, 0.72%)</title><rect x="24.5520%" y="676" width="0.7168%" height="15" fill="rgb(232,180,48)" fg:x="137" fg:w="4"/><text x="24.8020%" y="686.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="548" width="0.1792%" height="15" fill="rgb(230,27,33)" fg:x="141" fg:w="1"/><text x="25.5188%" y="558.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="564" width="0.1792%" height="15" fill="rgb(205,31,21)" fg:x="141" fg:w="1"/><text x="25.5188%" y="574.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="580" width="0.1792%" height="15" fill="rgb(253,59,4)" fg:x="141" fg:w="1"/><text x="25.5188%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="596" width="0.1792%" height="15" fill="rgb(224,201,9)" fg:x="141" fg:w="1"/><text x="25.5188%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="612" width="0.1792%" height="15" fill="rgb(229,206,30)" fg:x="141" fg:w="1"/><text x="25.5188%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="628" width="0.1792%" height="15" fill="rgb(212,67,47)" fg:x="141" fg:w="1"/><text x="25.5188%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="644" width="0.1792%" height="15" fill="rgb(211,96,50)" fg:x="141" fg:w="1"/><text x="25.5188%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="660" width="0.1792%" height="15" fill="rgb(252,114,18)" fg:x="141" fg:w="1"/><text x="25.5188%" y="670.50"></text></g><g><title>c10::runtimeDispatchKeySetHas (libc10.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="676" width="0.1792%" height="15" fill="rgb(223,58,37)" fg:x="141" fg:w="1"/><text x="25.5188%" y="686.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="25.2688%" y="692" width="0.1792%" height="15" fill="rgb(237,70,4)" fg:x="141" fg:w="1"/><text x="25.5188%" y="702.50"></text></g><g><title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::emplace_back&lt;c10::RegistrationHandleRAII&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.4480%" y="548" width="0.1792%" height="15" fill="rgb(244,85,46)" fg:x="142" fg:w="1"/><text x="25.6980%" y="558.50"></text></g><g><title>torch::(anonymous namespace)::debugString (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.6272%" y="548" width="0.1792%" height="15" fill="rgb(223,39,52)" fg:x="143" fg:w="1"/><text x="25.8772%" y="558.50"></text></g><g><title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.6272%" y="564" width="0.1792%" height="15" fill="rgb(218,200,14)" fg:x="143" fg:w="1"/><text x="25.8772%" y="574.50"></text></g><g><title>std::string::_M_replace_safe (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="25.6272%" y="580" width="0.1792%" height="15" fill="rgb(208,171,16)" fg:x="143" fg:w="1"/><text x="25.8772%" y="590.50"></text></g><g><title>std::string::_M_mutate (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="25.6272%" y="596" width="0.1792%" height="15" fill="rgb(234,200,18)" fg:x="143" fg:w="1"/><text x="25.8772%" y="606.50"></text></g><g><title>0x7f34ab645040 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="25.8065%" y="596" width="0.1792%" height="15" fill="rgb(228,45,11)" fg:x="144" fg:w="1"/><text x="26.0565%" y="606.50"></text></g><g><title>std::string::string (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="25.9857%" y="596" width="0.1792%" height="15" fill="rgb(237,182,11)" fg:x="145" fg:w="1"/><text x="26.2357%" y="606.50"></text></g><g><title>0x7f34c2875f30 (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="25.9857%" y="612" width="0.1792%" height="15" fill="rgb(241,175,49)" fg:x="145" fg:w="1"/><text x="26.2357%" y="622.50"></text></g><g><title>torch::Library::impl&lt;char const*, at::Tensor (*)(at::Tensor const&amp;, at::Tensor const&amp;, bool)&gt; &amp; (libtorch_cpu.so) (12 samples, 2.15%)</title><rect x="24.1935%" y="516" width="2.1505%" height="15" fill="rgb(247,38,35)" fg:x="135" fg:w="12"/><text x="24.4435%" y="526.50">t..</text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="25.2688%" y="532" width="1.0753%" height="15" fill="rgb(228,39,49)" fg:x="141" fg:w="6"/><text x="25.5188%" y="542.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="25.8065%" y="548" width="0.5376%" height="15" fill="rgb(226,101,26)" fg:x="144" fg:w="3"/><text x="26.0565%" y="558.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="25.8065%" y="564" width="0.5376%" height="15" fill="rgb(206,141,19)" fg:x="144" fg:w="3"/><text x="26.0565%" y="574.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="25.8065%" y="580" width="0.5376%" height="15" fill="rgb(211,200,13)" fg:x="144" fg:w="3"/><text x="26.0565%" y="590.50"></text></g><g><title>torch::jit::Lexer::expect (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="26.1649%" y="596" width="0.1792%" height="15" fill="rgb(241,121,6)" fg:x="146" fg:w="1"/><text x="26.4149%" y="606.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="26.1649%" y="612" width="0.1792%" height="15" fill="rgb(234,221,29)" fg:x="146" fg:w="1"/><text x="26.4149%" y="622.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="26.1649%" y="628" width="0.1792%" height="15" fill="rgb(229,136,5)" fg:x="146" fg:w="1"/><text x="26.4149%" y="638.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="26.1649%" y="644" width="0.1792%" height="15" fill="rgb(238,36,11)" fg:x="146" fg:w="1"/><text x="26.4149%" y="654.50"></text></g><g><title>torch::jit::strtod_c (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="26.1649%" y="660" width="0.1792%" height="15" fill="rgb(251,55,41)" fg:x="146" fg:w="1"/><text x="26.4149%" y="670.50"></text></g><g><title>c10::getRuntimeDispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="26.3441%" y="628" width="0.1792%" height="15" fill="rgb(242,34,40)" fg:x="147" fg:w="1"/><text x="26.5941%" y="638.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libc10.so) (1 samples, 0.18%)</title><rect x="26.3441%" y="644" width="0.1792%" height="15" fill="rgb(215,42,17)" fg:x="147" fg:w="1"/><text x="26.5941%" y="654.50"></text></g><g><title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="27.0609%" y="644" width="0.3584%" height="15" fill="rgb(207,44,46)" fg:x="151" fg:w="2"/><text x="27.3109%" y="654.50"></text></g><g><title>c10::DispatchKeySet::DispatchKeySet (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="27.4194%" y="644" width="0.1792%" height="15" fill="rgb(211,206,28)" fg:x="153" fg:w="1"/><text x="27.6694%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="26.3441%" y="580" width="1.4337%" height="15" fill="rgb(237,167,16)" fg:x="147" fg:w="8"/><text x="26.5941%" y="590.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="26.3441%" y="596" width="1.4337%" height="15" fill="rgb(233,66,6)" fg:x="147" fg:w="8"/><text x="26.5941%" y="606.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="26.3441%" y="612" width="1.4337%" height="15" fill="rgb(246,123,29)" fg:x="147" fg:w="8"/><text x="26.5941%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="26.5233%" y="628" width="1.2545%" height="15" fill="rgb(209,62,40)" fg:x="148" fg:w="7"/><text x="26.7733%" y="638.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntry (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="27.5986%" y="644" width="0.1792%" height="15" fill="rgb(218,4,25)" fg:x="154" fg:w="1"/><text x="27.8486%" y="654.50"></text></g><g><title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="27.5986%" y="660" width="0.1792%" height="15" fill="rgb(253,91,49)" fg:x="154" fg:w="1"/><text x="27.8486%" y="670.50"></text></g><g><title>c10::impl::OperatorEntry::getKernelForDispatchKey (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="27.5986%" y="676" width="0.1792%" height="15" fill="rgb(228,155,29)" fg:x="154" fg:w="1"/><text x="27.8486%" y="686.50"></text></g><g><title>_GLOBAL__sub_I_autocast_mode.cpp (libtorch_cpu.so) (33 samples, 5.91%)</title><rect x="22.4014%" y="468" width="5.9140%" height="15" fill="rgb(243,57,37)" fg:x="125" fg:w="33"/><text x="22.6514%" y="478.50">_GLOBAL_..</text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (33 samples, 5.91%)</title><rect x="22.4014%" y="484" width="5.9140%" height="15" fill="rgb(244,167,17)" fg:x="125" fg:w="33"/><text x="22.6514%" y="494.50">torch::d..</text></g><g><title>at::autocast::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_AutocastCPU_5 (libtorch_cpu.so) (33 samples, 5.91%)</title><rect x="22.4014%" y="500" width="5.9140%" height="15" fill="rgb(207,181,38)" fg:x="125" fg:w="33"/><text x="22.6514%" y="510.50">at::auto..</text></g><g><title>torch::Library::impl&lt;char const*, at::Tensor (*)(at::Tensor const&amp;, bool)&gt; &amp; (libtorch_cpu.so) (11 samples, 1.97%)</title><rect x="26.3441%" y="516" width="1.9713%" height="15" fill="rgb(211,8,23)" fg:x="147" fg:w="11"/><text x="26.5941%" y="526.50">t..</text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (11 samples, 1.97%)</title><rect x="26.3441%" y="532" width="1.9713%" height="15" fill="rgb(235,11,44)" fg:x="147" fg:w="11"/><text x="26.5941%" y="542.50">t..</text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (11 samples, 1.97%)</title><rect x="26.3441%" y="548" width="1.9713%" height="15" fill="rgb(248,18,52)" fg:x="147" fg:w="11"/><text x="26.5941%" y="558.50">c..</text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (11 samples, 1.97%)</title><rect x="26.3441%" y="564" width="1.9713%" height="15" fill="rgb(208,4,7)" fg:x="147" fg:w="11"/><text x="26.5941%" y="574.50">c..</text></g><g><title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="27.7778%" y="580" width="0.5376%" height="15" fill="rgb(240,17,39)" fg:x="155" fg:w="3"/><text x="28.0278%" y="590.50"></text></g><g><title>std::string::string (libstdc++.so.6.0.30) (3 samples, 0.54%)</title><rect x="27.7778%" y="596" width="0.5376%" height="15" fill="rgb(207,170,3)" fg:x="155" fg:w="3"/><text x="28.0278%" y="606.50"></text></g><g><title>_GLOBAL__sub_I_tensorpipe_cuda.cpp (libtorch_cuda.so) (1 samples, 0.18%)</title><rect x="28.3154%" y="692" width="0.1792%" height="15" fill="rgb(236,100,52)" fg:x="158" fg:w="1"/><text x="28.5654%" y="702.50"></text></g><g><title>c10::Registerer&lt;std::string, std::unique_ptr&lt;torch::distributed::rpc::ChannelRegistration, std::default_delete&lt;torch::distributed::rpc::ChannelRegistration&gt; &gt;, &gt;::Registerer (libtorch_cuda.so) (1 samples, 0.18%)</title><rect x="28.3154%" y="708" width="0.1792%" height="15" fill="rgb(246,78,51)" fg:x="158" fg:w="1"/><text x="28.5654%" y="718.50"></text></g><g><title>std::function&lt;std::unique_ptr&lt;torch::distributed::rpc::ChannelRegistration, std::default_delete&lt;torch::distributed::rpc::ChannelRegistration&gt; &gt; ()&gt;::function (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.3154%" y="724" width="0.1792%" height="15" fill="rgb(211,17,15)" fg:x="158" fg:w="1"/><text x="28.5654%" y="734.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="28.4946%" y="724" width="0.3584%" height="15" fill="rgb(209,59,46)" fg:x="159" fg:w="2"/><text x="28.7446%" y="734.50"></text></g><g><title>c10::Dispatcher::findOrRegisterName_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="28.4946%" y="740" width="0.3584%" height="15" fill="rgb(210,92,25)" fg:x="159" fg:w="2"/><text x="28.7446%" y="750.50"></text></g><g><title>c10::impl::OperatorEntry::OperatorEntry (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="28.4946%" y="756" width="0.3584%" height="15" fill="rgb(238,174,52)" fg:x="159" fg:w="2"/><text x="28.7446%" y="766.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableFull_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="28.4946%" y="772" width="0.3584%" height="15" fill="rgb(230,73,7)" fg:x="159" fg:w="2"/><text x="28.7446%" y="782.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTable_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="28.4946%" y="788" width="0.3584%" height="15" fill="rgb(243,124,40)" fg:x="159" fg:w="2"/><text x="28.7446%" y="798.50"></text></g><g><title>c10::impl::OperatorEntry::updateDispatchTableEntry_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.6738%" y="804" width="0.1792%" height="15" fill="rgb(244,170,11)" fg:x="160" fg:w="1"/><text x="28.9238%" y="814.50"></text></g><g><title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.6738%" y="820" width="0.1792%" height="15" fill="rgb(207,114,54)" fg:x="160" fg:w="1"/><text x="28.9238%" y="830.50"></text></g><g><title>_GLOBAL__sub_I_tmpxft_000044cb_00000000_6_quantization_gpu.compute_90.cudafe1.cpp (libtorch_cuda.so) (3 samples, 0.54%)</title><rect x="28.4946%" y="692" width="0.5376%" height="15" fill="rgb(205,42,20)" fg:x="159" fg:w="3"/><text x="28.7446%" y="702.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="28.4946%" y="708" width="0.5376%" height="15" fill="rgb(230,30,28)" fg:x="159" fg:w="3"/><text x="28.7446%" y="718.50"></text></g><g><title>torch::Library::_parseNameForLib (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="724" width="0.1792%" height="15" fill="rgb(205,73,54)" fg:x="161" fg:w="1"/><text x="29.1030%" y="734.50"></text></g><g><title>torch::jit::parseName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="740" width="0.1792%" height="15" fill="rgb(254,227,23)" fg:x="161" fg:w="1"/><text x="29.1030%" y="750.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="756" width="0.1792%" height="15" fill="rgb(228,202,34)" fg:x="161" fg:w="1"/><text x="29.1030%" y="766.50"></text></g><g><title>torch::jit::Lexer::lex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="772" width="0.1792%" height="15" fill="rgb(222,225,37)" fg:x="161" fg:w="1"/><text x="29.1030%" y="782.50"></text></g><g><title>torch::jit::Lexer::lexRaw (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="788" width="0.1792%" height="15" fill="rgb(221,14,54)" fg:x="161" fg:w="1"/><text x="29.1030%" y="798.50"></text></g><g><title>torch::jit::SharedParserData::match (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="28.8530%" y="804" width="0.1792%" height="15" fill="rgb(254,102,2)" fg:x="161" fg:w="1"/><text x="29.1030%" y="814.50"></text></g><g><title>_GLOBAL__sub_I_interface.cpp (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="28.3154%" y="468" width="0.8961%" height="15" fill="rgb(232,104,17)" fg:x="158" fg:w="5"/><text x="28.5654%" y="478.50"></text></g><g><title>torch::jit::fuser::cuda::LoadingNvfuserLibrary::LoadingNvfuserLibrary (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="28.3154%" y="484" width="0.8961%" height="15" fill="rgb(250,220,14)" fg:x="158" fg:w="5"/><text x="28.5654%" y="494.50"></text></g><g><title>at::DynamicLibrary::DynamicLibrary (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="28.3154%" y="500" width="0.8961%" height="15" fill="rgb(241,158,9)" fg:x="158" fg:w="5"/><text x="28.5654%" y="510.50"></text></g><g><title>dlopen (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="516" width="0.8961%" height="15" fill="rgb(246,9,43)" fg:x="158" fg:w="5"/><text x="28.5654%" y="526.50"></text></g><g><title>0x7f34fee8512e (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="532" width="0.8961%" height="15" fill="rgb(206,73,33)" fg:x="158" fg:w="5"/><text x="28.5654%" y="542.50"></text></g><g><title>_dl_catch_error (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="548" width="0.8961%" height="15" fill="rgb(222,79,8)" fg:x="158" fg:w="5"/><text x="28.5654%" y="558.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="564" width="0.8961%" height="15" fill="rgb(234,8,54)" fg:x="158" fg:w="5"/><text x="28.5654%" y="574.50"></text></g><g><title>0x7f34fee8563c (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="580" width="0.8961%" height="15" fill="rgb(209,134,38)" fg:x="158" fg:w="5"/><text x="28.5654%" y="590.50"></text></g><g><title>0x7f34ff17334e (ld-linux-x86-64.so.2) (5 samples, 0.90%)</title><rect x="28.3154%" y="596" width="0.8961%" height="15" fill="rgb(230,127,29)" fg:x="158" fg:w="5"/><text x="28.5654%" y="606.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="612" width="0.8961%" height="15" fill="rgb(242,44,41)" fg:x="158" fg:w="5"/><text x="28.5654%" y="622.50"></text></g><g><title>0x7f34ff172ff6 (ld-linux-x86-64.so.2) (5 samples, 0.90%)</title><rect x="28.3154%" y="628" width="0.8961%" height="15" fill="rgb(222,56,43)" fg:x="158" fg:w="5"/><text x="28.5654%" y="638.50"></text></g><g><title>_dl_catch_exception (libc.so.6) (5 samples, 0.90%)</title><rect x="28.3154%" y="644" width="0.8961%" height="15" fill="rgb(238,39,47)" fg:x="158" fg:w="5"/><text x="28.5654%" y="654.50"></text></g><g><title>0x7f34ff16b568 (ld-linux-x86-64.so.2) (5 samples, 0.90%)</title><rect x="28.3154%" y="660" width="0.8961%" height="15" fill="rgb(226,79,43)" fg:x="158" fg:w="5"/><text x="28.5654%" y="670.50"></text></g><g><title>0x7f34ff16b47e (ld-linux-x86-64.so.2) (5 samples, 0.90%)</title><rect x="28.3154%" y="676" width="0.8961%" height="15" fill="rgb(242,105,53)" fg:x="158" fg:w="5"/><text x="28.5654%" y="686.50"></text></g><g><title>__static_initialization_and_destruction_0 (libtorch_cuda.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="692" width="0.1792%" height="15" fill="rgb(251,132,46)" fg:x="162" fg:w="1"/><text x="29.2823%" y="702.50"></text></g><g><title>torch::jit::registerOperator (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="708" width="0.1792%" height="15" fill="rgb(231,77,14)" fg:x="162" fg:w="1"/><text x="29.2823%" y="718.50"></text></g><g><title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::C10Operator const&amp;)#1}, torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::JitOnlyOperator const&amp;)#2}&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="724" width="0.1792%" height="15" fill="rgb(240,135,9)" fg:x="162" fg:w="1"/><text x="29.2823%" y="734.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="740" width="0.1792%" height="15" fill="rgb(248,109,14)" fg:x="162" fg:w="1"/><text x="29.2823%" y="750.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="756" width="0.1792%" height="15" fill="rgb(227,146,52)" fg:x="162" fg:w="1"/><text x="29.2823%" y="766.50"></text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="772" width="0.1792%" height="15" fill="rgb(232,54,3)" fg:x="162" fg:w="1"/><text x="29.2823%" y="782.50"></text></g><g><title>torch::jit::SchemaTypeParser::parseFakeAndRealType (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="788" width="0.1792%" height="15" fill="rgb(229,201,43)" fg:x="162" fg:w="1"/><text x="29.2823%" y="798.50"></text></g><g><title>c10::Type::SingletonOrSharedTypePtr&lt;c10::Type&gt;::Repr::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.0323%" y="804" width="0.1792%" height="15" fill="rgb(252,161,33)" fg:x="162" fg:w="1"/><text x="29.2823%" y="814.50"></text></g><g><title>dlopen (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="292" width="13.6201%" height="15" fill="rgb(226,146,40)" fg:x="88" fg:w="76"/><text x="16.0206%" y="302.50">dlopen (libc.so.6)</text></g><g><title>0x7f34fee8512e (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="308" width="13.6201%" height="15" fill="rgb(219,47,25)" fg:x="88" fg:w="76"/><text x="16.0206%" y="318.50">0x7f34fee8512e (libc...</text></g><g><title>_dl_catch_error (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="324" width="13.6201%" height="15" fill="rgb(250,135,13)" fg:x="88" fg:w="76"/><text x="16.0206%" y="334.50">_dl_catch_error (libc..</text></g><g><title>_dl_catch_exception (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="340" width="13.6201%" height="15" fill="rgb(219,229,18)" fg:x="88" fg:w="76"/><text x="16.0206%" y="350.50">_dl_catch_exception (..</text></g><g><title>0x7f34fee8563c (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="356" width="13.6201%" height="15" fill="rgb(217,152,27)" fg:x="88" fg:w="76"/><text x="16.0206%" y="366.50">0x7f34fee8563c (libc...</text></g><g><title>0x7f34ff17334e (ld-linux-x86-64.so.2) (76 samples, 13.62%)</title><rect x="15.7706%" y="372" width="13.6201%" height="15" fill="rgb(225,71,47)" fg:x="88" fg:w="76"/><text x="16.0206%" y="382.50">0x7f34ff17334e (ld-li..</text></g><g><title>_dl_catch_exception (libc.so.6) (76 samples, 13.62%)</title><rect x="15.7706%" y="388" width="13.6201%" height="15" fill="rgb(220,139,14)" fg:x="88" fg:w="76"/><text x="16.0206%" y="398.50">_dl_catch_exception (..</text></g><g><title>0x7f34ff172ff6 (ld-linux-x86-64.so.2) (66 samples, 11.83%)</title><rect x="17.5627%" y="404" width="11.8280%" height="15" fill="rgb(247,54,32)" fg:x="98" fg:w="66"/><text x="17.8127%" y="414.50">0x7f34ff172ff6 (ld..</text></g><g><title>_dl_catch_exception (libc.so.6) (66 samples, 11.83%)</title><rect x="17.5627%" y="420" width="11.8280%" height="15" fill="rgb(252,131,39)" fg:x="98" fg:w="66"/><text x="17.8127%" y="430.50">_dl_catch_exceptio..</text></g><g><title>0x7f34ff16b568 (ld-linux-x86-64.so.2) (66 samples, 11.83%)</title><rect x="17.5627%" y="436" width="11.8280%" height="15" fill="rgb(210,108,39)" fg:x="98" fg:w="66"/><text x="17.8127%" y="446.50">0x7f34ff16b568 (ld..</text></g><g><title>0x7f34ff16b47e (ld-linux-x86-64.so.2) (66 samples, 11.83%)</title><rect x="17.5627%" y="452" width="11.8280%" height="15" fill="rgb(205,23,29)" fg:x="98" fg:w="66"/><text x="17.8127%" y="462.50">0x7f34ff16b47e (ld..</text></g><g><title>__static_initialization_and_destruction_0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="468" width="0.1792%" height="15" fill="rgb(246,139,46)" fg:x="163" fg:w="1"/><text x="29.4615%" y="478.50"></text></g><g><title>torch::jit::RegisterOperators::RegisterOperators (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="484" width="0.1792%" height="15" fill="rgb(250,81,26)" fg:x="163" fg:w="1"/><text x="29.4615%" y="494.50"></text></g><g><title>torch::jit::registerOperator (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="500" width="0.1792%" height="15" fill="rgb(214,104,7)" fg:x="163" fg:w="1"/><text x="29.4615%" y="510.50"></text></g><g><title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::C10Operator const&amp;)#1}, torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::JitOnlyOperator const&amp;)#2}&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="516" width="0.1792%" height="15" fill="rgb(233,189,8)" fg:x="163" fg:w="1"/><text x="29.4615%" y="526.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="532" width="0.1792%" height="15" fill="rgb(228,141,17)" fg:x="163" fg:w="1"/><text x="29.4615%" y="542.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="548" width="0.1792%" height="15" fill="rgb(247,157,1)" fg:x="163" fg:w="1"/><text x="29.4615%" y="558.50"></text></g><g><title>0x7f34ab662160 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="29.2115%" y="564" width="0.1792%" height="15" fill="rgb(249,225,5)" fg:x="163" fg:w="1"/><text x="29.4615%" y="574.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (2 samples, 0.36%)</title><rect x="29.5699%" y="420" width="0.3584%" height="15" fill="rgb(242,55,13)" fg:x="165" fg:w="2"/><text x="29.8199%" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.36%)</title><rect x="29.5699%" y="436" width="0.3584%" height="15" fill="rgb(230,49,50)" fg:x="165" fg:w="2"/><text x="29.8199%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="452" width="0.3584%" height="15" fill="rgb(241,111,38)" fg:x="165" fg:w="2"/><text x="29.8199%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="29.5699%" y="468" width="0.3584%" height="15" fill="rgb(252,155,4)" fg:x="165" fg:w="2"/><text x="29.8199%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="29.5699%" y="484" width="0.3584%" height="15" fill="rgb(212,69,32)" fg:x="165" fg:w="2"/><text x="29.8199%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="29.5699%" y="500" width="0.3584%" height="15" fill="rgb(243,107,47)" fg:x="165" fg:w="2"/><text x="29.8199%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="29.5699%" y="516" width="0.3584%" height="15" fill="rgb(247,130,12)" fg:x="165" fg:w="2"/><text x="29.8199%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="532" width="0.3584%" height="15" fill="rgb(233,74,16)" fg:x="165" fg:w="2"/><text x="29.8199%" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:23) (2 samples, 0.36%)</title><rect x="29.5699%" y="548" width="0.3584%" height="15" fill="rgb(208,58,18)" fg:x="165" fg:w="2"/><text x="29.8199%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.36%)</title><rect x="29.5699%" y="564" width="0.3584%" height="15" fill="rgb(242,225,1)" fg:x="165" fg:w="2"/><text x="29.8199%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="580" width="0.3584%" height="15" fill="rgb(249,39,40)" fg:x="165" fg:w="2"/><text x="29.8199%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="29.5699%" y="596" width="0.3584%" height="15" fill="rgb(207,72,44)" fg:x="165" fg:w="2"/><text x="29.8199%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="29.5699%" y="612" width="0.3584%" height="15" fill="rgb(215,193,12)" fg:x="165" fg:w="2"/><text x="29.8199%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="29.5699%" y="628" width="0.3584%" height="15" fill="rgb(248,41,39)" fg:x="165" fg:w="2"/><text x="29.8199%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="29.5699%" y="644" width="0.3584%" height="15" fill="rgb(253,85,4)" fg:x="165" fg:w="2"/><text x="29.8199%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="660" width="0.3584%" height="15" fill="rgb(243,70,31)" fg:x="165" fg:w="2"/><text x="29.8199%" y="670.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:12) (2 samples, 0.36%)</title><rect x="29.5699%" y="676" width="0.3584%" height="15" fill="rgb(253,195,26)" fg:x="165" fg:w="2"/><text x="29.8199%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="29.5699%" y="692" width="0.3584%" height="15" fill="rgb(243,42,11)" fg:x="165" fg:w="2"/><text x="29.8199%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="29.5699%" y="708" width="0.3584%" height="15" fill="rgb(239,66,17)" fg:x="165" fg:w="2"/><text x="29.8199%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="29.5699%" y="724" width="0.3584%" height="15" fill="rgb(217,132,21)" fg:x="165" fg:w="2"/><text x="29.8199%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="29.5699%" y="740" width="0.3584%" height="15" fill="rgb(252,202,21)" fg:x="165" fg:w="2"/><text x="29.8199%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="756" width="0.3584%" height="15" fill="rgb(233,98,36)" fg:x="165" fg:w="2"/><text x="29.8199%" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py:4) (2 samples, 0.36%)</title><rect x="29.5699%" y="772" width="0.3584%" height="15" fill="rgb(216,153,54)" fg:x="165" fg:w="2"/><text x="29.8199%" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.36%)</title><rect x="29.5699%" y="788" width="0.3584%" height="15" fill="rgb(250,99,7)" fg:x="165" fg:w="2"/><text x="29.8199%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="804" width="0.3584%" height="15" fill="rgb(207,56,50)" fg:x="165" fg:w="2"/><text x="29.8199%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="29.5699%" y="820" width="0.3584%" height="15" fill="rgb(244,61,34)" fg:x="165" fg:w="2"/><text x="29.8199%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="29.5699%" y="836" width="0.3584%" height="15" fill="rgb(241,50,38)" fg:x="165" fg:w="2"/><text x="29.8199%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="29.5699%" y="852" width="0.3584%" height="15" fill="rgb(212,166,30)" fg:x="165" fg:w="2"/><text x="29.8199%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="29.5699%" y="868" width="0.3584%" height="15" fill="rgb(249,127,32)" fg:x="165" fg:w="2"/><text x="29.8199%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="884" width="0.3584%" height="15" fill="rgb(209,103,0)" fg:x="165" fg:w="2"/><text x="29.8199%" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py:12) (2 samples, 0.36%)</title><rect x="29.5699%" y="900" width="0.3584%" height="15" fill="rgb(238,209,51)" fg:x="165" fg:w="2"/><text x="29.8199%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.36%)</title><rect x="29.5699%" y="916" width="0.3584%" height="15" fill="rgb(237,56,23)" fg:x="165" fg:w="2"/><text x="29.8199%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.36%)</title><rect x="29.5699%" y="932" width="0.3584%" height="15" fill="rgb(215,153,46)" fg:x="165" fg:w="2"/><text x="29.8199%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.36%)</title><rect x="29.5699%" y="948" width="0.3584%" height="15" fill="rgb(224,49,31)" fg:x="165" fg:w="2"/><text x="29.8199%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.36%)</title><rect x="29.5699%" y="964" width="0.3584%" height="15" fill="rgb(250,18,42)" fg:x="165" fg:w="2"/><text x="29.8199%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.36%)</title><rect x="29.5699%" y="980" width="0.3584%" height="15" fill="rgb(215,176,39)" fg:x="165" fg:w="2"/><text x="29.8199%" y="990.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py:73) (2 samples, 0.36%)</title><rect x="29.5699%" y="996" width="0.3584%" height="15" fill="rgb(223,77,29)" fg:x="165" fg:w="2"/><text x="29.8199%" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="29.7491%" y="1012" width="0.1792%" height="15" fill="rgb(234,94,52)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.7491%" y="1028" width="0.1792%" height="15" fill="rgb(220,154,50)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="29.7491%" y="1044" width="0.1792%" height="15" fill="rgb(212,11,10)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="29.7491%" y="1060" width="0.1792%" height="15" fill="rgb(205,166,19)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="29.7491%" y="1076" width="0.1792%" height="15" fill="rgb(244,198,16)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="29.7491%" y="1092" width="0.1792%" height="15" fill="rgb(219,69,12)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.7491%" y="1108" width="0.1792%" height="15" fill="rgb(245,30,7)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1118.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py:37) (1 samples, 0.18%)</title><rect x="29.7491%" y="1124" width="0.1792%" height="15" fill="rgb(218,221,48)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="29.7491%" y="1140" width="0.1792%" height="15" fill="rgb(216,66,15)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="29.7491%" y="1156" width="0.1792%" height="15" fill="rgb(226,122,50)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="29.7491%" y="1172" width="0.1792%" height="15" fill="rgb(239,156,16)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="29.7491%" y="1188" width="0.1792%" height="15" fill="rgb(224,27,38)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.7491%" y="1204" width="0.1792%" height="15" fill="rgb(224,39,27)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1214.50"></text></g><g><title>&lt;module&gt; (numpy/_typing/__init__.py:182) (1 samples, 0.18%)</title><rect x="29.7491%" y="1220" width="0.1792%" height="15" fill="rgb(215,92,29)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="29.7491%" y="1236" width="0.1792%" height="15" fill="rgb(207,159,16)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="29.7491%" y="1252" width="0.1792%" height="15" fill="rgb(238,163,47)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="29.7491%" y="1268" width="0.1792%" height="15" fill="rgb(219,91,49)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="29.7491%" y="1284" width="0.1792%" height="15" fill="rgb(227,167,31)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.7491%" y="1300" width="0.1792%" height="15" fill="rgb(234,80,54)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1310.50"></text></g><g><title>&lt;module&gt; (numpy/_typing/_array_like.py:146) (1 samples, 0.18%)</title><rect x="29.7491%" y="1316" width="0.1792%" height="15" fill="rgb(212,114,2)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1326.50"></text></g><g><title>inner (typing.py:309) (1 samples, 0.18%)</title><rect x="29.7491%" y="1332" width="0.1792%" height="15" fill="rgb(234,50,24)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1342.50"></text></g><g><title>__getitem__ (typing.py:1081) (1 samples, 0.18%)</title><rect x="29.7491%" y="1348" width="0.1792%" height="15" fill="rgb(221,68,8)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1358.50"></text></g><g><title>copy_with (typing.py:1240) (1 samples, 0.18%)</title><rect x="29.7491%" y="1364" width="0.1792%" height="15" fill="rgb(254,180,31)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1374.50"></text></g><g><title>inner (typing.py:309) (1 samples, 0.18%)</title><rect x="29.7491%" y="1380" width="0.1792%" height="15" fill="rgb(247,130,50)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1390.50"></text></g><g><title>__getitem__ (typing.py:403) (1 samples, 0.18%)</title><rect x="29.7491%" y="1396" width="0.1792%" height="15" fill="rgb(211,109,4)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1406.50"></text></g><g><title>Union (typing.py:521) (1 samples, 0.18%)</title><rect x="29.7491%" y="1412" width="0.1792%" height="15" fill="rgb(238,50,21)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1422.50"></text></g><g><title>__init__ (typing.py:1026) (1 samples, 0.18%)</title><rect x="29.7491%" y="1428" width="0.1792%" height="15" fill="rgb(225,57,45)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1438.50"></text></g><g><title>__setattr__ (typing.py:989) (1 samples, 0.18%)</title><rect x="29.7491%" y="1444" width="0.1792%" height="15" fill="rgb(209,196,50)" fg:x="166" fg:w="1"/><text x="29.9991%" y="1454.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:157) (1 samples, 0.18%)</title><rect x="29.9283%" y="420" width="0.1792%" height="15" fill="rgb(242,140,13)" fg:x="167" fg:w="1"/><text x="30.1783%" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.18%)</title><rect x="29.9283%" y="436" width="0.1792%" height="15" fill="rgb(217,111,7)" fg:x="167" fg:w="1"/><text x="30.1783%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.9283%" y="452" width="0.1792%" height="15" fill="rgb(253,193,51)" fg:x="167" fg:w="1"/><text x="30.1783%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="29.9283%" y="468" width="0.1792%" height="15" fill="rgb(252,70,29)" fg:x="167" fg:w="1"/><text x="30.1783%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="29.9283%" y="484" width="0.1792%" height="15" fill="rgb(232,127,12)" fg:x="167" fg:w="1"/><text x="30.1783%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="29.9283%" y="500" width="0.1792%" height="15" fill="rgb(211,180,21)" fg:x="167" fg:w="1"/><text x="30.1783%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="29.9283%" y="516" width="0.1792%" height="15" fill="rgb(229,72,13)" fg:x="167" fg:w="1"/><text x="30.1783%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="29.9283%" y="532" width="0.1792%" height="15" fill="rgb(240,211,49)" fg:x="167" fg:w="1"/><text x="30.1783%" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:119) (1 samples, 0.18%)</title><rect x="29.9283%" y="548" width="0.1792%" height="15" fill="rgb(219,149,40)" fg:x="167" fg:w="1"/><text x="30.1783%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="29.9283%" y="564" width="0.1792%" height="15" fill="rgb(210,127,46)" fg:x="167" fg:w="1"/><text x="30.1783%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="29.9283%" y="580" width="0.1792%" height="15" fill="rgb(220,106,7)" fg:x="167" fg:w="1"/><text x="30.1783%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="29.9283%" y="596" width="0.1792%" height="15" fill="rgb(249,31,22)" fg:x="167" fg:w="1"/><text x="30.1783%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:879) (1 samples, 0.18%)</title><rect x="29.9283%" y="612" width="0.1792%" height="15" fill="rgb(253,1,49)" fg:x="167" fg:w="1"/><text x="30.1783%" y="622.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:979) (1 samples, 0.18%)</title><rect x="29.9283%" y="628" width="0.1792%" height="15" fill="rgb(227,144,33)" fg:x="167" fg:w="1"/><text x="30.1783%" y="638.50"></text></g><g><title>THPVariable_initModule (libtorch_python.so) (5 samples, 0.90%)</title><rect x="29.3907%" y="308" width="0.8961%" height="15" fill="rgb(249,163,44)" fg:x="164" fg:w="5"/><text x="29.6407%" y="318.50"></text></g><g><title>torch::utils::validate_numpy_for_dlpack_deleter_bug (libtorch_python.so) (4 samples, 0.72%)</title><rect x="29.5699%" y="324" width="0.7168%" height="15" fill="rgb(234,15,39)" fg:x="165" fg:w="4"/><text x="29.8199%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.72%)</title><rect x="29.5699%" y="340" width="0.7168%" height="15" fill="rgb(207,66,16)" fg:x="165" fg:w="4"/><text x="29.8199%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.72%)</title><rect x="29.5699%" y="356" width="0.7168%" height="15" fill="rgb(233,112,24)" fg:x="165" fg:w="4"/><text x="29.8199%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.72%)</title><rect x="29.5699%" y="372" width="0.7168%" height="15" fill="rgb(230,90,22)" fg:x="165" fg:w="4"/><text x="29.8199%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.72%)</title><rect x="29.5699%" y="388" width="0.7168%" height="15" fill="rgb(229,61,13)" fg:x="165" fg:w="4"/><text x="29.8199%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.72%)</title><rect x="29.5699%" y="404" width="0.7168%" height="15" fill="rgb(225,57,24)" fg:x="165" fg:w="4"/><text x="29.8199%" y="414.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:237) (1 samples, 0.18%)</title><rect x="30.1075%" y="420" width="0.1792%" height="15" fill="rgb(208,169,48)" fg:x="168" fg:w="1"/><text x="30.3575%" y="430.50"></text></g><g><title>_register_known_types (numpy/core/getlimits.py:283) (1 samples, 0.18%)</title><rect x="30.1075%" y="436" width="0.1792%" height="15" fill="rgb(244,218,51)" fg:x="168" fg:w="1"/><text x="30.3575%" y="446.50"></text></g><g><title>__init__ (numpy/core/getlimits.py:53) (1 samples, 0.18%)</title><rect x="30.1075%" y="452" width="0.1792%" height="15" fill="rgb(214,148,10)" fg:x="168" fg:w="1"/><text x="30.3575%" y="462.50"></text></g><g><title>_float_to_float (numpy/core/getlimits.py:99) (1 samples, 0.18%)</title><rect x="30.1075%" y="468" width="0.1792%" height="15" fill="rgb(225,174,27)" fg:x="168" fg:w="1"/><text x="30.3575%" y="478.50"></text></g><g><title>_float_conv (numpy/core/getlimits.py:109) (1 samples, 0.18%)</title><rect x="30.1075%" y="484" width="0.1792%" height="15" fill="rgb(230,96,26)" fg:x="168" fg:w="1"/><text x="30.3575%" y="494.50"></text></g><g><title>0x7f34564dfa4c (?) (1 samples, 0.18%)</title><rect x="30.1075%" y="500" width="0.1792%" height="15" fill="rgb(232,10,30)" fg:x="168" fg:w="1"/><text x="30.3575%" y="510.50"></text></g><g><title>0x7f3456496a4f (?) (1 samples, 0.18%)</title><rect x="30.1075%" y="516" width="0.1792%" height="15" fill="rgb(222,8,50)" fg:x="168" fg:w="1"/><text x="30.3575%" y="526.50"></text></g><g><title>0x7f3456496534 (?) (1 samples, 0.18%)</title><rect x="30.1075%" y="532" width="0.1792%" height="15" fill="rgb(213,81,27)" fg:x="168" fg:w="1"/><text x="30.3575%" y="542.50"></text></g><g><title>0x7f34564911f0 (?) (1 samples, 0.18%)</title><rect x="30.1075%" y="548" width="0.1792%" height="15" fill="rgb(245,50,10)" fg:x="168" fg:w="1"/><text x="30.3575%" y="558.50"></text></g><g><title>0x7f3456362ff0 (?) (1 samples, 0.18%)</title><rect x="30.1075%" y="564" width="0.1792%" height="15" fill="rgb(216,100,18)" fg:x="168" fg:w="1"/><text x="30.3575%" y="574.50"></text></g><g><title>pybind11::class_&lt;torch::jit::UnaryOp, torch::jit::Expr&gt;::def&lt;pybind11::detail::initimpl::factory&lt;torch::jit::initTreeViewBindings(_object*)::{lambda(torch::jit::SourceRange const&amp;, std::string const&amp;, torch::jit::Expr const&amp;)#45}, pybind11::detail::void_type (*)(), torch::jit::UnaryOp(torch::jit::SourceRange const&amp;, std::string const&amp;, torch::jit::Expr const&amp;), pybind11::detail::void_type()&gt;::execute&lt;pybind11::class_&lt;torch::jit::UnaryOp, torch::jit::Expr&gt;, &gt;(pybind11::class_&lt;torch::jit::UnaryOp, torch::jit::Expr&gt;&amp;, const&amp;) &amp;&amp;::{lambda(pybind11::detail::value_and_holder&amp;, torch::jit::SourceRange const&amp;, std::string const&amp;, torch::jit::Expr const&amp;)#1}, pybind11::detail::is_new_style_constructor&gt; (libtorch_python.so) (1 samples, 0.18%)</title><rect x="30.2867%" y="340" width="0.1792%" height="15" fill="rgb(236,147,54)" fg:x="169" fg:w="1"/><text x="30.5367%" y="350.50"></text></g><g><title>pybind11::cpp_function::initialize_generic (libtorch_python.so) (1 samples, 0.18%)</title><rect x="30.2867%" y="356" width="0.1792%" height="15" fill="rgb(205,143,26)" fg:x="169" fg:w="1"/><text x="30.5367%" y="366.50"></text></g><g><title>pybind11_meta_getattro (libtorch_python.so) (1 samples, 0.18%)</title><rect x="30.2867%" y="372" width="0.1792%" height="15" fill="rgb(236,26,9)" fg:x="169" fg:w="1"/><text x="30.5367%" y="382.50"></text></g><g><title>&lt;module&gt; (profile_test.py:1) (159 samples, 28.49%)</title><rect x="2.3297%" y="84" width="28.4946%" height="15" fill="rgb(221,165,53)" fg:x="13" fg:w="159"/><text x="2.5797%" y="94.50">&lt;module&gt; (profile_test.py:1)</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (159 samples, 28.49%)</title><rect x="2.3297%" y="100" width="28.4946%" height="15" fill="rgb(214,110,17)" fg:x="13" fg:w="159"/><text x="2.5797%" y="110.50">_find_and_load (&lt;frozen importlib._bootstrap&gt;:..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (159 samples, 28.49%)</title><rect x="2.3297%" y="116" width="28.4946%" height="15" fill="rgb(237,197,12)" fg:x="13" fg:w="159"/><text x="2.5797%" y="126.50">_find_and_load_unlocked (&lt;frozen importlib._bo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (159 samples, 28.49%)</title><rect x="2.3297%" y="132" width="28.4946%" height="15" fill="rgb(205,84,17)" fg:x="13" fg:w="159"/><text x="2.5797%" y="142.50">_load_unlocked (&lt;frozen importlib._bootstrap&gt;:..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (159 samples, 28.49%)</title><rect x="2.3297%" y="148" width="28.4946%" height="15" fill="rgb(237,18,45)" fg:x="13" fg:w="159"/><text x="2.5797%" y="158.50">exec_module (&lt;frozen importlib._bootstrap_exte..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (159 samples, 28.49%)</title><rect x="2.3297%" y="164" width="28.4946%" height="15" fill="rgb(221,87,14)" fg:x="13" fg:w="159"/><text x="2.5797%" y="174.50">_call_with_frames_removed (&lt;frozen importlib._..</text></g><g><title>&lt;module&gt; (torch/__init__.py:239) (84 samples, 15.05%)</title><rect x="15.7706%" y="180" width="15.0538%" height="15" fill="rgb(238,186,15)" fg:x="88" fg:w="84"/><text x="16.0206%" y="190.50">&lt;module&gt; (torch/__init_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (84 samples, 15.05%)</title><rect x="15.7706%" y="196" width="15.0538%" height="15" fill="rgb(208,115,11)" fg:x="88" fg:w="84"/><text x="16.0206%" y="206.50">_find_and_load (&lt;frozen..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (84 samples, 15.05%)</title><rect x="15.7706%" y="212" width="15.0538%" height="15" fill="rgb(254,175,0)" fg:x="88" fg:w="84"/><text x="16.0206%" y="222.50">_find_and_load_unlocked..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (84 samples, 15.05%)</title><rect x="15.7706%" y="228" width="15.0538%" height="15" fill="rgb(227,24,42)" fg:x="88" fg:w="84"/><text x="16.0206%" y="238.50">_load_unlocked (&lt;frozen..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:571) (84 samples, 15.05%)</title><rect x="15.7706%" y="244" width="15.0538%" height="15" fill="rgb(223,211,37)" fg:x="88" fg:w="84"/><text x="16.0206%" y="254.50">module_from_spec (&lt;froz..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1176) (84 samples, 15.05%)</title><rect x="15.7706%" y="260" width="15.0538%" height="15" fill="rgb(235,49,27)" fg:x="88" fg:w="84"/><text x="16.0206%" y="270.50">create_module (&lt;frozen ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (84 samples, 15.05%)</title><rect x="15.7706%" y="276" width="15.0538%" height="15" fill="rgb(254,97,51)" fg:x="88" fg:w="84"/><text x="16.0206%" y="286.50">_call_with_frames_remov..</text></g><g><title>initModule (libtorch_python.so) (8 samples, 1.43%)</title><rect x="29.3907%" y="292" width="1.4337%" height="15" fill="rgb(249,51,40)" fg:x="164" fg:w="8"/><text x="29.6407%" y="302.50"></text></g><g><title>torch::jit::initJITBindings (libtorch_python.so) (3 samples, 0.54%)</title><rect x="30.2867%" y="308" width="0.5376%" height="15" fill="rgb(210,128,45)" fg:x="169" fg:w="3"/><text x="30.5367%" y="318.50"></text></g><g><title>torch::jit::initTreeViewBindings (libtorch_python.so) (3 samples, 0.54%)</title><rect x="30.2867%" y="324" width="0.5376%" height="15" fill="rgb(224,137,50)" fg:x="169" fg:w="3"/><text x="30.5367%" y="334.50"></text></g><g><title>pybind11::detail::generic_type::initialize (libtorch_python.so) (2 samples, 0.36%)</title><rect x="30.4659%" y="340" width="0.3584%" height="15" fill="rgb(242,15,9)" fg:x="170" fg:w="2"/><text x="30.7159%" y="350.50"></text></g><g><title>pybind11::detail::make_new_python_type (libtorch_python.so) (2 samples, 0.36%)</title><rect x="30.4659%" y="356" width="0.3584%" height="15" fill="rgb(233,187,41)" fg:x="170" fg:w="2"/><text x="30.7159%" y="366.50"></text></g><g><title>0x7f347e1014d2 (?) (1 samples, 0.18%)</title><rect x="30.8244%" y="100" width="0.1792%" height="15" fill="rgb(227,2,29)" fg:x="172" fg:w="1"/><text x="31.0744%" y="110.50"></text></g><g><title>0x7f347e0eaaac (?) (1 samples, 0.18%)</title><rect x="30.8244%" y="116" width="0.1792%" height="15" fill="rgb(222,70,3)" fg:x="172" fg:w="1"/><text x="31.0744%" y="126.50"></text></g><g><title>0x7f347e0d4a40 (?) (1 samples, 0.18%)</title><rect x="30.8244%" y="132" width="0.1792%" height="15" fill="rgb(213,11,42)" fg:x="172" fg:w="1"/><text x="31.0744%" y="142.50"></text></g><g><title>0x7f347e0d17d1 (?) (1 samples, 0.18%)</title><rect x="30.8244%" y="148" width="0.1792%" height="15" fill="rgb(225,150,9)" fg:x="172" fg:w="1"/><text x="31.0744%" y="158.50"></text></g><g><title>0x7f347e0d05de (?) (1 samples, 0.18%)</title><rect x="30.8244%" y="164" width="0.1792%" height="15" fill="rgb(230,162,45)" fg:x="172" fg:w="1"/><text x="31.0744%" y="174.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="180" width="0.1792%" height="15" fill="rgb(222,14,52)" fg:x="172" fg:w="1"/><text x="31.0744%" y="190.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="196" width="0.1792%" height="15" fill="rgb(254,198,14)" fg:x="172" fg:w="1"/><text x="31.0744%" y="206.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="212" width="0.1792%" height="15" fill="rgb(220,217,30)" fg:x="172" fg:w="1"/><text x="31.0744%" y="222.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="228" width="0.1792%" height="15" fill="rgb(215,146,41)" fg:x="172" fg:w="1"/><text x="31.0744%" y="238.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="244" width="0.1792%" height="15" fill="rgb(217,27,36)" fg:x="172" fg:w="1"/><text x="31.0744%" y="254.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mm(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="260" width="0.1792%" height="15" fill="rgb(219,218,39)" fg:x="172" fg:w="1"/><text x="31.0744%" y="270.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="276" width="0.1792%" height="15" fill="rgb(219,4,42)" fg:x="172" fg:w="1"/><text x="31.0744%" y="286.50"></text></g><g><title>at::_ops::mm::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="292" width="0.1792%" height="15" fill="rgb(249,119,36)" fg:x="172" fg:w="1"/><text x="31.0744%" y="302.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="308" width="0.1792%" height="15" fill="rgb(209,23,33)" fg:x="172" fg:w="1"/><text x="31.0744%" y="318.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="324" width="0.1792%" height="15" fill="rgb(211,10,0)" fg:x="172" fg:w="1"/><text x="31.0744%" y="334.50"></text></g><g><title>at::native::structured_mm_out_cpu::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="340" width="0.1792%" height="15" fill="rgb(208,99,37)" fg:x="172" fg:w="1"/><text x="31.0744%" y="350.50"></text></g><g><title>at::native::addmm_impl_cpu_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="356" width="0.1792%" height="15" fill="rgb(213,132,31)" fg:x="172" fg:w="1"/><text x="31.0744%" y="366.50"></text></g><g><title>at::native::cpublas::gemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="372" width="0.1792%" height="15" fill="rgb(243,129,40)" fg:x="172" fg:w="1"/><text x="31.0744%" y="382.50"></text></g><g><title>mkl_blas__dgemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="388" width="0.1792%" height="15" fill="rgb(210,66,33)" fg:x="172" fg:w="1"/><text x="31.0744%" y="398.50"></text></g><g><title>mkl_blas_dgemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="30.8244%" y="404" width="0.1792%" height="15" fill="rgb(209,189,4)" fg:x="172" fg:w="1"/><text x="31.0744%" y="414.50"></text></g><g><title>at::pow (pow.h:64) (1 samples, 0.18%)</title><rect x="31.0036%" y="580" width="0.1792%" height="15" fill="rgb(214,107,37)" fg:x="173" fg:w="1"/><text x="31.2536%" y="590.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="31.0036%" y="596" width="0.1792%" height="15" fill="rgb(245,88,54)" fg:x="173" fg:w="1"/><text x="31.2536%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="31.0036%" y="612" width="0.1792%" height="15" fill="rgb(205,146,20)" fg:x="173" fg:w="1"/><text x="31.2536%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="31.0036%" y="628" width="0.1792%" height="15" fill="rgb(220,161,25)" fg:x="173" fg:w="1"/><text x="31.2536%" y="638.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="644" width="0.1792%" height="15" fill="rgb(215,152,15)" fg:x="173" fg:w="1"/><text x="31.2536%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="660" width="0.1792%" height="15" fill="rgb(233,192,44)" fg:x="173" fg:w="1"/><text x="31.2536%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="676" width="0.1792%" height="15" fill="rgb(240,170,46)" fg:x="173" fg:w="1"/><text x="31.2536%" y="686.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="692" width="0.1792%" height="15" fill="rgb(207,104,33)" fg:x="173" fg:w="1"/><text x="31.2536%" y="702.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="708" width="0.1792%" height="15" fill="rgb(219,21,39)" fg:x="173" fg:w="1"/><text x="31.2536%" y="718.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.0036%" y="724" width="0.1792%" height="15" fill="rgb(214,133,29)" fg:x="173" fg:w="1"/><text x="31.2536%" y="734.50"></text></g><g><title>pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="31.0036%" y="740" width="0.1792%" height="15" fill="rgb(226,93,6)" fg:x="173" fg:w="1"/><text x="31.2536%" y="750.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="31.0036%" y="324" width="0.3584%" height="15" fill="rgb(252,222,34)" fg:x="173" fg:w="2"/><text x="31.2536%" y="334.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="31.0036%" y="340" width="0.3584%" height="15" fill="rgb(252,92,48)" fg:x="173" fg:w="2"/><text x="31.2536%" y="350.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="31.0036%" y="356" width="0.3584%" height="15" fill="rgb(245,223,24)" fg:x="173" fg:w="2"/><text x="31.2536%" y="366.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="31.0036%" y="372" width="0.3584%" height="15" fill="rgb(205,176,3)" fg:x="173" fg:w="2"/><text x="31.2536%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (2 samples, 0.36%)</title><rect x="31.0036%" y="388" width="0.3584%" height="15" fill="rgb(235,151,15)" fg:x="173" fg:w="2"/><text x="31.2536%" y="398.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (2 samples, 0.36%)</title><rect x="31.0036%" y="404" width="0.3584%" height="15" fill="rgb(237,209,11)" fg:x="173" fg:w="2"/><text x="31.2536%" y="414.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (2 samples, 0.36%)</title><rect x="31.0036%" y="420" width="0.3584%" height="15" fill="rgb(243,227,24)" fg:x="173" fg:w="2"/><text x="31.2536%" y="430.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (2 samples, 0.36%)</title><rect x="31.0036%" y="436" width="0.3584%" height="15" fill="rgb(239,193,16)" fg:x="173" fg:w="2"/><text x="31.2536%" y="446.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (2 samples, 0.36%)</title><rect x="31.0036%" y="452" width="0.3584%" height="15" fill="rgb(231,27,9)" fg:x="173" fg:w="2"/><text x="31.2536%" y="462.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (2 samples, 0.36%)</title><rect x="31.0036%" y="468" width="0.3584%" height="15" fill="rgb(219,169,10)" fg:x="173" fg:w="2"/><text x="31.2536%" y="478.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (2 samples, 0.36%)</title><rect x="31.0036%" y="484" width="0.3584%" height="15" fill="rgb(244,229,43)" fg:x="173" fg:w="2"/><text x="31.2536%" y="494.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (2 samples, 0.36%)</title><rect x="31.0036%" y="500" width="0.3584%" height="15" fill="rgb(254,38,20)" fg:x="173" fg:w="2"/><text x="31.2536%" y="510.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="31.0036%" y="516" width="0.3584%" height="15" fill="rgb(250,47,30)" fg:x="173" fg:w="2"/><text x="31.2536%" y="526.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="31.0036%" y="532" width="0.3584%" height="15" fill="rgb(224,124,36)" fg:x="173" fg:w="2"/><text x="31.2536%" y="542.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="31.0036%" y="548" width="0.3584%" height="15" fill="rgb(246,68,51)" fg:x="173" fg:w="2"/><text x="31.2536%" y="558.50"></text></g><g><title>my_length_constraint (main.cpp:268) (2 samples, 0.36%)</title><rect x="31.0036%" y="564" width="0.3584%" height="15" fill="rgb(253,43,49)" fg:x="173" fg:w="2"/><text x="31.2536%" y="574.50"></text></g><g><title>operator+ (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="31.1828%" y="580" width="0.1792%" height="15" fill="rgb(219,54,36)" fg:x="174" fg:w="1"/><text x="31.4328%" y="590.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="31.1828%" y="596" width="0.1792%" height="15" fill="rgb(227,133,34)" fg:x="174" fg:w="1"/><text x="31.4328%" y="606.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="31.1828%" y="612" width="0.1792%" height="15" fill="rgb(247,227,15)" fg:x="174" fg:w="1"/><text x="31.4328%" y="622.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.1828%" y="628" width="0.1792%" height="15" fill="rgb(229,96,14)" fg:x="174" fg:w="1"/><text x="31.4328%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.1828%" y="644" width="0.1792%" height="15" fill="rgb(220,79,17)" fg:x="174" fg:w="1"/><text x="31.4328%" y="654.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.1828%" y="660" width="0.1792%" height="15" fill="rgb(205,131,53)" fg:x="174" fg:w="1"/><text x="31.4328%" y="670.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.1828%" y="676" width="0.1792%" height="15" fill="rgb(209,50,29)" fg:x="174" fg:w="1"/><text x="31.4328%" y="686.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.1828%" y="692" width="0.1792%" height="15" fill="rgb(245,86,46)" fg:x="174" fg:w="1"/><text x="31.4328%" y="702.50"></text></g><g><title>pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="31.1828%" y="708" width="0.1792%" height="15" fill="rgb(235,66,46)" fg:x="174" fg:w="1"/><text x="31.4328%" y="718.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.3620%" y="548" width="0.1792%" height="15" fill="rgb(232,148,31)" fg:x="175" fg:w="1"/><text x="31.6120%" y="558.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.3620%" y="564" width="0.1792%" height="15" fill="rgb(217,149,8)" fg:x="175" fg:w="1"/><text x="31.6120%" y="574.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.3620%" y="580" width="0.1792%" height="15" fill="rgb(209,183,11)" fg:x="175" fg:w="1"/><text x="31.6120%" y="590.50"></text></g><g><title>at::impl::PythonTorchFunctionTLS::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.5412%" y="548" width="0.1792%" height="15" fill="rgb(208,55,20)" fg:x="176" fg:w="1"/><text x="31.7912%" y="558.50"></text></g><g><title>__tls_init (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.5412%" y="564" width="0.1792%" height="15" fill="rgb(218,39,14)" fg:x="176" fg:w="1"/><text x="31.7912%" y="574.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="31.5412%" y="580" width="0.1792%" height="15" fill="rgb(216,169,33)" fg:x="176" fg:w="1"/><text x="31.7912%" y="590.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="31.5412%" y="596" width="0.1792%" height="15" fill="rgb(233,80,24)" fg:x="176" fg:w="1"/><text x="31.7912%" y="606.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:150) (5 samples, 0.90%)</title><rect x="31.0036%" y="292" width="0.8961%" height="15" fill="rgb(213,179,31)" fg:x="173" fg:w="5"/><text x="31.2536%" y="302.50"></text></g><g><title>at::transpose (transpose.h:27) (5 samples, 0.90%)</title><rect x="31.0036%" y="308" width="0.8961%" height="15" fill="rgb(209,19,5)" fg:x="173" fg:w="5"/><text x="31.2536%" y="318.50"></text></g><g><title>fast_jacobian (main.cpp:47) (3 samples, 0.54%)</title><rect x="31.3620%" y="324" width="0.5376%" height="15" fill="rgb(219,18,35)" fg:x="175" fg:w="3"/><text x="31.6120%" y="334.50"></text></g><g><title>at::Tensor::backward (TensorBody.h:445) (3 samples, 0.54%)</title><rect x="31.3620%" y="340" width="0.5376%" height="15" fill="rgb(209,169,16)" fg:x="175" fg:w="3"/><text x="31.6120%" y="350.50"></text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (3 samples, 0.54%)</title><rect x="31.3620%" y="356" width="0.5376%" height="15" fill="rgb(245,90,51)" fg:x="175" fg:w="3"/><text x="31.6120%" y="366.50"></text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (3 samples, 0.54%)</title><rect x="31.3620%" y="372" width="0.5376%" height="15" fill="rgb(220,99,45)" fg:x="175" fg:w="3"/><text x="31.6120%" y="382.50"></text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="388" width="0.5376%" height="15" fill="rgb(249,89,25)" fg:x="175" fg:w="3"/><text x="31.6120%" y="398.50"></text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="404" width="0.5376%" height="15" fill="rgb(239,193,0)" fg:x="175" fg:w="3"/><text x="31.6120%" y="414.50"></text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="420" width="0.5376%" height="15" fill="rgb(231,126,1)" fg:x="175" fg:w="3"/><text x="31.6120%" y="430.50"></text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="436" width="0.5376%" height="15" fill="rgb(243,166,3)" fg:x="175" fg:w="3"/><text x="31.6120%" y="446.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="452" width="0.5376%" height="15" fill="rgb(223,22,34)" fg:x="175" fg:w="3"/><text x="31.6120%" y="462.50"></text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="468" width="0.5376%" height="15" fill="rgb(251,52,51)" fg:x="175" fg:w="3"/><text x="31.6120%" y="478.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="484" width="0.5376%" height="15" fill="rgb(221,165,28)" fg:x="175" fg:w="3"/><text x="31.6120%" y="494.50"></text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="500" width="0.5376%" height="15" fill="rgb(218,121,47)" fg:x="175" fg:w="3"/><text x="31.6120%" y="510.50"></text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="516" width="0.5376%" height="15" fill="rgb(209,120,9)" fg:x="175" fg:w="3"/><text x="31.6120%" y="526.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="31.3620%" y="532" width="0.5376%" height="15" fill="rgb(236,68,12)" fg:x="175" fg:w="3"/><text x="31.6120%" y="542.50"></text></g><g><title>c10::AutogradState::set_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="31.7204%" y="548" width="0.1792%" height="15" fill="rgb(225,194,26)" fg:x="177" fg:w="1"/><text x="31.9704%" y="558.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="31.7204%" y="564" width="0.1792%" height="15" fill="rgb(231,84,39)" fg:x="177" fg:w="1"/><text x="31.9704%" y="574.50"></text></g><g><title>0x7f34ff179d15 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="31.7204%" y="580" width="0.1792%" height="15" fill="rgb(210,11,45)" fg:x="177" fg:w="1"/><text x="31.9704%" y="590.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:151) (1 samples, 0.18%)</title><rect x="31.8996%" y="292" width="0.1792%" height="15" fill="rgb(224,54,52)" fg:x="178" fg:w="1"/><text x="32.1496%" y="302.50"></text></g><g><title>at::matmul (matmul.h:27) (1 samples, 0.18%)</title><rect x="31.8996%" y="308" width="0.1792%" height="15" fill="rgb(238,102,14)" fg:x="178" fg:w="1"/><text x="32.1496%" y="318.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="324" width="0.1792%" height="15" fill="rgb(243,160,52)" fg:x="178" fg:w="1"/><text x="32.1496%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="340" width="0.1792%" height="15" fill="rgb(216,114,19)" fg:x="178" fg:w="1"/><text x="32.1496%" y="350.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="356" width="0.1792%" height="15" fill="rgb(244,166,37)" fg:x="178" fg:w="1"/><text x="32.1496%" y="366.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="372" width="0.1792%" height="15" fill="rgb(246,29,44)" fg:x="178" fg:w="1"/><text x="32.1496%" y="382.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="388" width="0.1792%" height="15" fill="rgb(215,56,53)" fg:x="178" fg:w="1"/><text x="32.1496%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mm(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="404" width="0.1792%" height="15" fill="rgb(217,60,2)" fg:x="178" fg:w="1"/><text x="32.1496%" y="414.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="420" width="0.1792%" height="15" fill="rgb(207,26,24)" fg:x="178" fg:w="1"/><text x="32.1496%" y="430.50"></text></g><g><title>at::_ops::mm::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="436" width="0.1792%" height="15" fill="rgb(252,210,15)" fg:x="178" fg:w="1"/><text x="32.1496%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="452" width="0.1792%" height="15" fill="rgb(253,209,26)" fg:x="178" fg:w="1"/><text x="32.1496%" y="462.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="468" width="0.1792%" height="15" fill="rgb(238,170,14)" fg:x="178" fg:w="1"/><text x="32.1496%" y="478.50"></text></g><g><title>at::native::structured_mm_out_cpu::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="484" width="0.1792%" height="15" fill="rgb(216,178,15)" fg:x="178" fg:w="1"/><text x="32.1496%" y="494.50"></text></g><g><title>at::native::addmm_impl_cpu_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="500" width="0.1792%" height="15" fill="rgb(250,197,2)" fg:x="178" fg:w="1"/><text x="32.1496%" y="510.50"></text></g><g><title>at::native::cpublas::gemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="516" width="0.1792%" height="15" fill="rgb(212,70,42)" fg:x="178" fg:w="1"/><text x="32.1496%" y="526.50"></text></g><g><title>mkl_blas__dgemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="532" width="0.1792%" height="15" fill="rgb(227,213,9)" fg:x="178" fg:w="1"/><text x="32.1496%" y="542.50"></text></g><g><title>mkl_blas_dgemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="548" width="0.1792%" height="15" fill="rgb(245,99,25)" fg:x="178" fg:w="1"/><text x="32.1496%" y="558.50"></text></g><g><title>mkl_blas_avx512_xdgemm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="564" width="0.1792%" height="15" fill="rgb(250,82,29)" fg:x="178" fg:w="1"/><text x="32.1496%" y="574.50"></text></g><g><title>mkl_blas_avx512_dgemm_initialize_strategy (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="31.8996%" y="580" width="0.1792%" height="15" fill="rgb(241,226,54)" fg:x="178" fg:w="1"/><text x="32.1496%" y="590.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:152) (1 samples, 0.18%)</title><rect x="32.0789%" y="292" width="0.1792%" height="15" fill="rgb(221,99,41)" fg:x="179" fg:w="1"/><text x="32.3289%" y="302.50"></text></g><g><title>at::matmul (matmul.h:27) (1 samples, 0.18%)</title><rect x="32.0789%" y="308" width="0.1792%" height="15" fill="rgb(213,90,21)" fg:x="179" fg:w="1"/><text x="32.3289%" y="318.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="324" width="0.1792%" height="15" fill="rgb(205,208,24)" fg:x="179" fg:w="1"/><text x="32.3289%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="340" width="0.1792%" height="15" fill="rgb(246,31,12)" fg:x="179" fg:w="1"/><text x="32.3289%" y="350.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="356" width="0.1792%" height="15" fill="rgb(213,154,6)" fg:x="179" fg:w="1"/><text x="32.3289%" y="366.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="372" width="0.1792%" height="15" fill="rgb(222,163,29)" fg:x="179" fg:w="1"/><text x="32.3289%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="388" width="0.1792%" height="15" fill="rgb(227,201,8)" fg:x="179" fg:w="1"/><text x="32.3289%" y="398.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="404" width="0.1792%" height="15" fill="rgb(233,9,32)" fg:x="179" fg:w="1"/><text x="32.3289%" y="414.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="420" width="0.1792%" height="15" fill="rgb(217,54,24)" fg:x="179" fg:w="1"/><text x="32.3289%" y="430.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="436" width="0.1792%" height="15" fill="rgb(235,192,0)" fg:x="179" fg:w="1"/><text x="32.3289%" y="446.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="452" width="0.1792%" height="15" fill="rgb(235,45,9)" fg:x="179" fg:w="1"/><text x="32.3289%" y="462.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="468" width="0.1792%" height="15" fill="rgb(246,42,40)" fg:x="179" fg:w="1"/><text x="32.3289%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="484" width="0.1792%" height="15" fill="rgb(248,111,24)" fg:x="179" fg:w="1"/><text x="32.3289%" y="494.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="500" width="0.1792%" height="15" fill="rgb(249,65,22)" fg:x="179" fg:w="1"/><text x="32.3289%" y="510.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="516" width="0.1792%" height="15" fill="rgb(238,111,51)" fg:x="179" fg:w="1"/><text x="32.3289%" y="526.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="532" width="0.1792%" height="15" fill="rgb(250,118,22)" fg:x="179" fg:w="1"/><text x="32.3289%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="548" width="0.1792%" height="15" fill="rgb(234,84,26)" fg:x="179" fg:w="1"/><text x="32.3289%" y="558.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="564" width="0.1792%" height="15" fill="rgb(243,172,12)" fg:x="179" fg:w="1"/><text x="32.3289%" y="574.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="580" width="0.1792%" height="15" fill="rgb(236,150,49)" fg:x="179" fg:w="1"/><text x="32.3289%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="596" width="0.1792%" height="15" fill="rgb(225,197,26)" fg:x="179" fg:w="1"/><text x="32.3289%" y="606.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="612" width="0.1792%" height="15" fill="rgb(214,17,42)" fg:x="179" fg:w="1"/><text x="32.3289%" y="622.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="628" width="0.1792%" height="15" fill="rgb(224,165,40)" fg:x="179" fg:w="1"/><text x="32.3289%" y="638.50"></text></g><g><title>at::_ops::linalg_lu_solve_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="644" width="0.1792%" height="15" fill="rgb(246,100,4)" fg:x="179" fg:w="1"/><text x="32.3289%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_solve_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="660" width="0.1792%" height="15" fill="rgb(222,103,0)" fg:x="179" fg:w="1"/><text x="32.3289%" y="670.50"></text></g><g><title>at::native::structured_linalg_lu_solve_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="676" width="0.1792%" height="15" fill="rgb(227,189,26)" fg:x="179" fg:w="1"/><text x="32.3289%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::lu_solve_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="692" width="0.1792%" height="15" fill="rgb(214,202,17)" fg:x="179" fg:w="1"/><text x="32.3289%" y="702.50"></text></g><g><title>at::_ops::gt_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="708" width="0.1792%" height="15" fill="rgb(229,111,3)" fg:x="179" fg:w="1"/><text x="32.3289%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_gt_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="724" width="0.1792%" height="15" fill="rgb(229,172,15)" fg:x="179" fg:w="1"/><text x="32.3289%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_gt_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.0789%" y="740" width="0.1792%" height="15" fill="rgb(230,224,35)" fg:x="179" fg:w="1"/><text x="32.3289%" y="750.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="32.2581%" y="324" width="0.1792%" height="15" fill="rgb(251,141,6)" fg:x="180" fg:w="1"/><text x="32.5081%" y="334.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="32.2581%" y="340" width="0.1792%" height="15" fill="rgb(225,208,6)" fg:x="180" fg:w="1"/><text x="32.5081%" y="350.50"></text></g><g><title>at::TensorBase::unsafeReleaseIntrusivePtr (TensorBase.h:197) (1 samples, 0.18%)</title><rect x="32.2581%" y="356" width="0.1792%" height="15" fill="rgb(246,181,16)" fg:x="180" fg:w="1"/><text x="32.5081%" y="366.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (intrusive_ptr.h:339) (1 samples, 0.18%)</title><rect x="32.2581%" y="372" width="0.1792%" height="15" fill="rgb(227,129,36)" fg:x="180" fg:w="1"/><text x="32.5081%" y="382.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="388" width="0.1792%" height="15" fill="rgb(248,117,24)" fg:x="180" fg:w="1"/><text x="32.5081%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="404" width="0.1792%" height="15" fill="rgb(214,185,35)" fg:x="180" fg:w="1"/><text x="32.5081%" y="414.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="420" width="0.1792%" height="15" fill="rgb(236,150,34)" fg:x="180" fg:w="1"/><text x="32.5081%" y="430.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="436" width="0.1792%" height="15" fill="rgb(243,228,27)" fg:x="180" fg:w="1"/><text x="32.5081%" y="446.50"></text></g><g><title>at::_ops::mv::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="452" width="0.1792%" height="15" fill="rgb(245,77,44)" fg:x="180" fg:w="1"/><text x="32.5081%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mv(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="468" width="0.1792%" height="15" fill="rgb(235,214,42)" fg:x="180" fg:w="1"/><text x="32.5081%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="484" width="0.1792%" height="15" fill="rgb(221,74,3)" fg:x="180" fg:w="1"/><text x="32.5081%" y="494.50"></text></g><g><title>torch::autograd::flatten_tensor_args&lt;at::Tensor&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="500" width="0.1792%" height="15" fill="rgb(206,121,29)" fg:x="180" fg:w="1"/><text x="32.5081%" y="510.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::emplace_back&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.2581%" y="516" width="0.1792%" height="15" fill="rgb(249,131,53)" fg:x="180" fg:w="1"/><text x="32.5081%" y="526.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.4373%" y="756" width="0.1792%" height="15" fill="rgb(236,170,29)" fg:x="181" fg:w="1"/><text x="32.6873%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.4373%" y="772" width="0.1792%" height="15" fill="rgb(247,96,15)" fg:x="181" fg:w="1"/><text x="32.6873%" y="782.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.4373%" y="788" width="0.1792%" height="15" fill="rgb(211,210,7)" fg:x="181" fg:w="1"/><text x="32.6873%" y="798.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.4373%" y="804" width="0.1792%" height="15" fill="rgb(240,88,50)" fg:x="181" fg:w="1"/><text x="32.6873%" y="814.50"></text></g><g><title>c10::SymBool::guard_bool (libc10.so) (1 samples, 0.18%)</title><rect x="32.4373%" y="820" width="0.1792%" height="15" fill="rgb(209,229,26)" fg:x="181" fg:w="1"/><text x="32.6873%" y="830.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="32.4373%" y="708" width="0.3584%" height="15" fill="rgb(210,68,23)" fg:x="181" fg:w="2"/><text x="32.6873%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="32.4373%" y="724" width="0.3584%" height="15" fill="rgb(229,180,13)" fg:x="181" fg:w="2"/><text x="32.6873%" y="734.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="32.4373%" y="740" width="0.3584%" height="15" fill="rgb(236,53,44)" fg:x="181" fg:w="2"/><text x="32.6873%" y="750.50"></text></g><g><title>c10::InferenceMode::is_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="32.6165%" y="756" width="0.1792%" height="15" fill="rgb(244,214,29)" fg:x="182" fg:w="1"/><text x="32.8665%" y="766.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="32.6165%" y="772" width="0.1792%" height="15" fill="rgb(220,75,29)" fg:x="182" fg:w="1"/><text x="32.8665%" y="782.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="32.6165%" y="788" width="0.1792%" height="15" fill="rgb(214,183,37)" fg:x="182" fg:w="1"/><text x="32.8665%" y="798.50"></text></g><g><title>0x7f34ff179d21 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="32.6165%" y="804" width="0.1792%" height="15" fill="rgb(239,117,29)" fg:x="182" fg:w="1"/><text x="32.8665%" y="814.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="32.7957%" y="708" width="0.1792%" height="15" fill="rgb(237,171,35)" fg:x="183" fg:w="1"/><text x="33.0457%" y="718.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="32.7957%" y="724" width="0.1792%" height="15" fill="rgb(229,178,53)" fg:x="183" fg:w="1"/><text x="33.0457%" y="734.50"></text></g><g><title>0x7f34fee99084 (libc.so.6) (1 samples, 0.18%)</title><rect x="32.7957%" y="740" width="0.1792%" height="15" fill="rgb(210,102,19)" fg:x="183" fg:w="1"/><text x="33.0457%" y="750.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.9749%" y="708" width="0.1792%" height="15" fill="rgb(235,127,22)" fg:x="184" fg:w="1"/><text x="33.2249%" y="718.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.9749%" y="724" width="0.1792%" height="15" fill="rgb(244,31,31)" fg:x="184" fg:w="1"/><text x="33.2249%" y="734.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="32.9749%" y="740" width="0.1792%" height="15" fill="rgb(231,43,21)" fg:x="184" fg:w="1"/><text x="33.2249%" y="750.50"></text></g><g><title>pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="32.9749%" y="756" width="0.1792%" height="15" fill="rgb(217,131,35)" fg:x="184" fg:w="1"/><text x="33.2249%" y="766.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (5 samples, 0.90%)</title><rect x="32.4373%" y="612" width="0.8961%" height="15" fill="rgb(221,149,4)" fg:x="181" fg:w="5"/><text x="32.6873%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (5 samples, 0.90%)</title><rect x="32.4373%" y="628" width="0.8961%" height="15" fill="rgb(232,170,28)" fg:x="181" fg:w="5"/><text x="32.6873%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (5 samples, 0.90%)</title><rect x="32.4373%" y="644" width="0.8961%" height="15" fill="rgb(238,56,10)" fg:x="181" fg:w="5"/><text x="32.6873%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="32.4373%" y="660" width="0.8961%" height="15" fill="rgb(235,196,14)" fg:x="181" fg:w="5"/><text x="32.6873%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="32.4373%" y="676" width="0.8961%" height="15" fill="rgb(216,45,48)" fg:x="181" fg:w="5"/><text x="32.6873%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="32.4373%" y="692" width="0.8961%" height="15" fill="rgb(238,213,17)" fg:x="181" fg:w="5"/><text x="32.6873%" y="702.50"></text></g><g><title>torch::autograd::set_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.1541%" y="708" width="0.1792%" height="15" fill="rgb(212,13,2)" fg:x="185" fg:w="1"/><text x="33.4041%" y="718.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.1541%" y="724" width="0.1792%" height="15" fill="rgb(240,114,20)" fg:x="185" fg:w="1"/><text x="33.4041%" y="734.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (6 samples, 1.08%)</title><rect x="32.4373%" y="596" width="1.0753%" height="15" fill="rgb(228,41,40)" fg:x="181" fg:w="6"/><text x="32.6873%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.3333%" y="612" width="0.1792%" height="15" fill="rgb(244,132,35)" fg:x="186" fg:w="1"/><text x="33.5833%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.3333%" y="628" width="0.1792%" height="15" fill="rgb(253,189,4)" fg:x="186" fg:w="1"/><text x="33.5833%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.3333%" y="644" width="0.1792%" height="15" fill="rgb(224,37,19)" fg:x="186" fg:w="1"/><text x="33.5833%" y="654.50"></text></g><g><title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::~vector (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.3333%" y="660" width="0.1792%" height="15" fill="rgb(235,223,18)" fg:x="186" fg:w="1"/><text x="33.5833%" y="670.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="804" width="0.1792%" height="15" fill="rgb(235,163,25)" fg:x="187" fg:w="1"/><text x="33.7625%" y="814.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="820" width="0.1792%" height="15" fill="rgb(217,145,28)" fg:x="187" fg:w="1"/><text x="33.7625%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="836" width="0.1792%" height="15" fill="rgb(223,223,32)" fg:x="187" fg:w="1"/><text x="33.7625%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="852" width="0.1792%" height="15" fill="rgb(227,189,39)" fg:x="187" fg:w="1"/><text x="33.7625%" y="862.50"></text></g><g><title>at::native::as_strided_tensorimpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="868" width="0.1792%" height="15" fill="rgb(248,10,22)" fg:x="187" fg:w="1"/><text x="33.7625%" y="878.50"></text></g><g><title>at::detail::make_tensor&lt;c10::TensorImpl, c10::TensorImpl::ImplType, c10::Storage, c10::DispatchKeySet, caffe2::TypeMeta&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="884" width="0.1792%" height="15" fill="rgb(248,46,39)" fg:x="187" fg:w="1"/><text x="33.7625%" y="894.50"></text></g><g><title>c10::TensorImpl::TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="33.5125%" y="900" width="0.1792%" height="15" fill="rgb(248,113,48)" fg:x="187" fg:w="1"/><text x="33.7625%" y="910.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="33.5125%" y="916" width="0.1792%" height="15" fill="rgb(245,16,25)" fg:x="187" fg:w="1"/><text x="33.7625%" y="926.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="33.5125%" y="932" width="0.1792%" height="15" fill="rgb(249,152,16)" fg:x="187" fg:w="1"/><text x="33.7625%" y="942.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="692" width="0.3584%" height="15" fill="rgb(250,16,1)" fg:x="187" fg:w="2"/><text x="33.7625%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="708" width="0.3584%" height="15" fill="rgb(249,138,3)" fg:x="187" fg:w="2"/><text x="33.7625%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="724" width="0.3584%" height="15" fill="rgb(227,71,41)" fg:x="187" fg:w="2"/><text x="33.7625%" y="734.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="740" width="0.3584%" height="15" fill="rgb(209,184,23)" fg:x="187" fg:w="2"/><text x="33.7625%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="756" width="0.3584%" height="15" fill="rgb(223,215,31)" fg:x="187" fg:w="2"/><text x="33.7625%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="772" width="0.3584%" height="15" fill="rgb(210,146,28)" fg:x="187" fg:w="2"/><text x="33.7625%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="33.5125%" y="788" width="0.3584%" height="15" fill="rgb(209,183,41)" fg:x="187" fg:w="2"/><text x="33.7625%" y="798.50"></text></g><g><title>operator delete (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="33.6918%" y="804" width="0.1792%" height="15" fill="rgb(209,224,45)" fg:x="188" fg:w="1"/><text x="33.9418%" y="814.50"></text></g><g><title>at::sequence_number::get_and_increment (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="33.8710%" y="692" width="0.1792%" height="15" fill="rgb(224,209,51)" fg:x="189" fg:w="1"/><text x="34.1210%" y="702.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (4 samples, 0.72%)</title><rect x="33.5125%" y="596" width="0.7168%" height="15" fill="rgb(223,17,39)" fg:x="187" fg:w="4"/><text x="33.7625%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (4 samples, 0.72%)</title><rect x="33.5125%" y="612" width="0.7168%" height="15" fill="rgb(234,204,37)" fg:x="187" fg:w="4"/><text x="33.7625%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (4 samples, 0.72%)</title><rect x="33.5125%" y="628" width="0.7168%" height="15" fill="rgb(236,120,5)" fg:x="187" fg:w="4"/><text x="33.7625%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="33.5125%" y="644" width="0.7168%" height="15" fill="rgb(248,97,27)" fg:x="187" fg:w="4"/><text x="33.7625%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="33.5125%" y="660" width="0.7168%" height="15" fill="rgb(240,66,17)" fg:x="187" fg:w="4"/><text x="33.7625%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="33.5125%" y="676" width="0.7168%" height="15" fill="rgb(210,79,3)" fg:x="187" fg:w="4"/><text x="33.7625%" y="686.50"></text></g><g><title>c10::TensorImpl::requires_grad (libc10.so) (1 samples, 0.18%)</title><rect x="34.0502%" y="692" width="0.1792%" height="15" fill="rgb(214,176,27)" fg:x="190" fg:w="1"/><text x="34.3002%" y="702.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="34.2294%" y="596" width="0.1792%" height="15" fill="rgb(235,185,3)" fg:x="191" fg:w="1"/><text x="34.4794%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="34.2294%" y="612" width="0.1792%" height="15" fill="rgb(227,24,12)" fg:x="191" fg:w="1"/><text x="34.4794%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="34.2294%" y="628" width="0.1792%" height="15" fill="rgb(252,169,48)" fg:x="191" fg:w="1"/><text x="34.4794%" y="638.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="34.2294%" y="644" width="0.1792%" height="15" fill="rgb(212,65,1)" fg:x="191" fg:w="1"/><text x="34.4794%" y="654.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="34.2294%" y="660" width="0.1792%" height="15" fill="rgb(242,39,24)" fg:x="191" fg:w="1"/><text x="34.4794%" y="670.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="34.2294%" y="676" width="0.1792%" height="15" fill="rgb(249,32,23)" fg:x="191" fg:w="1"/><text x="34.4794%" y="686.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="34.4086%" y="596" width="0.5376%" height="15" fill="rgb(251,195,23)" fg:x="192" fg:w="3"/><text x="34.6586%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="612" width="0.3584%" height="15" fill="rgb(236,174,8)" fg:x="193" fg:w="2"/><text x="34.8378%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="628" width="0.3584%" height="15" fill="rgb(220,197,8)" fg:x="193" fg:w="2"/><text x="34.8378%" y="638.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="644" width="0.3584%" height="15" fill="rgb(240,108,37)" fg:x="193" fg:w="2"/><text x="34.8378%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="660" width="0.3584%" height="15" fill="rgb(232,176,24)" fg:x="193" fg:w="2"/><text x="34.8378%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="676" width="0.3584%" height="15" fill="rgb(243,35,29)" fg:x="193" fg:w="2"/><text x="34.8378%" y="686.50"></text></g><g><title>at::native::structured_pow_Tensor_Scalar_out::impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="692" width="0.3584%" height="15" fill="rgb(210,37,18)" fg:x="193" fg:w="2"/><text x="34.8378%" y="702.50"></text></g><g><title>at::native::AVX512::pow_tensor_scalar_kernel (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="708" width="0.3584%" height="15" fill="rgb(224,184,40)" fg:x="193" fg:w="2"/><text x="34.8378%" y="718.50"></text></g><g><title>at::native::AVX512::pow_tensor_scalar_optimized_kernel&lt;double, double, double&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="724" width="0.3584%" height="15" fill="rgb(236,39,29)" fg:x="193" fg:w="2"/><text x="34.8378%" y="734.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.5878%" y="740" width="0.3584%" height="15" fill="rgb(232,48,39)" fg:x="193" fg:w="2"/><text x="34.8378%" y="750.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="34.7670%" y="756" width="0.1792%" height="15" fill="rgb(236,34,42)" fg:x="194" fg:w="1"/><text x="35.0170%" y="766.50"></text></g><g><title>c10::SmallBuffer&lt;long, (unsigned long)8&gt;::SmallBuffer (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="34.7670%" y="772" width="0.1792%" height="15" fill="rgb(243,106,37)" fg:x="194" fg:w="1"/><text x="35.0170%" y="782.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="708" width="0.3584%" height="15" fill="rgb(218,96,6)" fg:x="195" fg:w="2"/><text x="35.1962%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="724" width="0.3584%" height="15" fill="rgb(235,130,12)" fg:x="195" fg:w="2"/><text x="35.1962%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="740" width="0.3584%" height="15" fill="rgb(231,95,0)" fg:x="195" fg:w="2"/><text x="35.1962%" y="750.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="756" width="0.3584%" height="15" fill="rgb(228,12,23)" fg:x="195" fg:w="2"/><text x="35.1962%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="772" width="0.3584%" height="15" fill="rgb(216,12,1)" fg:x="195" fg:w="2"/><text x="35.1962%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="788" width="0.3584%" height="15" fill="rgb(219,59,3)" fg:x="195" fg:w="2"/><text x="35.1962%" y="798.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="34.9462%" y="804" width="0.3584%" height="15" fill="rgb(215,208,46)" fg:x="195" fg:w="2"/><text x="35.1962%" y="814.50"></text></g><g><title>at::(anonymous namespace)::structured_sub_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="820" width="0.1792%" height="15" fill="rgb(254,224,29)" fg:x="196" fg:w="1"/><text x="35.3754%" y="830.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="836" width="0.1792%" height="15" fill="rgb(232,14,29)" fg:x="196" fg:w="1"/><text x="35.3754%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="852" width="0.1792%" height="15" fill="rgb(208,45,52)" fg:x="196" fg:w="1"/><text x="35.3754%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="868" width="0.1792%" height="15" fill="rgb(234,191,28)" fg:x="196" fg:w="1"/><text x="35.3754%" y="878.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="884" width="0.1792%" height="15" fill="rgb(244,67,43)" fg:x="196" fg:w="1"/><text x="35.3754%" y="894.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="900" width="0.1792%" height="15" fill="rgb(236,189,24)" fg:x="196" fg:w="1"/><text x="35.3754%" y="910.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="916" width="0.1792%" height="15" fill="rgb(239,214,33)" fg:x="196" fg:w="1"/><text x="35.3754%" y="926.50"></text></g><g><title>at::detail::make_tensor_base&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKeySet&amp;, caffe2::TypeMeta&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.1254%" y="932" width="0.1792%" height="15" fill="rgb(226,176,41)" fg:x="196" fg:w="1"/><text x="35.3754%" y="942.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="35.1254%" y="948" width="0.1792%" height="15" fill="rgb(248,47,8)" fg:x="196" fg:w="1"/><text x="35.3754%" y="958.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="35.1254%" y="964" width="0.1792%" height="15" fill="rgb(218,81,44)" fg:x="196" fg:w="1"/><text x="35.3754%" y="974.50"></text></g><g><title>at::pow (pow.h:64) (3 samples, 0.54%)</title><rect x="34.9462%" y="596" width="0.5376%" height="15" fill="rgb(213,98,6)" fg:x="195" fg:w="3"/><text x="35.1962%" y="606.50"></text></g><g><title>operator- (TensorOperators.h:50) (3 samples, 0.54%)</title><rect x="34.9462%" y="612" width="0.5376%" height="15" fill="rgb(222,85,22)" fg:x="195" fg:w="3"/><text x="35.1962%" y="622.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (3 samples, 0.54%)</title><rect x="34.9462%" y="628" width="0.5376%" height="15" fill="rgb(239,46,39)" fg:x="195" fg:w="3"/><text x="35.1962%" y="638.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (3 samples, 0.54%)</title><rect x="34.9462%" y="644" width="0.5376%" height="15" fill="rgb(237,12,29)" fg:x="195" fg:w="3"/><text x="35.1962%" y="654.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="34.9462%" y="660" width="0.5376%" height="15" fill="rgb(214,77,8)" fg:x="195" fg:w="3"/><text x="35.1962%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="34.9462%" y="676" width="0.5376%" height="15" fill="rgb(217,168,37)" fg:x="195" fg:w="3"/><text x="35.1962%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="34.9462%" y="692" width="0.5376%" height="15" fill="rgb(221,217,23)" fg:x="195" fg:w="3"/><text x="35.1962%" y="702.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.3047%" y="708" width="0.1792%" height="15" fill="rgb(243,229,36)" fg:x="197" fg:w="1"/><text x="35.5547%" y="718.50"></text></g><g><title>torch::autograd::impl::gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.3047%" y="724" width="0.1792%" height="15" fill="rgb(251,163,40)" fg:x="197" fg:w="1"/><text x="35.5547%" y="734.50"></text></g><g><title>torch::autograd::VariableHooks::grad_fn (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.3047%" y="740" width="0.1792%" height="15" fill="rgb(237,222,12)" fg:x="197" fg:w="1"/><text x="35.5547%" y="750.50"></text></g><g><title>pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="35.3047%" y="756" width="0.1792%" height="15" fill="rgb(248,132,6)" fg:x="197" fg:w="1"/><text x="35.5547%" y="766.50"></text></g><g><title>at::(anonymous namespace)::structured_ufunc_add_CPU_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="804" width="0.1792%" height="15" fill="rgb(227,167,50)" fg:x="198" fg:w="1"/><text x="35.7339%" y="814.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="820" width="0.1792%" height="15" fill="rgb(242,84,37)" fg:x="198" fg:w="1"/><text x="35.7339%" y="830.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="836" width="0.1792%" height="15" fill="rgb(212,4,50)" fg:x="198" fg:w="1"/><text x="35.7339%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="852" width="0.1792%" height="15" fill="rgb(230,228,32)" fg:x="198" fg:w="1"/><text x="35.7339%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="868" width="0.1792%" height="15" fill="rgb(248,217,23)" fg:x="198" fg:w="1"/><text x="35.7339%" y="878.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="884" width="0.1792%" height="15" fill="rgb(238,197,32)" fg:x="198" fg:w="1"/><text x="35.7339%" y="894.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.4839%" y="900" width="0.1792%" height="15" fill="rgb(236,106,1)" fg:x="198" fg:w="1"/><text x="35.7339%" y="910.50"></text></g><g><title>at::_ops::add_Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="692" width="0.3584%" height="15" fill="rgb(219,228,13)" fg:x="198" fg:w="2"/><text x="35.7339%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="708" width="0.3584%" height="15" fill="rgb(238,30,35)" fg:x="198" fg:w="2"/><text x="35.7339%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="724" width="0.3584%" height="15" fill="rgb(236,70,23)" fg:x="198" fg:w="2"/><text x="35.7339%" y="734.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="740" width="0.3584%" height="15" fill="rgb(249,104,48)" fg:x="198" fg:w="2"/><text x="35.7339%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="756" width="0.3584%" height="15" fill="rgb(254,117,50)" fg:x="198" fg:w="2"/><text x="35.7339%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="772" width="0.3584%" height="15" fill="rgb(223,152,4)" fg:x="198" fg:w="2"/><text x="35.7339%" y="782.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="35.4839%" y="788" width="0.3584%" height="15" fill="rgb(245,6,2)" fg:x="198" fg:w="2"/><text x="35.7339%" y="798.50"></text></g><g><title>at::original_options (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.6631%" y="804" width="0.1792%" height="15" fill="rgb(249,150,24)" fg:x="199" fg:w="1"/><text x="35.9131%" y="814.50"></text></g><g><title>operator+ (TensorOperators.h:50) (3 samples, 0.54%)</title><rect x="35.4839%" y="596" width="0.5376%" height="15" fill="rgb(228,185,42)" fg:x="198" fg:w="3"/><text x="35.7339%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (3 samples, 0.54%)</title><rect x="35.4839%" y="612" width="0.5376%" height="15" fill="rgb(226,39,33)" fg:x="198" fg:w="3"/><text x="35.7339%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (3 samples, 0.54%)</title><rect x="35.4839%" y="628" width="0.5376%" height="15" fill="rgb(221,166,19)" fg:x="198" fg:w="3"/><text x="35.7339%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="35.4839%" y="644" width="0.5376%" height="15" fill="rgb(209,109,2)" fg:x="198" fg:w="3"/><text x="35.7339%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="35.4839%" y="660" width="0.5376%" height="15" fill="rgb(252,216,26)" fg:x="198" fg:w="3"/><text x="35.7339%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="35.4839%" y="676" width="0.5376%" height="15" fill="rgb(227,173,36)" fg:x="198" fg:w="3"/><text x="35.7339%" y="686.50"></text></g><g><title>torch::autograd::flatten_tensor_args&lt;at::Tensor&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="35.8423%" y="692" width="0.1792%" height="15" fill="rgb(209,90,7)" fg:x="200" fg:w="1"/><text x="36.0923%" y="702.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::reserve (libtorch_python.so) (1 samples, 0.18%)</title><rect x="35.8423%" y="708" width="0.1792%" height="15" fill="rgb(250,194,11)" fg:x="200" fg:w="1"/><text x="36.0923%" y="718.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="35.8423%" y="724" width="0.1792%" height="15" fill="rgb(220,72,50)" fg:x="200" fg:w="1"/><text x="36.0923%" y="734.50"></text></g><g><title>evG (TensorBody.h:92) (21 samples, 3.76%)</title><rect x="32.4373%" y="340" width="3.7634%" height="15" fill="rgb(222,106,48)" fg:x="181" fg:w="21"/><text x="32.6873%" y="350.50">evG ..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (21 samples, 3.76%)</title><rect x="32.4373%" y="356" width="3.7634%" height="15" fill="rgb(216,220,45)" fg:x="181" fg:w="21"/><text x="32.6873%" y="366.50">at::..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (21 samples, 3.76%)</title><rect x="32.4373%" y="372" width="3.7634%" height="15" fill="rgb(234,112,18)" fg:x="181" fg:w="21"/><text x="32.6873%" y="382.50">at::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (21 samples, 3.76%)</title><rect x="32.4373%" y="388" width="3.7634%" height="15" fill="rgb(206,179,9)" fg:x="181" fg:w="21"/><text x="32.6873%" y="398.50">c10:..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (21 samples, 3.76%)</title><rect x="32.4373%" y="404" width="3.7634%" height="15" fill="rgb(215,115,40)" fg:x="181" fg:w="21"/><text x="32.6873%" y="414.50">c10:..</text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (21 samples, 3.76%)</title><rect x="32.4373%" y="420" width="3.7634%" height="15" fill="rgb(222,69,34)" fg:x="181" fg:w="21"/><text x="32.6873%" y="430.50">std:..</text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (21 samples, 3.76%)</title><rect x="32.4373%" y="436" width="3.7634%" height="15" fill="rgb(209,161,10)" fg:x="181" fg:w="21"/><text x="32.6873%" y="446.50">std:..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (21 samples, 3.76%)</title><rect x="32.4373%" y="452" width="3.7634%" height="15" fill="rgb(217,6,38)" fg:x="181" fg:w="21"/><text x="32.6873%" y="462.50">std:..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (21 samples, 3.76%)</title><rect x="32.4373%" y="468" width="3.7634%" height="15" fill="rgb(229,229,48)" fg:x="181" fg:w="21"/><text x="32.6873%" y="478.50">std:..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (21 samples, 3.76%)</title><rect x="32.4373%" y="484" width="3.7634%" height="15" fill="rgb(225,21,28)" fg:x="181" fg:w="21"/><text x="32.6873%" y="494.50">std:..</text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (21 samples, 3.76%)</title><rect x="32.4373%" y="500" width="3.7634%" height="15" fill="rgb(206,33,13)" fg:x="181" fg:w="21"/><text x="32.6873%" y="510.50">std:..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (21 samples, 3.76%)</title><rect x="32.4373%" y="516" width="3.7634%" height="15" fill="rgb(242,178,17)" fg:x="181" fg:w="21"/><text x="32.6873%" y="526.50">std:..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (21 samples, 3.76%)</title><rect x="32.4373%" y="532" width="3.7634%" height="15" fill="rgb(220,162,5)" fg:x="181" fg:w="21"/><text x="32.6873%" y="542.50">at::..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (21 samples, 3.76%)</title><rect x="32.4373%" y="548" width="3.7634%" height="15" fill="rgb(210,33,43)" fg:x="181" fg:w="21"/><text x="32.6873%" y="558.50">at::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (21 samples, 3.76%)</title><rect x="32.4373%" y="564" width="3.7634%" height="15" fill="rgb(216,116,54)" fg:x="181" fg:w="21"/><text x="32.6873%" y="574.50">c10:..</text></g><g><title>my_length_constraint (main.cpp:268) (21 samples, 3.76%)</title><rect x="32.4373%" y="580" width="3.7634%" height="15" fill="rgb(249,92,24)" fg:x="181" fg:w="21"/><text x="32.6873%" y="590.50">my_l..</text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="36.0215%" y="596" width="0.1792%" height="15" fill="rgb(231,189,14)" fg:x="201" fg:w="1"/><text x="36.2715%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="36.0215%" y="612" width="0.1792%" height="15" fill="rgb(230,8,41)" fg:x="201" fg:w="1"/><text x="36.2715%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="36.0215%" y="628" width="0.1792%" height="15" fill="rgb(249,7,27)" fg:x="201" fg:w="1"/><text x="36.2715%" y="638.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (1 samples, 0.18%)</title><rect x="36.2007%" y="356" width="0.1792%" height="15" fill="rgb(232,86,5)" fg:x="202" fg:w="1"/><text x="36.4507%" y="366.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (1 samples, 0.18%)</title><rect x="36.2007%" y="372" width="0.1792%" height="15" fill="rgb(224,175,18)" fg:x="202" fg:w="1"/><text x="36.4507%" y="382.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (1 samples, 0.18%)</title><rect x="36.2007%" y="388" width="0.1792%" height="15" fill="rgb(220,129,12)" fg:x="202" fg:w="1"/><text x="36.4507%" y="398.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (1 samples, 0.18%)</title><rect x="36.2007%" y="404" width="0.1792%" height="15" fill="rgb(210,19,36)" fg:x="202" fg:w="1"/><text x="36.4507%" y="414.50"></text></g><g><title>c10::SymInt::is_heap_allocated (SymInt.h:161) (1 samples, 0.18%)</title><rect x="36.2007%" y="420" width="0.1792%" height="15" fill="rgb(219,96,14)" fg:x="202" fg:w="1"/><text x="36.4507%" y="430.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.2007%" y="436" width="0.1792%" height="15" fill="rgb(249,106,1)" fg:x="202" fg:w="1"/><text x="36.4507%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.2007%" y="452" width="0.1792%" height="15" fill="rgb(249,155,20)" fg:x="202" fg:w="1"/><text x="36.4507%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.2007%" y="468" width="0.1792%" height="15" fill="rgb(244,168,9)" fg:x="202" fg:w="1"/><text x="36.4507%" y="478.50"></text></g><g><title>c10::SymInt::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.2007%" y="484" width="0.1792%" height="15" fill="rgb(216,23,50)" fg:x="202" fg:w="1"/><text x="36.4507%" y="494.50"></text></g><g><title>at::_ops::copy_::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.3799%" y="452" width="0.1792%" height="15" fill="rgb(224,219,20)" fg:x="203" fg:w="1"/><text x="36.6299%" y="462.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.3799%" y="468" width="0.1792%" height="15" fill="rgb(222,156,15)" fg:x="203" fg:w="1"/><text x="36.6299%" y="478.50"></text></g><g><title>0x7f34ab6c0920 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.3799%" y="484" width="0.1792%" height="15" fill="rgb(231,97,17)" fg:x="203" fg:w="1"/><text x="36.6299%" y="494.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="36.3799%" y="356" width="0.3584%" height="15" fill="rgb(218,70,48)" fg:x="203" fg:w="2"/><text x="36.6299%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="36.3799%" y="372" width="0.3584%" height="15" fill="rgb(212,196,52)" fg:x="203" fg:w="2"/><text x="36.6299%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="36.3799%" y="388" width="0.3584%" height="15" fill="rgb(243,203,18)" fg:x="203" fg:w="2"/><text x="36.6299%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (2 samples, 0.36%)</title><rect x="36.3799%" y="404" width="0.3584%" height="15" fill="rgb(252,125,41)" fg:x="203" fg:w="2"/><text x="36.6299%" y="414.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.3799%" y="420" width="0.3584%" height="15" fill="rgb(223,180,33)" fg:x="203" fg:w="2"/><text x="36.6299%" y="430.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.3799%" y="436" width="0.3584%" height="15" fill="rgb(254,159,46)" fg:x="203" fg:w="2"/><text x="36.6299%" y="446.50"></text></g><g><title>torch::autograd::impl::rebase_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.5591%" y="452" width="0.1792%" height="15" fill="rgb(254,38,10)" fg:x="204" fg:w="1"/><text x="36.8091%" y="462.50"></text></g><g><title>torch::autograd::CopySlices::CopySlices (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.5591%" y="468" width="0.1792%" height="15" fill="rgb(208,217,32)" fg:x="204" fg:w="1"/><text x="36.8091%" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="36.5591%" y="484" width="0.1792%" height="15" fill="rgb(221,120,13)" fg:x="204" fg:w="1"/><text x="36.8091%" y="494.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="36.5591%" y="500" width="0.1792%" height="15" fill="rgb(246,54,52)" fg:x="204" fg:w="1"/><text x="36.8091%" y="510.50"></text></g><g><title>at::_ops::squeeze::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.7384%" y="452" width="0.1792%" height="15" fill="rgb(242,34,25)" fg:x="205" fg:w="1"/><text x="36.9884%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__squeeze(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.7384%" y="468" width="0.1792%" height="15" fill="rgb(247,209,9)" fg:x="205" fg:w="1"/><text x="36.9884%" y="478.50"></text></g><g><title>at::native::squeeze (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.7384%" y="484" width="0.1792%" height="15" fill="rgb(228,71,26)" fg:x="205" fg:w="1"/><text x="36.9884%" y="494.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.7384%" y="500" width="0.1792%" height="15" fill="rgb(222,145,49)" fg:x="205" fg:w="1"/><text x="36.9884%" y="510.50"></text></g><g><title>at::Tensor::t (TensorBody.h:3678) (26 samples, 4.66%)</title><rect x="32.4373%" y="324" width="4.6595%" height="15" fill="rgb(218,121,17)" fg:x="181" fg:w="26"/><text x="32.6873%" y="334.50">at::T..</text></g><g><title>evG (main.cpp:68) (5 samples, 0.90%)</title><rect x="36.2007%" y="340" width="0.8961%" height="15" fill="rgb(244,50,7)" fg:x="202" fg:w="5"/><text x="36.4507%" y="350.50"></text></g><g><title>at::_ops::squeeze::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="356" width="0.3584%" height="15" fill="rgb(246,229,37)" fg:x="205" fg:w="2"/><text x="36.9884%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::squeeze(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="372" width="0.3584%" height="15" fill="rgb(225,18,5)" fg:x="205" fg:w="2"/><text x="36.9884%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::squeeze (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="388" width="0.3584%" height="15" fill="rgb(213,204,8)" fg:x="205" fg:w="2"/><text x="36.9884%" y="398.50"></text></g><g><title>at::_ops::squeeze::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="404" width="0.3584%" height="15" fill="rgb(238,103,6)" fg:x="205" fg:w="2"/><text x="36.9884%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::squeeze(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="420" width="0.3584%" height="15" fill="rgb(222,25,35)" fg:x="205" fg:w="2"/><text x="36.9884%" y="430.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::squeeze (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="36.7384%" y="436" width="0.3584%" height="15" fill="rgb(213,203,35)" fg:x="205" fg:w="2"/><text x="36.9884%" y="446.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="36.9176%" y="452" width="0.1792%" height="15" fill="rgb(221,79,53)" fg:x="206" fg:w="1"/><text x="37.1676%" y="462.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.0968%" y="324" width="0.1792%" height="15" fill="rgb(243,200,35)" fg:x="207" fg:w="1"/><text x="37.3468%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.0968%" y="340" width="0.1792%" height="15" fill="rgb(248,60,25)" fg:x="207" fg:w="1"/><text x="37.3468%" y="350.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.0968%" y="356" width="0.1792%" height="15" fill="rgb(227,53,46)" fg:x="207" fg:w="1"/><text x="37.3468%" y="366.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.0968%" y="372" width="0.1792%" height="15" fill="rgb(216,120,32)" fg:x="207" fg:w="1"/><text x="37.3468%" y="382.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.0968%" y="388" width="0.1792%" height="15" fill="rgb(220,134,1)" fg:x="207" fg:w="1"/><text x="37.3468%" y="398.50"></text></g><g><title>at::inverse (inverse.h:27) (2 samples, 0.36%)</title><rect x="37.2760%" y="324" width="0.3584%" height="15" fill="rgb(237,168,5)" fg:x="208" fg:w="2"/><text x="37.5260%" y="334.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="340" width="0.3584%" height="15" fill="rgb(231,100,33)" fg:x="208" fg:w="2"/><text x="37.5260%" y="350.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="356" width="0.3584%" height="15" fill="rgb(236,177,47)" fg:x="208" fg:w="2"/><text x="37.5260%" y="366.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="372" width="0.3584%" height="15" fill="rgb(235,7,49)" fg:x="208" fg:w="2"/><text x="37.5260%" y="382.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="388" width="0.3584%" height="15" fill="rgb(232,119,22)" fg:x="208" fg:w="2"/><text x="37.5260%" y="398.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="404" width="0.3584%" height="15" fill="rgb(254,73,53)" fg:x="208" fg:w="2"/><text x="37.5260%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mm(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="420" width="0.3584%" height="15" fill="rgb(251,35,20)" fg:x="208" fg:w="2"/><text x="37.5260%" y="430.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mm (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="436" width="0.3584%" height="15" fill="rgb(241,119,20)" fg:x="208" fg:w="2"/><text x="37.5260%" y="446.50"></text></g><g><title>at::_ops::mm::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="452" width="0.3584%" height="15" fill="rgb(207,102,14)" fg:x="208" fg:w="2"/><text x="37.5260%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="468" width="0.3584%" height="15" fill="rgb(248,201,50)" fg:x="208" fg:w="2"/><text x="37.5260%" y="478.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mm (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="484" width="0.3584%" height="15" fill="rgb(222,185,44)" fg:x="208" fg:w="2"/><text x="37.5260%" y="494.50"></text></g><g><title>at::meta::structured_mm::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="500" width="0.3584%" height="15" fill="rgb(218,107,18)" fg:x="208" fg:w="2"/><text x="37.5260%" y="510.50"></text></g><g><title>at::(anonymous namespace)::structured_mm_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="516" width="0.3584%" height="15" fill="rgb(237,177,39)" fg:x="208" fg:w="2"/><text x="37.5260%" y="526.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="532" width="0.3584%" height="15" fill="rgb(246,69,6)" fg:x="208" fg:w="2"/><text x="37.5260%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="548" width="0.3584%" height="15" fill="rgb(234,208,37)" fg:x="208" fg:w="2"/><text x="37.5260%" y="558.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="564" width="0.3584%" height="15" fill="rgb(225,4,6)" fg:x="208" fg:w="2"/><text x="37.5260%" y="574.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="580" width="0.3584%" height="15" fill="rgb(233,45,0)" fg:x="208" fg:w="2"/><text x="37.5260%" y="590.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="596" width="0.3584%" height="15" fill="rgb(226,136,5)" fg:x="208" fg:w="2"/><text x="37.5260%" y="606.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="612" width="0.3584%" height="15" fill="rgb(211,91,47)" fg:x="208" fg:w="2"/><text x="37.5260%" y="622.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="628" width="0.3584%" height="15" fill="rgb(242,88,51)" fg:x="208" fg:w="2"/><text x="37.5260%" y="638.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (2 samples, 0.36%)</title><rect x="37.2760%" y="644" width="0.3584%" height="15" fill="rgb(230,91,28)" fg:x="208" fg:w="2"/><text x="37.5260%" y="654.50"></text></g><g><title>posix_memalign (libc.so.6) (2 samples, 0.36%)</title><rect x="37.2760%" y="660" width="0.3584%" height="15" fill="rgb(254,186,29)" fg:x="208" fg:w="2"/><text x="37.5260%" y="670.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="37.4552%" y="676" width="0.1792%" height="15" fill="rgb(238,6,4)" fg:x="209" fg:w="1"/><text x="37.7052%" y="686.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (1 samples, 0.18%)</title><rect x="37.4552%" y="692" width="0.1792%" height="15" fill="rgb(221,151,16)" fg:x="209" fg:w="1"/><text x="37.7052%" y="702.50"></text></g><g><title>0x7f34fee9691b (libc.so.6) (1 samples, 0.18%)</title><rect x="37.4552%" y="708" width="0.1792%" height="15" fill="rgb(251,143,52)" fg:x="209" fg:w="1"/><text x="37.7052%" y="718.50"></text></g><g><title>0x7f34fee96749 (libc.so.6) (1 samples, 0.18%)</title><rect x="37.4552%" y="724" width="0.1792%" height="15" fill="rgb(206,90,15)" fg:x="209" fg:w="1"/><text x="37.7052%" y="734.50"></text></g><g><title>at::_ops::linalg_lu_factor_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="660" width="0.1792%" height="15" fill="rgb(218,35,8)" fg:x="210" fg:w="1"/><text x="37.8844%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out(at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="676" width="0.1792%" height="15" fill="rgb(239,215,6)" fg:x="210" fg:w="1"/><text x="37.8844%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="692" width="0.1792%" height="15" fill="rgb(245,116,39)" fg:x="210" fg:w="1"/><text x="37.8844%" y="702.50"></text></g><g><title>at::native::structured_linalg_lu_factor_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="708" width="0.1792%" height="15" fill="rgb(242,65,28)" fg:x="210" fg:w="1"/><text x="37.8844%" y="718.50"></text></g><g><title>at::native::(anonymous namespace)::lu_factor_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="724" width="0.1792%" height="15" fill="rgb(252,132,53)" fg:x="210" fg:w="1"/><text x="37.8844%" y="734.50"></text></g><g><title>at::native::lapackLu&lt;double&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="740" width="0.1792%" height="15" fill="rgb(224,159,50)" fg:x="210" fg:w="1"/><text x="37.8844%" y="750.50"></text></g><g><title>mkl_lapack__dgetrf_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="756" width="0.1792%" height="15" fill="rgb(224,93,4)" fg:x="210" fg:w="1"/><text x="37.8844%" y="766.50"></text></g><g><title>mkl_lapack_dgetrf (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="772" width="0.1792%" height="15" fill="rgb(208,81,34)" fg:x="210" fg:w="1"/><text x="37.8844%" y="782.50"></text></g><g><title>mkl_lapack_xdgetrf_local (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="788" width="0.1792%" height="15" fill="rgb(233,92,54)" fg:x="210" fg:w="1"/><text x="37.8844%" y="798.50"></text></g><g><title>mkl_lapack_dgetf2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="804" width="0.1792%" height="15" fill="rgb(237,21,14)" fg:x="210" fg:w="1"/><text x="37.8844%" y="814.50"></text></g><g><title>mkl_blas_avx512_xdgemv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.6344%" y="820" width="0.1792%" height="15" fill="rgb(249,128,51)" fg:x="210" fg:w="1"/><text x="37.8844%" y="830.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="340" width="0.3584%" height="15" fill="rgb(223,129,24)" fg:x="210" fg:w="2"/><text x="37.8844%" y="350.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="356" width="0.3584%" height="15" fill="rgb(231,168,25)" fg:x="210" fg:w="2"/><text x="37.8844%" y="366.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="372" width="0.3584%" height="15" fill="rgb(224,39,20)" fg:x="210" fg:w="2"/><text x="37.8844%" y="382.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="388" width="0.3584%" height="15" fill="rgb(225,152,53)" fg:x="210" fg:w="2"/><text x="37.8844%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="404" width="0.3584%" height="15" fill="rgb(252,17,24)" fg:x="210" fg:w="2"/><text x="37.8844%" y="414.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="420" width="0.3584%" height="15" fill="rgb(250,114,30)" fg:x="210" fg:w="2"/><text x="37.8844%" y="430.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="436" width="0.3584%" height="15" fill="rgb(229,5,4)" fg:x="210" fg:w="2"/><text x="37.8844%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="452" width="0.3584%" height="15" fill="rgb(225,176,49)" fg:x="210" fg:w="2"/><text x="37.8844%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="468" width="0.3584%" height="15" fill="rgb(224,221,49)" fg:x="210" fg:w="2"/><text x="37.8844%" y="478.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="484" width="0.3584%" height="15" fill="rgb(253,169,27)" fg:x="210" fg:w="2"/><text x="37.8844%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="500" width="0.3584%" height="15" fill="rgb(211,206,16)" fg:x="210" fg:w="2"/><text x="37.8844%" y="510.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="516" width="0.3584%" height="15" fill="rgb(244,87,35)" fg:x="210" fg:w="2"/><text x="37.8844%" y="526.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="532" width="0.3584%" height="15" fill="rgb(246,28,10)" fg:x="210" fg:w="2"/><text x="37.8844%" y="542.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="548" width="0.3584%" height="15" fill="rgb(229,12,44)" fg:x="210" fg:w="2"/><text x="37.8844%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="564" width="0.3584%" height="15" fill="rgb(210,145,37)" fg:x="210" fg:w="2"/><text x="37.8844%" y="574.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="580" width="0.3584%" height="15" fill="rgb(227,112,52)" fg:x="210" fg:w="2"/><text x="37.8844%" y="590.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="596" width="0.3584%" height="15" fill="rgb(238,155,34)" fg:x="210" fg:w="2"/><text x="37.8844%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="612" width="0.3584%" height="15" fill="rgb(239,226,36)" fg:x="210" fg:w="2"/><text x="37.8844%" y="622.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="628" width="0.3584%" height="15" fill="rgb(230,16,23)" fg:x="210" fg:w="2"/><text x="37.8844%" y="638.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.6344%" y="644" width="0.3584%" height="15" fill="rgb(236,171,36)" fg:x="210" fg:w="2"/><text x="37.8844%" y="654.50"></text></g><g><title>at::_ops::linalg_lu_solve_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="660" width="0.1792%" height="15" fill="rgb(221,22,14)" fg:x="211" fg:w="1"/><text x="38.0636%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_solve_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="676" width="0.1792%" height="15" fill="rgb(242,43,11)" fg:x="211" fg:w="1"/><text x="38.0636%" y="686.50"></text></g><g><title>at::native::structured_linalg_lu_solve_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="692" width="0.1792%" height="15" fill="rgb(232,69,23)" fg:x="211" fg:w="1"/><text x="38.0636%" y="702.50"></text></g><g><title>at::native::(anonymous namespace)::lu_solve_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="708" width="0.1792%" height="15" fill="rgb(216,180,54)" fg:x="211" fg:w="1"/><text x="38.0636%" y="718.50"></text></g><g><title>at::_ops::all::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="724" width="0.1792%" height="15" fill="rgb(216,5,24)" fg:x="211" fg:w="1"/><text x="38.0636%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_all(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="740" width="0.1792%" height="15" fill="rgb(225,89,9)" fg:x="211" fg:w="1"/><text x="38.0636%" y="750.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_all (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="756" width="0.1792%" height="15" fill="rgb(243,75,33)" fg:x="211" fg:w="1"/><text x="38.0636%" y="766.50"></text></g><g><title>at::native::allany_impl&lt;1, at::native::and_stub&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="772" width="0.1792%" height="15" fill="rgb(247,141,45)" fg:x="211" fg:w="1"/><text x="38.0636%" y="782.50"></text></g><g><title>at::meta::make_reduction_from_out_ty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="788" width="0.1792%" height="15" fill="rgb(232,177,36)" fg:x="211" fg:w="1"/><text x="38.0636%" y="798.50"></text></g><g><title>at::meta::make_reduction (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="804" width="0.1792%" height="15" fill="rgb(219,125,36)" fg:x="211" fg:w="1"/><text x="38.0636%" y="814.50"></text></g><g><title>at::TensorIterator::reduce_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="820" width="0.1792%" height="15" fill="rgb(227,94,9)" fg:x="211" fg:w="1"/><text x="38.0636%" y="830.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="836" width="0.1792%" height="15" fill="rgb(240,34,52)" fg:x="211" fg:w="1"/><text x="38.0636%" y="846.50"></text></g><g><title>at::TensorIteratorBase::compute_shape (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.8136%" y="852" width="0.1792%" height="15" fill="rgb(216,45,12)" fg:x="211" fg:w="1"/><text x="38.0636%" y="862.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="820" width="0.1792%" height="15" fill="rgb(246,21,19)" fg:x="212" fg:w="1"/><text x="38.2428%" y="830.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="836" width="0.1792%" height="15" fill="rgb(213,98,42)" fg:x="212" fg:w="1"/><text x="38.2428%" y="846.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="852" width="0.1792%" height="15" fill="rgb(250,136,47)" fg:x="212" fg:w="1"/><text x="38.2428%" y="862.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="868" width="0.1792%" height="15" fill="rgb(251,124,27)" fg:x="212" fg:w="1"/><text x="38.2428%" y="878.50"></text></g><g><title>at::native::as_strided_tensorimpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="884" width="0.1792%" height="15" fill="rgb(229,180,14)" fg:x="212" fg:w="1"/><text x="38.2428%" y="894.50"></text></g><g><title>at::detail::make_tensor&lt;c10::TensorImpl, c10::TensorImpl::ImplType, c10::Storage, c10::DispatchKeySet, caffe2::TypeMeta&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="900" width="0.1792%" height="15" fill="rgb(245,216,25)" fg:x="212" fg:w="1"/><text x="38.2428%" y="910.50"></text></g><g><title>c10::TensorImpl::TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="37.9928%" y="916" width="0.1792%" height="15" fill="rgb(251,43,5)" fg:x="212" fg:w="1"/><text x="38.2428%" y="926.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="37.9928%" y="932" width="0.1792%" height="15" fill="rgb(250,128,24)" fg:x="212" fg:w="1"/><text x="38.2428%" y="942.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="37.9928%" y="948" width="0.1792%" height="15" fill="rgb(217,117,27)" fg:x="212" fg:w="1"/><text x="38.2428%" y="958.50"></text></g><g><title>0x7f34fee98cdf (libc.so.6) (1 samples, 0.18%)</title><rect x="37.9928%" y="964" width="0.1792%" height="15" fill="rgb(245,147,4)" fg:x="212" fg:w="1"/><text x="38.2428%" y="974.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.9928%" y="756" width="0.3584%" height="15" fill="rgb(242,201,35)" fg:x="212" fg:w="2"/><text x="38.2428%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.9928%" y="772" width="0.3584%" height="15" fill="rgb(218,181,1)" fg:x="212" fg:w="2"/><text x="38.2428%" y="782.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.9928%" y="788" width="0.3584%" height="15" fill="rgb(222,6,29)" fg:x="212" fg:w="2"/><text x="38.2428%" y="798.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="37.9928%" y="804" width="0.3584%" height="15" fill="rgb(208,186,3)" fg:x="212" fg:w="2"/><text x="38.2428%" y="814.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="38.1720%" y="820" width="0.1792%" height="15" fill="rgb(216,36,26)" fg:x="213" fg:w="1"/><text x="38.4220%" y="830.50"></text></g><g><title>0x7f34fee976b5 (libc.so.6) (1 samples, 0.18%)</title><rect x="38.1720%" y="836" width="0.1792%" height="15" fill="rgb(248,201,23)" fg:x="213" fg:w="1"/><text x="38.4220%" y="846.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="38.3513%" y="756" width="0.1792%" height="15" fill="rgb(251,170,31)" fg:x="214" fg:w="1"/><text x="38.6013%" y="766.50"></text></g><g><title>0x7f34f2547c50 (libc10.so) (1 samples, 0.18%)</title><rect x="38.3513%" y="772" width="0.1792%" height="15" fill="rgb(207,110,25)" fg:x="214" fg:w="1"/><text x="38.6013%" y="782.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (4 samples, 0.72%)</title><rect x="37.9928%" y="612" width="0.7168%" height="15" fill="rgb(250,54,15)" fg:x="212" fg:w="4"/><text x="38.2428%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (4 samples, 0.72%)</title><rect x="37.9928%" y="628" width="0.7168%" height="15" fill="rgb(227,68,33)" fg:x="212" fg:w="4"/><text x="38.2428%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (4 samples, 0.72%)</title><rect x="37.9928%" y="644" width="0.7168%" height="15" fill="rgb(238,34,41)" fg:x="212" fg:w="4"/><text x="38.2428%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="660" width="0.7168%" height="15" fill="rgb(220,11,15)" fg:x="212" fg:w="4"/><text x="38.2428%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="676" width="0.7168%" height="15" fill="rgb(246,111,35)" fg:x="212" fg:w="4"/><text x="38.2428%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="692" width="0.7168%" height="15" fill="rgb(209,88,53)" fg:x="212" fg:w="4"/><text x="38.2428%" y="702.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="708" width="0.7168%" height="15" fill="rgb(231,185,47)" fg:x="212" fg:w="4"/><text x="38.2428%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="724" width="0.7168%" height="15" fill="rgb(233,154,1)" fg:x="212" fg:w="4"/><text x="38.2428%" y="734.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="37.9928%" y="740" width="0.7168%" height="15" fill="rgb(225,15,46)" fg:x="212" fg:w="4"/><text x="38.2428%" y="750.50"></text></g><g><title>torch::autograd::as_view (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.5305%" y="756" width="0.1792%" height="15" fill="rgb(211,135,41)" fg:x="215" fg:w="1"/><text x="38.7805%" y="766.50"></text></g><g><title>torch::autograd::make_variable_differentiable_view (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.5305%" y="772" width="0.1792%" height="15" fill="rgb(208,54,0)" fg:x="215" fg:w="1"/><text x="38.7805%" y="782.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="660" width="0.1792%" height="15" fill="rgb(244,136,14)" fg:x="216" fg:w="1"/><text x="38.9597%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="676" width="0.1792%" height="15" fill="rgb(241,56,14)" fg:x="216" fg:w="1"/><text x="38.9597%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="692" width="0.1792%" height="15" fill="rgb(205,80,24)" fg:x="216" fg:w="1"/><text x="38.9597%" y="702.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="708" width="0.1792%" height="15" fill="rgb(220,57,4)" fg:x="216" fg:w="1"/><text x="38.9597%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="724" width="0.1792%" height="15" fill="rgb(226,193,50)" fg:x="216" fg:w="1"/><text x="38.9597%" y="734.50"></text></g><g><title>0x7f34ab67c160 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="38.7097%" y="740" width="0.1792%" height="15" fill="rgb(231,168,22)" fg:x="216" fg:w="1"/><text x="38.9597%" y="750.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (6 samples, 1.08%)</title><rect x="37.9928%" y="596" width="1.0753%" height="15" fill="rgb(254,215,14)" fg:x="212" fg:w="6"/><text x="38.2428%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="38.7097%" y="612" width="0.3584%" height="15" fill="rgb(211,115,16)" fg:x="216" fg:w="2"/><text x="38.9597%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="38.7097%" y="628" width="0.3584%" height="15" fill="rgb(236,210,16)" fg:x="216" fg:w="2"/><text x="38.9597%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="38.7097%" y="644" width="0.3584%" height="15" fill="rgb(221,94,12)" fg:x="216" fg:w="2"/><text x="38.9597%" y="654.50"></text></g><g><title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (libc10.so) (1 samples, 0.18%)</title><rect x="38.8889%" y="660" width="0.1792%" height="15" fill="rgb(235,218,49)" fg:x="217" fg:w="1"/><text x="39.1389%" y="670.50"></text></g><g><title>0x7f34f2547c50 (libc10.so) (1 samples, 0.18%)</title><rect x="38.8889%" y="676" width="0.1792%" height="15" fill="rgb(217,114,14)" fg:x="217" fg:w="1"/><text x="39.1389%" y="686.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::SymNodeImpl, c10::detail::intrusive_target_default_null_type&lt;c10::SymNodeImpl&gt; &gt;::reset_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="39.0681%" y="804" width="0.1792%" height="15" fill="rgb(216,145,22)" fg:x="218" fg:w="1"/><text x="39.3181%" y="814.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.0681%" y="740" width="0.3584%" height="15" fill="rgb(217,112,39)" fg:x="218" fg:w="2"/><text x="39.3181%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.0681%" y="756" width="0.3584%" height="15" fill="rgb(225,85,32)" fg:x="218" fg:w="2"/><text x="39.3181%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.0681%" y="772" width="0.3584%" height="15" fill="rgb(245,209,47)" fg:x="218" fg:w="2"/><text x="39.3181%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.0681%" y="788" width="0.3584%" height="15" fill="rgb(218,220,15)" fg:x="218" fg:w="2"/><text x="39.3181%" y="798.50"></text></g><g><title>std::vector&lt;c10::SymInt, std::allocator&lt;c10::SymInt&gt; &gt;::_M_erase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="39.2473%" y="804" width="0.1792%" height="15" fill="rgb(222,202,31)" fg:x="219" fg:w="1"/><text x="39.4973%" y="814.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (3 samples, 0.54%)</title><rect x="39.0681%" y="596" width="0.5376%" height="15" fill="rgb(243,203,4)" fg:x="218" fg:w="3"/><text x="39.3181%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (3 samples, 0.54%)</title><rect x="39.0681%" y="612" width="0.5376%" height="15" fill="rgb(237,92,17)" fg:x="218" fg:w="3"/><text x="39.3181%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (3 samples, 0.54%)</title><rect x="39.0681%" y="628" width="0.5376%" height="15" fill="rgb(231,119,7)" fg:x="218" fg:w="3"/><text x="39.3181%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="644" width="0.5376%" height="15" fill="rgb(237,82,41)" fg:x="218" fg:w="3"/><text x="39.3181%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="660" width="0.5376%" height="15" fill="rgb(226,81,48)" fg:x="218" fg:w="3"/><text x="39.3181%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="676" width="0.5376%" height="15" fill="rgb(234,70,51)" fg:x="218" fg:w="3"/><text x="39.3181%" y="686.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="692" width="0.5376%" height="15" fill="rgb(251,86,4)" fg:x="218" fg:w="3"/><text x="39.3181%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="708" width="0.5376%" height="15" fill="rgb(244,144,28)" fg:x="218" fg:w="3"/><text x="39.3181%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.0681%" y="724" width="0.5376%" height="15" fill="rgb(232,161,39)" fg:x="218" fg:w="3"/><text x="39.3181%" y="734.50"></text></g><g><title>c10::InferenceMode::is_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="39.4265%" y="740" width="0.1792%" height="15" fill="rgb(247,34,51)" fg:x="220" fg:w="1"/><text x="39.6765%" y="750.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="39.4265%" y="756" width="0.1792%" height="15" fill="rgb(225,132,2)" fg:x="220" fg:w="1"/><text x="39.6765%" y="766.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="39.6057%" y="596" width="0.1792%" height="15" fill="rgb(209,159,44)" fg:x="221" fg:w="1"/><text x="39.8557%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="39.6057%" y="612" width="0.1792%" height="15" fill="rgb(251,214,1)" fg:x="221" fg:w="1"/><text x="39.8557%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="39.6057%" y="628" width="0.1792%" height="15" fill="rgb(247,84,47)" fg:x="221" fg:w="1"/><text x="39.8557%" y="638.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="39.6057%" y="644" width="0.1792%" height="15" fill="rgb(240,111,43)" fg:x="221" fg:w="1"/><text x="39.8557%" y="654.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="39.6057%" y="660" width="0.1792%" height="15" fill="rgb(215,214,35)" fg:x="221" fg:w="1"/><text x="39.8557%" y="670.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="596" width="0.5376%" height="15" fill="rgb(248,207,23)" fg:x="222" fg:w="3"/><text x="40.0349%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="612" width="0.5376%" height="15" fill="rgb(214,186,4)" fg:x="222" fg:w="3"/><text x="40.0349%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="628" width="0.5376%" height="15" fill="rgb(220,133,22)" fg:x="222" fg:w="3"/><text x="40.0349%" y="638.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="644" width="0.5376%" height="15" fill="rgb(239,134,19)" fg:x="222" fg:w="3"/><text x="40.0349%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="660" width="0.5376%" height="15" fill="rgb(250,140,9)" fg:x="222" fg:w="3"/><text x="40.0349%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="676" width="0.5376%" height="15" fill="rgb(225,59,14)" fg:x="222" fg:w="3"/><text x="40.0349%" y="686.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="692" width="0.5376%" height="15" fill="rgb(214,152,51)" fg:x="222" fg:w="3"/><text x="40.0349%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="39.7849%" y="708" width="0.5376%" height="15" fill="rgb(251,227,43)" fg:x="222" fg:w="3"/><text x="40.0349%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="724" width="0.3584%" height="15" fill="rgb(241,96,17)" fg:x="223" fg:w="2"/><text x="40.2142%" y="734.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="740" width="0.3584%" height="15" fill="rgb(234,198,43)" fg:x="223" fg:w="2"/><text x="40.2142%" y="750.50"></text></g><g><title>at::(anonymous namespace)::structured_pow_Tensor_Scalar_out_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="756" width="0.3584%" height="15" fill="rgb(220,108,29)" fg:x="223" fg:w="2"/><text x="40.2142%" y="766.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="772" width="0.3584%" height="15" fill="rgb(226,163,33)" fg:x="223" fg:w="2"/><text x="40.2142%" y="782.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="788" width="0.3584%" height="15" fill="rgb(205,194,45)" fg:x="223" fg:w="2"/><text x="40.2142%" y="798.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="804" width="0.3584%" height="15" fill="rgb(206,143,44)" fg:x="223" fg:w="2"/><text x="40.2142%" y="814.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="820" width="0.3584%" height="15" fill="rgb(236,136,36)" fg:x="223" fg:w="2"/><text x="40.2142%" y="830.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="39.9642%" y="836" width="0.3584%" height="15" fill="rgb(249,172,42)" fg:x="223" fg:w="2"/><text x="40.2142%" y="846.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="40.1434%" y="852" width="0.1792%" height="15" fill="rgb(216,139,23)" fg:x="224" fg:w="1"/><text x="40.3934%" y="862.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="40.1434%" y="868" width="0.1792%" height="15" fill="rgb(207,166,20)" fg:x="224" fg:w="1"/><text x="40.3934%" y="878.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="40.1434%" y="884" width="0.1792%" height="15" fill="rgb(210,209,22)" fg:x="224" fg:w="1"/><text x="40.3934%" y="894.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="40.1434%" y="900" width="0.1792%" height="15" fill="rgb(232,118,20)" fg:x="224" fg:w="1"/><text x="40.3934%" y="910.50"></text></g><g><title>at::TensorIteratorBase::compute_mem_overlaps (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="40.5018%" y="804" width="0.1792%" height="15" fill="rgb(238,113,42)" fg:x="226" fg:w="1"/><text x="40.7518%" y="814.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="40.6810%" y="900" width="0.1792%" height="15" fill="rgb(231,42,5)" fg:x="227" fg:w="1"/><text x="40.9310%" y="910.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="40.6810%" y="916" width="0.1792%" height="15" fill="rgb(243,166,24)" fg:x="227" fg:w="1"/><text x="40.9310%" y="926.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="40.6810%" y="932" width="0.1792%" height="15" fill="rgb(237,226,12)" fg:x="227" fg:w="1"/><text x="40.9310%" y="942.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::New (libc10.so) (1 samples, 0.18%)</title><rect x="40.6810%" y="948" width="0.1792%" height="15" fill="rgb(229,133,24)" fg:x="227" fg:w="1"/><text x="40.9310%" y="958.50"></text></g><g><title>at::(anonymous namespace)::structured_sub_out_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="40.6810%" y="820" width="0.3584%" height="15" fill="rgb(238,33,43)" fg:x="227" fg:w="2"/><text x="40.9310%" y="830.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="40.6810%" y="836" width="0.3584%" height="15" fill="rgb(227,59,38)" fg:x="227" fg:w="2"/><text x="40.9310%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="40.6810%" y="852" width="0.3584%" height="15" fill="rgb(230,97,0)" fg:x="227" fg:w="2"/><text x="40.9310%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="40.6810%" y="868" width="0.3584%" height="15" fill="rgb(250,173,50)" fg:x="227" fg:w="2"/><text x="40.9310%" y="878.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="40.6810%" y="884" width="0.3584%" height="15" fill="rgb(240,15,50)" fg:x="227" fg:w="2"/><text x="40.9310%" y="894.50"></text></g><g><title>c10::GetCPUAllocator (libc10.so) (1 samples, 0.18%)</title><rect x="40.8602%" y="900" width="0.1792%" height="15" fill="rgb(221,93,22)" fg:x="228" fg:w="1"/><text x="41.1102%" y="910.50"></text></g><g><title>c10::GetAllocator (libc10.so) (1 samples, 0.18%)</title><rect x="40.8602%" y="916" width="0.1792%" height="15" fill="rgb(245,180,53)" fg:x="228" fg:w="1"/><text x="41.1102%" y="926.50"></text></g><g><title>at::pow (pow.h:64) (5 samples, 0.90%)</title><rect x="40.3226%" y="596" width="0.8961%" height="15" fill="rgb(231,88,51)" fg:x="225" fg:w="5"/><text x="40.5726%" y="606.50"></text></g><g><title>operator- (TensorOperators.h:50) (5 samples, 0.90%)</title><rect x="40.3226%" y="612" width="0.8961%" height="15" fill="rgb(240,58,21)" fg:x="225" fg:w="5"/><text x="40.5726%" y="622.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (5 samples, 0.90%)</title><rect x="40.3226%" y="628" width="0.8961%" height="15" fill="rgb(237,21,10)" fg:x="225" fg:w="5"/><text x="40.5726%" y="638.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (5 samples, 0.90%)</title><rect x="40.3226%" y="644" width="0.8961%" height="15" fill="rgb(218,43,11)" fg:x="225" fg:w="5"/><text x="40.5726%" y="654.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="40.3226%" y="660" width="0.8961%" height="15" fill="rgb(218,221,29)" fg:x="225" fg:w="5"/><text x="40.5726%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="40.3226%" y="676" width="0.8961%" height="15" fill="rgb(214,118,42)" fg:x="225" fg:w="5"/><text x="40.5726%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="692" width="0.7168%" height="15" fill="rgb(251,200,26)" fg:x="226" fg:w="4"/><text x="40.7518%" y="702.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="708" width="0.7168%" height="15" fill="rgb(237,101,39)" fg:x="226" fg:w="4"/><text x="40.7518%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="724" width="0.7168%" height="15" fill="rgb(251,117,11)" fg:x="226" fg:w="4"/><text x="40.7518%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="740" width="0.7168%" height="15" fill="rgb(216,223,23)" fg:x="226" fg:w="4"/><text x="40.7518%" y="750.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="756" width="0.7168%" height="15" fill="rgb(251,54,12)" fg:x="226" fg:w="4"/><text x="40.7518%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="772" width="0.7168%" height="15" fill="rgb(254,176,54)" fg:x="226" fg:w="4"/><text x="40.7518%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="40.5018%" y="788" width="0.7168%" height="15" fill="rgb(210,32,8)" fg:x="226" fg:w="4"/><text x="40.7518%" y="798.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="40.6810%" y="804" width="0.5376%" height="15" fill="rgb(235,52,38)" fg:x="227" fg:w="3"/><text x="40.9310%" y="814.50"></text></g><g><title>at::original_options (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.0394%" y="820" width="0.1792%" height="15" fill="rgb(231,4,44)" fg:x="229" fg:w="1"/><text x="41.2894%" y="830.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="41.2186%" y="692" width="0.1792%" height="15" fill="rgb(249,2,32)" fg:x="230" fg:w="1"/><text x="41.4686%" y="702.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="41.2186%" y="708" width="0.1792%" height="15" fill="rgb(224,65,26)" fg:x="230" fg:w="1"/><text x="41.4686%" y="718.50"></text></g><g><title>0x7f34fee98cdf (libc.so.6) (1 samples, 0.18%)</title><rect x="41.2186%" y="724" width="0.1792%" height="15" fill="rgb(250,73,40)" fg:x="230" fg:w="1"/><text x="41.4686%" y="734.50"></text></g><g><title>operator+ (TensorOperators.h:50) (2 samples, 0.36%)</title><rect x="41.2186%" y="596" width="0.3584%" height="15" fill="rgb(253,177,16)" fg:x="230" fg:w="2"/><text x="41.4686%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (2 samples, 0.36%)</title><rect x="41.2186%" y="612" width="0.3584%" height="15" fill="rgb(217,32,34)" fg:x="230" fg:w="2"/><text x="41.4686%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (2 samples, 0.36%)</title><rect x="41.2186%" y="628" width="0.3584%" height="15" fill="rgb(212,7,10)" fg:x="230" fg:w="2"/><text x="41.4686%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.2186%" y="644" width="0.3584%" height="15" fill="rgb(245,89,8)" fg:x="230" fg:w="2"/><text x="41.4686%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.2186%" y="660" width="0.3584%" height="15" fill="rgb(237,16,53)" fg:x="230" fg:w="2"/><text x="41.4686%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.2186%" y="676" width="0.3584%" height="15" fill="rgb(250,204,30)" fg:x="230" fg:w="2"/><text x="41.4686%" y="686.50"></text></g><g><title>torch::autograd::set_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.3978%" y="692" width="0.1792%" height="15" fill="rgb(208,77,27)" fg:x="231" fg:w="1"/><text x="41.6478%" y="702.50"></text></g><g><title>torch::autograd::impl::set_gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.3978%" y="708" width="0.1792%" height="15" fill="rgb(250,204,28)" fg:x="231" fg:w="1"/><text x="41.6478%" y="718.50"></text></g><g><title>torch::autograd::impl::materialize_autograd_meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.3978%" y="724" width="0.1792%" height="15" fill="rgb(244,63,21)" fg:x="231" fg:w="1"/><text x="41.6478%" y="734.50"></text></g><g><title>torch::autograd::impl::get_autograd_meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.3978%" y="740" width="0.1792%" height="15" fill="rgb(236,85,44)" fg:x="231" fg:w="1"/><text x="41.6478%" y="750.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="692" width="0.1792%" height="15" fill="rgb(215,98,4)" fg:x="232" fg:w="1"/><text x="41.8271%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="708" width="0.1792%" height="15" fill="rgb(235,38,11)" fg:x="232" fg:w="1"/><text x="41.8271%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="724" width="0.1792%" height="15" fill="rgb(254,186,25)" fg:x="232" fg:w="1"/><text x="41.8271%" y="734.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="740" width="0.1792%" height="15" fill="rgb(225,55,31)" fg:x="232" fg:w="1"/><text x="41.8271%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="756" width="0.1792%" height="15" fill="rgb(211,15,21)" fg:x="232" fg:w="1"/><text x="41.8271%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="772" width="0.1792%" height="15" fill="rgb(215,187,41)" fg:x="232" fg:w="1"/><text x="41.8271%" y="782.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="788" width="0.1792%" height="15" fill="rgb(248,69,32)" fg:x="232" fg:w="1"/><text x="41.8271%" y="798.50"></text></g><g><title>at::(anonymous namespace)::structured_sub_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="804" width="0.1792%" height="15" fill="rgb(252,102,52)" fg:x="232" fg:w="1"/><text x="41.8271%" y="814.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="820" width="0.1792%" height="15" fill="rgb(253,140,32)" fg:x="232" fg:w="1"/><text x="41.8271%" y="830.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="836" width="0.1792%" height="15" fill="rgb(216,56,42)" fg:x="232" fg:w="1"/><text x="41.8271%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="852" width="0.1792%" height="15" fill="rgb(216,184,14)" fg:x="232" fg:w="1"/><text x="41.8271%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="868" width="0.1792%" height="15" fill="rgb(237,187,27)" fg:x="232" fg:w="1"/><text x="41.8271%" y="878.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="884" width="0.1792%" height="15" fill="rgb(219,65,3)" fg:x="232" fg:w="1"/><text x="41.8271%" y="894.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="900" width="0.1792%" height="15" fill="rgb(245,83,25)" fg:x="232" fg:w="1"/><text x="41.8271%" y="910.50"></text></g><g><title>at::detail::make_tensor_base&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKeySet&amp;, caffe2::TypeMeta&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="916" width="0.1792%" height="15" fill="rgb(214,205,45)" fg:x="232" fg:w="1"/><text x="41.8271%" y="926.50"></text></g><g><title>c10::TensorImpl::TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="41.5771%" y="932" width="0.1792%" height="15" fill="rgb(241,20,18)" fg:x="232" fg:w="1"/><text x="41.8271%" y="942.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (22 samples, 3.94%)</title><rect x="37.9928%" y="340" width="3.9427%" height="15" fill="rgb(232,163,23)" fg:x="212" fg:w="22"/><text x="38.2428%" y="350.50">fast..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (22 samples, 3.94%)</title><rect x="37.9928%" y="356" width="3.9427%" height="15" fill="rgb(214,5,46)" fg:x="212" fg:w="22"/><text x="38.2428%" y="366.50">at::..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (22 samples, 3.94%)</title><rect x="37.9928%" y="372" width="3.9427%" height="15" fill="rgb(229,78,17)" fg:x="212" fg:w="22"/><text x="38.2428%" y="382.50">at::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (22 samples, 3.94%)</title><rect x="37.9928%" y="388" width="3.9427%" height="15" fill="rgb(248,89,10)" fg:x="212" fg:w="22"/><text x="38.2428%" y="398.50">c10:..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (22 samples, 3.94%)</title><rect x="37.9928%" y="404" width="3.9427%" height="15" fill="rgb(248,54,15)" fg:x="212" fg:w="22"/><text x="38.2428%" y="414.50">c10:..</text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (22 samples, 3.94%)</title><rect x="37.9928%" y="420" width="3.9427%" height="15" fill="rgb(223,116,6)" fg:x="212" fg:w="22"/><text x="38.2428%" y="430.50">std:..</text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (22 samples, 3.94%)</title><rect x="37.9928%" y="436" width="3.9427%" height="15" fill="rgb(205,125,38)" fg:x="212" fg:w="22"/><text x="38.2428%" y="446.50">std:..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (22 samples, 3.94%)</title><rect x="37.9928%" y="452" width="3.9427%" height="15" fill="rgb(251,78,38)" fg:x="212" fg:w="22"/><text x="38.2428%" y="462.50">std:..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (22 samples, 3.94%)</title><rect x="37.9928%" y="468" width="3.9427%" height="15" fill="rgb(253,78,28)" fg:x="212" fg:w="22"/><text x="38.2428%" y="478.50">std:..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (22 samples, 3.94%)</title><rect x="37.9928%" y="484" width="3.9427%" height="15" fill="rgb(209,120,3)" fg:x="212" fg:w="22"/><text x="38.2428%" y="494.50">std:..</text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (22 samples, 3.94%)</title><rect x="37.9928%" y="500" width="3.9427%" height="15" fill="rgb(238,229,9)" fg:x="212" fg:w="22"/><text x="38.2428%" y="510.50">std:..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (22 samples, 3.94%)</title><rect x="37.9928%" y="516" width="3.9427%" height="15" fill="rgb(253,159,18)" fg:x="212" fg:w="22"/><text x="38.2428%" y="526.50">std:..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (22 samples, 3.94%)</title><rect x="37.9928%" y="532" width="3.9427%" height="15" fill="rgb(244,42,34)" fg:x="212" fg:w="22"/><text x="38.2428%" y="542.50">at::..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (22 samples, 3.94%)</title><rect x="37.9928%" y="548" width="3.9427%" height="15" fill="rgb(224,8,7)" fg:x="212" fg:w="22"/><text x="38.2428%" y="558.50">at::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (22 samples, 3.94%)</title><rect x="37.9928%" y="564" width="3.9427%" height="15" fill="rgb(210,201,45)" fg:x="212" fg:w="22"/><text x="38.2428%" y="574.50">c10:..</text></g><g><title>my_length_constraint (main.cpp:268) (22 samples, 3.94%)</title><rect x="37.9928%" y="580" width="3.9427%" height="15" fill="rgb(252,185,21)" fg:x="212" fg:w="22"/><text x="38.2428%" y="590.50">my_l..</text></g><g><title>operator- (TensorOperators.h:50) (2 samples, 0.36%)</title><rect x="41.5771%" y="596" width="0.3584%" height="15" fill="rgb(223,131,1)" fg:x="232" fg:w="2"/><text x="41.8271%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (2 samples, 0.36%)</title><rect x="41.5771%" y="612" width="0.3584%" height="15" fill="rgb(245,141,16)" fg:x="232" fg:w="2"/><text x="41.8271%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (2 samples, 0.36%)</title><rect x="41.5771%" y="628" width="0.3584%" height="15" fill="rgb(229,55,45)" fg:x="232" fg:w="2"/><text x="41.8271%" y="638.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.5771%" y="644" width="0.3584%" height="15" fill="rgb(208,92,15)" fg:x="232" fg:w="2"/><text x="41.8271%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.5771%" y="660" width="0.3584%" height="15" fill="rgb(234,185,47)" fg:x="232" fg:w="2"/><text x="41.8271%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="41.5771%" y="676" width="0.3584%" height="15" fill="rgb(253,104,50)" fg:x="232" fg:w="2"/><text x="41.8271%" y="686.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="41.7563%" y="692" width="0.1792%" height="15" fill="rgb(205,70,7)" fg:x="233" fg:w="1"/><text x="42.0063%" y="702.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="41.7563%" y="708" width="0.1792%" height="15" fill="rgb(240,178,43)" fg:x="233" fg:w="1"/><text x="42.0063%" y="718.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="41.7563%" y="724" width="0.1792%" height="15" fill="rgb(214,112,2)" fg:x="233" fg:w="1"/><text x="42.0063%" y="734.50"></text></g><g><title>fast_jacobian (main.cpp:44) (1 samples, 0.18%)</title><rect x="41.9355%" y="340" width="0.1792%" height="15" fill="rgb(206,46,17)" fg:x="234" fg:w="1"/><text x="42.1855%" y="350.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="41.9355%" y="356" width="0.1792%" height="15" fill="rgb(225,220,16)" fg:x="234" fg:w="1"/><text x="42.1855%" y="366.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="41.9355%" y="372" width="0.1792%" height="15" fill="rgb(238,65,40)" fg:x="234" fg:w="1"/><text x="42.1855%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (1 samples, 0.18%)</title><rect x="41.9355%" y="388" width="0.1792%" height="15" fill="rgb(230,151,21)" fg:x="234" fg:w="1"/><text x="42.1855%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (1 samples, 0.18%)</title><rect x="41.9355%" y="404" width="0.1792%" height="15" fill="rgb(218,58,49)" fg:x="234" fg:w="1"/><text x="42.1855%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (1 samples, 0.18%)</title><rect x="41.9355%" y="420" width="0.1792%" height="15" fill="rgb(219,179,14)" fg:x="234" fg:w="1"/><text x="42.1855%" y="430.50"></text></g><g><title>at::_ops::detach::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="436" width="0.1792%" height="15" fill="rgb(223,72,1)" fg:x="234" fg:w="1"/><text x="42.1855%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="452" width="0.1792%" height="15" fill="rgb(238,126,10)" fg:x="234" fg:w="1"/><text x="42.1855%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="468" width="0.1792%" height="15" fill="rgb(224,206,38)" fg:x="234" fg:w="1"/><text x="42.1855%" y="478.50"></text></g><g><title>at::_ops::detach::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="484" width="0.1792%" height="15" fill="rgb(212,201,54)" fg:x="234" fg:w="1"/><text x="42.1855%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="500" width="0.1792%" height="15" fill="rgb(218,154,48)" fg:x="234" fg:w="1"/><text x="42.1855%" y="510.50"></text></g><g><title>torch::ADInplaceOrView::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="516" width="0.1792%" height="15" fill="rgb(232,93,24)" fg:x="234" fg:w="1"/><text x="42.1855%" y="526.50"></text></g><g><title>at::_ops::detach::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="532" width="0.1792%" height="15" fill="rgb(245,30,21)" fg:x="234" fg:w="1"/><text x="42.1855%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__detach(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="548" width="0.1792%" height="15" fill="rgb(242,148,29)" fg:x="234" fg:w="1"/><text x="42.1855%" y="558.50"></text></g><g><title>at::native::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="564" width="0.1792%" height="15" fill="rgb(244,153,54)" fg:x="234" fg:w="1"/><text x="42.1855%" y="574.50"></text></g><g><title>c10::TensorImpl::shallow_copy_and_detach (libc10.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="580" width="0.1792%" height="15" fill="rgb(252,87,22)" fg:x="234" fg:w="1"/><text x="42.1855%" y="590.50"></text></g><g><title>c10::TensorImpl::shallow_copy_and_detach_core&lt;c10::VariableVersion&gt; (libc10.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="596" width="0.1792%" height="15" fill="rgb(210,51,29)" fg:x="234" fg:w="1"/><text x="42.1855%" y="606.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::stack_len (libc10.so) (1 samples, 0.18%)</title><rect x="41.9355%" y="612" width="0.1792%" height="15" fill="rgb(242,136,47)" fg:x="234" fg:w="1"/><text x="42.1855%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="41.9355%" y="628" width="0.1792%" height="15" fill="rgb(238,68,4)" fg:x="234" fg:w="1"/><text x="42.1855%" y="638.50"></text></g><g><title>torch::autograd::_make_grads (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="42.1147%" y="452" width="0.3584%" height="15" fill="rgb(242,161,30)" fg:x="235" fg:w="2"/><text x="42.3647%" y="462.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::emplace_back&lt;at::Tensor&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="42.1147%" y="468" width="0.3584%" height="15" fill="rgb(218,58,44)" fg:x="235" fg:w="2"/><text x="42.3647%" y="478.50"></text></g><g><title>torch::autograd::Engine::compute_dependencies (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="42.4731%" y="500" width="0.1792%" height="15" fill="rgb(252,125,32)" fg:x="237" fg:w="1"/><text x="42.7231%" y="510.50"></text></g><g><title>at::cuda::detail::CUDAHooks::hasCUDA (libtorch_cuda.so) (1 samples, 0.18%)</title><rect x="42.4731%" y="516" width="0.1792%" height="15" fill="rgb(219,178,0)" fg:x="237" fg:w="1"/><text x="42.7231%" y="526.50"></text></g><g><title>pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="42.6523%" y="532" width="0.1792%" height="15" fill="rgb(213,152,7)" fg:x="238" fg:w="1"/><text x="42.9023%" y="542.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="42.8315%" y="548" width="0.1792%" height="15" fill="rgb(249,109,34)" fg:x="239" fg:w="1"/><text x="43.0815%" y="558.50"></text></g><g><title>0x7f34ab670d80 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="43.0108%" y="564" width="0.1792%" height="15" fill="rgb(232,96,21)" fg:x="240" fg:w="1"/><text x="43.2608%" y="574.50"></text></g><g><title>at::(anonymous namespace)::GlobalCallbackManager::getSnapshot (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="43.1900%" y="580" width="0.1792%" height="15" fill="rgb(228,27,39)" fg:x="241" fg:w="1"/><text x="43.4400%" y="590.50"></text></g><g><title>pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="43.1900%" y="596" width="0.1792%" height="15" fill="rgb(211,182,52)" fg:x="241" fg:w="1"/><text x="43.4400%" y="606.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="43.7276%" y="596" width="0.3584%" height="15" fill="rgb(234,178,38)" fg:x="244" fg:w="2"/><text x="43.9776%" y="606.50"></text></g><g><title>0x7f34ff179d21 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="43.9068%" y="612" width="0.1792%" height="15" fill="rgb(221,111,3)" fg:x="245" fg:w="1"/><text x="44.1568%" y="622.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="43.1900%" y="564" width="1.4337%" height="15" fill="rgb(228,175,21)" fg:x="241" fg:w="8"/><text x="43.4400%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="43.3692%" y="580" width="1.2545%" height="15" fill="rgb(228,174,43)" fg:x="242" fg:w="7"/><text x="43.6192%" y="590.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="44.0860%" y="596" width="0.5376%" height="15" fill="rgb(211,191,0)" fg:x="246" fg:w="3"/><text x="44.3360%" y="606.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="44.4444%" y="612" width="0.1792%" height="15" fill="rgb(253,117,3)" fg:x="248" fg:w="1"/><text x="44.6944%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="44.4444%" y="628" width="0.1792%" height="15" fill="rgb(241,127,19)" fg:x="248" fg:w="1"/><text x="44.6944%" y="638.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="44.4444%" y="644" width="0.1792%" height="15" fill="rgb(218,103,12)" fg:x="248" fg:w="1"/><text x="44.6944%" y="654.50"></text></g><g><title>0x7f34ff179b11 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="44.4444%" y="660" width="0.1792%" height="15" fill="rgb(236,214,43)" fg:x="248" fg:w="1"/><text x="44.6944%" y="670.50"></text></g><g><title>c10::ThreadLocalDebugInfo::_forceCurrentDebugInfo (libc10.so) (1 samples, 0.18%)</title><rect x="44.6237%" y="564" width="0.1792%" height="15" fill="rgb(244,144,19)" fg:x="249" fg:w="1"/><text x="44.8737%" y="574.50"></text></g><g><title>c10::{lambda()#1}::_FUN (libc10.so) (1 samples, 0.18%)</title><rect x="44.6237%" y="580" width="0.1792%" height="15" fill="rgb(246,188,10)" fg:x="249" fg:w="1"/><text x="44.8737%" y="590.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="44.6237%" y="596" width="0.1792%" height="15" fill="rgb(212,193,33)" fg:x="249" fg:w="1"/><text x="44.8737%" y="606.50"></text></g><g><title>0x7f34ff179d07 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="44.6237%" y="612" width="0.1792%" height="15" fill="rgb(241,51,29)" fg:x="249" fg:w="1"/><text x="44.8737%" y="622.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::set_state (libc10.so) (1 samples, 0.18%)</title><rect x="44.8029%" y="564" width="0.1792%" height="15" fill="rgb(211,58,19)" fg:x="250" fg:w="1"/><text x="45.0529%" y="574.50"></text></g><g><title>0x7f34f2547c50 (libc10.so) (1 samples, 0.18%)</title><rect x="44.8029%" y="580" width="0.1792%" height="15" fill="rgb(229,111,26)" fg:x="250" fg:w="1"/><text x="45.0529%" y="590.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (12 samples, 2.15%)</title><rect x="43.0108%" y="548" width="2.1505%" height="15" fill="rgb(213,115,40)" fg:x="240" fg:w="12"/><text x="43.2608%" y="558.50">a..</text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="44.9821%" y="564" width="0.1792%" height="15" fill="rgb(209,56,44)" fg:x="251" fg:w="1"/><text x="45.2321%" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (libtorch_python.so) (1 samples, 0.18%)</title><rect x="44.9821%" y="580" width="0.1792%" height="15" fill="rgb(230,108,32)" fg:x="251" fg:w="1"/><text x="45.2321%" y="590.50"></text></g><g><title>0x7f34fefa4bc0 (libc.so.6) (1 samples, 0.18%)</title><rect x="44.9821%" y="596" width="0.1792%" height="15" fill="rgb(216,165,31)" fg:x="251" fg:w="1"/><text x="45.2321%" y="606.50"></text></g><g><title>at::ThreadLocalState::~ThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="45.1613%" y="548" width="0.1792%" height="15" fill="rgb(218,122,21)" fg:x="252" fg:w="1"/><text x="45.4113%" y="558.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="45.1613%" y="564" width="0.1792%" height="15" fill="rgb(223,224,47)" fg:x="252" fg:w="1"/><text x="45.4113%" y="574.50"></text></g><g><title>0x7f34fee979ad (libc.so.6) (1 samples, 0.18%)</title><rect x="45.1613%" y="580" width="0.1792%" height="15" fill="rgb(238,102,44)" fg:x="252" fg:w="1"/><text x="45.4113%" y="590.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="45.5197%" y="564" width="0.1792%" height="15" fill="rgb(236,46,40)" fg:x="254" fg:w="1"/><text x="45.7697%" y="574.50"></text></g><g><title>0x7f34fee97a21 (libc.so.6) (1 samples, 0.18%)</title><rect x="45.5197%" y="580" width="0.1792%" height="15" fill="rgb(247,202,50)" fg:x="254" fg:w="1"/><text x="45.7697%" y="590.50"></text></g><g><title>0x7f34fee97802 (libc.so.6) (1 samples, 0.18%)</title><rect x="45.6989%" y="596" width="0.1792%" height="15" fill="rgb(209,99,20)" fg:x="255" fg:w="1"/><text x="45.9489%" y="606.50"></text></g><g><title>std::_Hashtable&lt;torch::autograd::Node*, std::pair&lt;torch::autograd::Node* const, int&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Node* const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Node*&gt;, std::hash&lt;torch::autograd::Node*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="45.6989%" y="564" width="0.3584%" height="15" fill="rgb(252,27,34)" fg:x="255" fg:w="2"/><text x="45.9489%" y="574.50"></text></g><g><title>free (libc.so.6) (2 samples, 0.36%)</title><rect x="45.6989%" y="580" width="0.3584%" height="15" fill="rgb(215,206,23)" fg:x="255" fg:w="2"/><text x="45.9489%" y="590.50"></text></g><g><title>0x7f34fee979ad (libc.so.6) (1 samples, 0.18%)</title><rect x="45.8781%" y="596" width="0.1792%" height="15" fill="rgb(212,135,36)" fg:x="256" fg:w="1"/><text x="46.1281%" y="606.50"></text></g><g><title>at::TensorIteratorBase::compute_shape (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.0573%" y="740" width="0.1792%" height="15" fill="rgb(240,189,1)" fg:x="257" fg:w="1"/><text x="46.3073%" y="750.50"></text></g><g><title>at::TensorIteratorBase::compute_types (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.2366%" y="740" width="0.1792%" height="15" fill="rgb(242,56,20)" fg:x="258" fg:w="1"/><text x="46.4866%" y="750.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="596" width="0.5376%" height="15" fill="rgb(247,132,33)" fg:x="257" fg:w="3"/><text x="46.3073%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="612" width="0.5376%" height="15" fill="rgb(208,149,11)" fg:x="257" fg:w="3"/><text x="46.3073%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="628" width="0.5376%" height="15" fill="rgb(211,33,11)" fg:x="257" fg:w="3"/><text x="46.3073%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="644" width="0.5376%" height="15" fill="rgb(221,29,38)" fg:x="257" fg:w="3"/><text x="46.3073%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="660" width="0.5376%" height="15" fill="rgb(206,182,49)" fg:x="257" fg:w="3"/><text x="46.3073%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="676" width="0.5376%" height="15" fill="rgb(216,140,1)" fg:x="257" fg:w="3"/><text x="46.3073%" y="686.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="692" width="0.5376%" height="15" fill="rgb(232,57,40)" fg:x="257" fg:w="3"/><text x="46.3073%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="708" width="0.5376%" height="15" fill="rgb(224,186,18)" fg:x="257" fg:w="3"/><text x="46.3073%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="46.0573%" y="724" width="0.5376%" height="15" fill="rgb(215,121,11)" fg:x="257" fg:w="3"/><text x="46.3073%" y="734.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.4158%" y="740" width="0.1792%" height="15" fill="rgb(245,147,10)" fg:x="259" fg:w="1"/><text x="46.6658%" y="750.50"></text></g><g><title>at::OperandInfo::tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.4158%" y="756" width="0.1792%" height="15" fill="rgb(238,153,13)" fg:x="259" fg:w="1"/><text x="46.6658%" y="766.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.4158%" y="772" width="0.1792%" height="15" fill="rgb(233,108,0)" fg:x="259" fg:w="1"/><text x="46.6658%" y="782.50"></text></g><g><title>c10::GradMode::is_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="46.5950%" y="596" width="0.1792%" height="15" fill="rgb(212,157,17)" fg:x="260" fg:w="1"/><text x="46.8450%" y="606.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="46.0573%" y="564" width="0.8961%" height="15" fill="rgb(225,213,38)" fg:x="257" fg:w="5"/><text x="46.3073%" y="574.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="46.0573%" y="580" width="0.8961%" height="15" fill="rgb(248,16,11)" fg:x="257" fg:w="5"/><text x="46.3073%" y="590.50"></text></g><g><title>c10::impl::dispatch_mode_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="46.7742%" y="596" width="0.1792%" height="15" fill="rgb(241,33,4)" fg:x="261" fg:w="1"/><text x="47.0242%" y="606.50"></text></g><g><title>c10::impl::tls_is_dispatch_key_excluded (libc10.so) (1 samples, 0.18%)</title><rect x="46.7742%" y="612" width="0.1792%" height="15" fill="rgb(222,26,43)" fg:x="261" fg:w="1"/><text x="47.0242%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="46.7742%" y="628" width="0.1792%" height="15" fill="rgb(243,29,36)" fg:x="261" fg:w="1"/><text x="47.0242%" y="638.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="46.7742%" y="644" width="0.1792%" height="15" fill="rgb(241,9,27)" fg:x="261" fg:w="1"/><text x="47.0242%" y="654.50"></text></g><g><title>0x7f34ff179b11 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="46.7742%" y="660" width="0.1792%" height="15" fill="rgb(205,117,26)" fg:x="261" fg:w="1"/><text x="47.0242%" y="670.50"></text></g><g><title>0x7f34ab657e60 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="46.9534%" y="580" width="0.1792%" height="15" fill="rgb(209,80,39)" fg:x="262" fg:w="1"/><text x="47.2034%" y="590.50"></text></g><g><title>torch::autograd::AccumulateGrad::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="580" width="0.1792%" height="15" fill="rgb(239,155,6)" fg:x="263" fg:w="1"/><text x="47.3826%" y="590.50"></text></g><g><title>torch::autograd::AccumulateGrad::accumulateGrad&lt;torch::autograd::AccumulateGrad::apply(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;&amp;&amp;)::{lambda(at::Tensor&amp;&amp;)#1}&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="596" width="0.1792%" height="15" fill="rgb(212,104,12)" fg:x="263" fg:w="1"/><text x="47.3826%" y="606.50"></text></g><g><title>at::_ops::detach::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="612" width="0.1792%" height="15" fill="rgb(234,204,3)" fg:x="263" fg:w="1"/><text x="47.3826%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="628" width="0.1792%" height="15" fill="rgb(251,218,7)" fg:x="263" fg:w="1"/><text x="47.3826%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="644" width="0.1792%" height="15" fill="rgb(221,81,32)" fg:x="263" fg:w="1"/><text x="47.3826%" y="654.50"></text></g><g><title>at::namedinference::propagate_names (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.1326%" y="660" width="0.1792%" height="15" fill="rgb(214,152,26)" fg:x="263" fg:w="1"/><text x="47.3826%" y="670.50"></text></g><g><title>at::_ops::mul_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="612" width="0.1792%" height="15" fill="rgb(223,22,3)" fg:x="264" fg:w="1"/><text x="47.5618%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="628" width="0.1792%" height="15" fill="rgb(207,174,7)" fg:x="264" fg:w="1"/><text x="47.5618%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="644" width="0.1792%" height="15" fill="rgb(224,19,52)" fg:x="264" fg:w="1"/><text x="47.5618%" y="654.50"></text></g><g><title>at::_ops::mul_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="660" width="0.1792%" height="15" fill="rgb(228,24,14)" fg:x="264" fg:w="1"/><text x="47.5618%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Scalar_mul(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="676" width="0.1792%" height="15" fill="rgb(230,153,43)" fg:x="264" fg:w="1"/><text x="47.5618%" y="686.50"></text></g><g><title>at::native::mul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="692" width="0.1792%" height="15" fill="rgb(231,106,12)" fg:x="264" fg:w="1"/><text x="47.5618%" y="702.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="708" width="0.1792%" height="15" fill="rgb(215,92,2)" fg:x="264" fg:w="1"/><text x="47.5618%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.3118%" y="724" width="0.1792%" height="15" fill="rgb(249,143,25)" fg:x="264" fg:w="1"/><text x="47.5618%" y="734.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.4910%" y="708" width="0.1792%" height="15" fill="rgb(252,7,35)" fg:x="265" fg:w="1"/><text x="47.7410%" y="718.50"></text></g><g><title>at::_ops::result_type_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.4910%" y="724" width="0.1792%" height="15" fill="rgb(216,69,40)" fg:x="265" fg:w="1"/><text x="47.7410%" y="734.50"></text></g><g><title>at::native::result_type (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.4910%" y="740" width="0.1792%" height="15" fill="rgb(240,36,33)" fg:x="265" fg:w="1"/><text x="47.7410%" y="750.50"></text></g><g><title>at::native::update_result_type_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.4910%" y="756" width="0.1792%" height="15" fill="rgb(231,128,14)" fg:x="265" fg:w="1"/><text x="47.7410%" y="766.50"></text></g><g><title>c10::get_default_dtype (libc10.so) (1 samples, 0.18%)</title><rect x="47.4910%" y="772" width="0.1792%" height="15" fill="rgb(245,143,14)" fg:x="265" fg:w="1"/><text x="47.7410%" y="782.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.6703%" y="740" width="0.1792%" height="15" fill="rgb(222,130,28)" fg:x="266" fg:w="1"/><text x="47.9203%" y="750.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.6703%" y="756" width="0.1792%" height="15" fill="rgb(212,10,48)" fg:x="266" fg:w="1"/><text x="47.9203%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.6703%" y="772" width="0.1792%" height="15" fill="rgb(254,118,45)" fg:x="266" fg:w="1"/><text x="47.9203%" y="782.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.6703%" y="788" width="0.1792%" height="15" fill="rgb(228,6,45)" fg:x="266" fg:w="1"/><text x="47.9203%" y="798.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="47.4910%" y="660" width="0.5376%" height="15" fill="rgb(241,18,35)" fg:x="265" fg:w="3"/><text x="47.7410%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="47.4910%" y="676" width="0.5376%" height="15" fill="rgb(227,214,53)" fg:x="265" fg:w="3"/><text x="47.7410%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="47.4910%" y="692" width="0.5376%" height="15" fill="rgb(224,107,51)" fg:x="265" fg:w="3"/><text x="47.7410%" y="702.50"></text></g><g><title>at::native::structured_pow_Tensor_Scalar_out::impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="47.6703%" y="708" width="0.3584%" height="15" fill="rgb(248,60,28)" fg:x="266" fg:w="2"/><text x="47.9203%" y="718.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="47.6703%" y="724" width="0.3584%" height="15" fill="rgb(249,101,23)" fg:x="266" fg:w="2"/><text x="47.9203%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__copy_(at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="47.8495%" y="740" width="0.1792%" height="15" fill="rgb(228,51,19)" fg:x="267" fg:w="1"/><text x="48.0995%" y="750.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="47.4910%" y="612" width="0.7168%" height="15" fill="rgb(213,20,6)" fg:x="265" fg:w="4"/><text x="47.7410%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="47.4910%" y="628" width="0.7168%" height="15" fill="rgb(212,124,10)" fg:x="265" fg:w="4"/><text x="47.7410%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="47.4910%" y="644" width="0.7168%" height="15" fill="rgb(248,3,40)" fg:x="265" fg:w="4"/><text x="47.7410%" y="654.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.0287%" y="660" width="0.1792%" height="15" fill="rgb(223,178,23)" fg:x="268" fg:w="1"/><text x="48.2787%" y="670.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.0287%" y="676" width="0.1792%" height="15" fill="rgb(240,132,45)" fg:x="268" fg:w="1"/><text x="48.2787%" y="686.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="47.3118%" y="580" width="1.0753%" height="15" fill="rgb(245,164,36)" fg:x="264" fg:w="6"/><text x="47.5618%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="47.3118%" y="596" width="1.0753%" height="15" fill="rgb(231,188,53)" fg:x="264" fg:w="6"/><text x="47.5618%" y="606.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="612" width="0.1792%" height="15" fill="rgb(237,198,39)" fg:x="269" fg:w="1"/><text x="48.4579%" y="622.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="628" width="0.1792%" height="15" fill="rgb(223,120,35)" fg:x="269" fg:w="1"/><text x="48.4579%" y="638.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="644" width="0.1792%" height="15" fill="rgb(253,107,49)" fg:x="269" fg:w="1"/><text x="48.4579%" y="654.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="660" width="0.1792%" height="15" fill="rgb(216,44,31)" fg:x="269" fg:w="1"/><text x="48.4579%" y="670.50"></text></g><g><title>c10::DefaultCPUAllocator::ReportAndDelete (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="676" width="0.1792%" height="15" fill="rgb(253,87,21)" fg:x="269" fg:w="1"/><text x="48.4579%" y="686.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::Delete (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="692" width="0.1792%" height="15" fill="rgb(226,18,2)" fg:x="269" fg:w="1"/><text x="48.4579%" y="702.50"></text></g><g><title>c10::memoryProfilingEnabled (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="708" width="0.1792%" height="15" fill="rgb(216,8,46)" fg:x="269" fg:w="1"/><text x="48.4579%" y="718.50"></text></g><g><title>c10::ThreadLocalDebugInfo::get (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="724" width="0.1792%" height="15" fill="rgb(226,140,39)" fg:x="269" fg:w="1"/><text x="48.4579%" y="734.50"></text></g><g><title>c10::{lambda()#1}::_FUN (libc10.so) (1 samples, 0.18%)</title><rect x="48.2079%" y="740" width="0.1792%" height="15" fill="rgb(221,194,54)" fg:x="269" fg:w="1"/><text x="48.4579%" y="750.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="48.2079%" y="756" width="0.1792%" height="15" fill="rgb(213,92,11)" fg:x="269" fg:w="1"/><text x="48.4579%" y="766.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="48.2079%" y="772" width="0.1792%" height="15" fill="rgb(229,162,46)" fg:x="269" fg:w="1"/><text x="48.4579%" y="782.50"></text></g><g><title>0x7f34ff179b1a (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="48.2079%" y="788" width="0.1792%" height="15" fill="rgb(214,111,36)" fg:x="269" fg:w="1"/><text x="48.4579%" y="798.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="708" width="0.1792%" height="15" fill="rgb(207,6,21)" fg:x="270" fg:w="1"/><text x="48.6371%" y="718.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="724" width="0.1792%" height="15" fill="rgb(213,127,38)" fg:x="270" fg:w="1"/><text x="48.6371%" y="734.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="740" width="0.1792%" height="15" fill="rgb(238,118,32)" fg:x="270" fg:w="1"/><text x="48.6371%" y="750.50"></text></g><g><title>at::native::AVX2::copy_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="756" width="0.1792%" height="15" fill="rgb(240,139,39)" fg:x="270" fg:w="1"/><text x="48.6371%" y="766.50"></text></g><g><title>at::native::AVX2::copy_same_dtype (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="772" width="0.1792%" height="15" fill="rgb(235,10,37)" fg:x="270" fg:w="1"/><text x="48.6371%" y="782.50"></text></g><g><title>at::native::AVX2::direct_copy_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="788" width="0.1792%" height="15" fill="rgb(249,171,38)" fg:x="270" fg:w="1"/><text x="48.6371%" y="798.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="804" width="0.1792%" height="15" fill="rgb(242,144,32)" fg:x="270" fg:w="1"/><text x="48.6371%" y="814.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.3871%" y="820" width="0.1792%" height="15" fill="rgb(217,117,21)" fg:x="270" fg:w="1"/><text x="48.6371%" y="830.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.5663%" y="772" width="0.1792%" height="15" fill="rgb(249,87,1)" fg:x="271" fg:w="1"/><text x="48.8163%" y="782.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.5663%" y="788" width="0.1792%" height="15" fill="rgb(248,196,48)" fg:x="271" fg:w="1"/><text x="48.8163%" y="798.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.5663%" y="804" width="0.1792%" height="15" fill="rgb(251,206,33)" fg:x="271" fg:w="1"/><text x="48.8163%" y="814.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuildActiveCallbacksIfNeeded (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.5663%" y="820" width="0.1792%" height="15" fill="rgb(232,141,28)" fg:x="271" fg:w="1"/><text x="48.8163%" y="830.50"></text></g><g><title>at::(anonymous namespace)::GlobalCallbackManager::get (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.5663%" y="836" width="0.1792%" height="15" fill="rgb(209,167,14)" fg:x="271" fg:w="1"/><text x="48.8163%" y="846.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="48.5663%" y="708" width="0.3584%" height="15" fill="rgb(225,11,50)" fg:x="271" fg:w="2"/><text x="48.8163%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="48.5663%" y="724" width="0.3584%" height="15" fill="rgb(209,50,20)" fg:x="271" fg:w="2"/><text x="48.8163%" y="734.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="48.5663%" y="740" width="0.3584%" height="15" fill="rgb(212,17,46)" fg:x="271" fg:w="2"/><text x="48.8163%" y="750.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="48.5663%" y="756" width="0.3584%" height="15" fill="rgb(216,101,39)" fg:x="271" fg:w="2"/><text x="48.8163%" y="766.50"></text></g><g><title>c10::SymInt::SymInt (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.7455%" y="772" width="0.1792%" height="15" fill="rgb(212,228,48)" fg:x="272" fg:w="1"/><text x="48.9955%" y="782.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="580" width="0.7168%" height="15" fill="rgb(250,6,50)" fg:x="270" fg:w="4"/><text x="48.6371%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="596" width="0.7168%" height="15" fill="rgb(250,160,48)" fg:x="270" fg:w="4"/><text x="48.6371%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="612" width="0.7168%" height="15" fill="rgb(244,216,33)" fg:x="270" fg:w="4"/><text x="48.6371%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="628" width="0.7168%" height="15" fill="rgb(207,157,5)" fg:x="270" fg:w="4"/><text x="48.6371%" y="638.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="644" width="0.7168%" height="15" fill="rgb(228,199,8)" fg:x="270" fg:w="4"/><text x="48.6371%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="660" width="0.7168%" height="15" fill="rgb(227,80,20)" fg:x="270" fg:w="4"/><text x="48.6371%" y="670.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="676" width="0.7168%" height="15" fill="rgb(222,9,33)" fg:x="270" fg:w="4"/><text x="48.6371%" y="686.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="48.3871%" y="692" width="0.7168%" height="15" fill="rgb(239,44,28)" fg:x="270" fg:w="4"/><text x="48.6371%" y="702.50"></text></g><g><title>at::_ops::zeros::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="708" width="0.1792%" height="15" fill="rgb(249,187,43)" fg:x="273" fg:w="1"/><text x="49.1747%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="724" width="0.1792%" height="15" fill="rgb(216,141,28)" fg:x="273" fg:w="1"/><text x="49.1747%" y="734.50"></text></g><g><title>at::_ops::zeros::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="740" width="0.1792%" height="15" fill="rgb(230,154,53)" fg:x="273" fg:w="1"/><text x="49.1747%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="756" width="0.1792%" height="15" fill="rgb(227,82,4)" fg:x="273" fg:w="1"/><text x="49.1747%" y="766.50"></text></g><g><title>at::native::zeros_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="772" width="0.1792%" height="15" fill="rgb(220,107,16)" fg:x="273" fg:w="1"/><text x="49.1747%" y="782.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="788" width="0.1792%" height="15" fill="rgb(207,187,2)" fg:x="273" fg:w="1"/><text x="49.1747%" y="798.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="804" width="0.1792%" height="15" fill="rgb(210,162,52)" fg:x="273" fg:w="1"/><text x="49.1747%" y="814.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="820" width="0.1792%" height="15" fill="rgb(217,216,49)" fg:x="273" fg:w="1"/><text x="49.1747%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="836" width="0.1792%" height="15" fill="rgb(218,146,49)" fg:x="273" fg:w="1"/><text x="49.1747%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="852" width="0.1792%" height="15" fill="rgb(216,55,40)" fg:x="273" fg:w="1"/><text x="49.1747%" y="862.50"></text></g><g><title>at::native::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="48.9247%" y="868" width="0.1792%" height="15" fill="rgb(208,196,21)" fg:x="273" fg:w="1"/><text x="49.1747%" y="878.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="46.9534%" y="564" width="2.3297%" height="15" fill="rgb(242,117,42)" fg:x="262" fg:w="13"/><text x="47.2034%" y="574.50">t..</text></g><g><title>torch::autograd::generated::SubBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="580" width="0.1792%" height="15" fill="rgb(210,11,23)" fg:x="274" fg:w="1"/><text x="49.3539%" y="590.50"></text></g><g><title>at::_ops::neg::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="596" width="0.1792%" height="15" fill="rgb(217,110,2)" fg:x="274" fg:w="1"/><text x="49.3539%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::neg(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="612" width="0.1792%" height="15" fill="rgb(229,77,54)" fg:x="274" fg:w="1"/><text x="49.3539%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::neg (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="628" width="0.1792%" height="15" fill="rgb(218,53,16)" fg:x="274" fg:w="1"/><text x="49.3539%" y="638.50"></text></g><g><title>at::_ops::neg::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="644" width="0.1792%" height="15" fill="rgb(215,38,13)" fg:x="274" fg:w="1"/><text x="49.3539%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_neg(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="49.1039%" y="660" width="0.1792%" height="15" fill="rgb(235,42,18)" fg:x="274" fg:w="1"/><text x="49.3539%" y="670.50"></text></g><g><title>torch::autograd::generated::PowBackward0::release_variables (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="49.2832%" y="564" width="0.7168%" height="15" fill="rgb(219,66,54)" fg:x="275" fg:w="4"/><text x="49.5332%" y="574.50"></text></g><g><title>torch::autograd::SavedVariable::reset_data (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="49.4624%" y="580" width="0.5376%" height="15" fill="rgb(222,205,4)" fg:x="276" fg:w="3"/><text x="49.7124%" y="590.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (3 samples, 0.54%)</title><rect x="49.4624%" y="596" width="0.5376%" height="15" fill="rgb(227,213,46)" fg:x="276" fg:w="3"/><text x="49.7124%" y="606.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (3 samples, 0.54%)</title><rect x="49.4624%" y="612" width="0.5376%" height="15" fill="rgb(250,145,42)" fg:x="276" fg:w="3"/><text x="49.7124%" y="622.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="49.4624%" y="628" width="0.5376%" height="15" fill="rgb(219,15,2)" fg:x="276" fg:w="3"/><text x="49.7124%" y="638.50"></text></g><g><title>free (libc.so.6) (2 samples, 0.36%)</title><rect x="49.6416%" y="644" width="0.3584%" height="15" fill="rgb(231,181,52)" fg:x="277" fg:w="2"/><text x="49.8916%" y="654.50"></text></g><g><title>0x7f34fee9772d (libc.so.6) (2 samples, 0.36%)</title><rect x="49.6416%" y="660" width="0.3584%" height="15" fill="rgb(235,1,42)" fg:x="277" fg:w="2"/><text x="49.8916%" y="670.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="45.3405%" y="548" width="4.8387%" height="15" fill="rgb(249,88,27)" fg:x="253" fg:w="27"/><text x="45.5905%" y="558.50">torch:..</text></g><g><title>torch::autograd::validate_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.0000%" y="564" width="0.1792%" height="15" fill="rgb(235,145,16)" fg:x="279" fg:w="1"/><text x="50.2500%" y="574.50"></text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (42 samples, 7.53%)</title><rect x="42.8315%" y="532" width="7.5269%" height="15" fill="rgb(237,114,19)" fg:x="239" fg:w="42"/><text x="43.0815%" y="542.50">torch::aut..</text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.1792%" y="548" width="0.1792%" height="15" fill="rgb(238,51,50)" fg:x="280" fg:w="1"/><text x="50.4292%" y="558.50"></text></g><g><title>torch::autograd::GraphTask::exec_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.1792%" y="564" width="0.1792%" height="15" fill="rgb(205,194,25)" fg:x="280" fg:w="1"/><text x="50.4292%" y="574.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.1792%" y="580" width="0.1792%" height="15" fill="rgb(215,203,17)" fg:x="280" fg:w="1"/><text x="50.4292%" y="590.50"></text></g><g><title>at::impl::ThreadLocalPythonObjects::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.1792%" y="596" width="0.1792%" height="15" fill="rgb(233,112,49)" fg:x="280" fg:w="1"/><text x="50.4292%" y="606.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="50.1792%" y="612" width="0.1792%" height="15" fill="rgb(241,130,26)" fg:x="280" fg:w="1"/><text x="50.4292%" y="622.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="50.1792%" y="628" width="0.1792%" height="15" fill="rgb(252,223,19)" fg:x="280" fg:w="1"/><text x="50.4292%" y="638.50"></text></g><g><title>0x7f34ff179b34 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="50.1792%" y="644" width="0.1792%" height="15" fill="rgb(211,95,25)" fg:x="280" fg:w="1"/><text x="50.4292%" y="654.50"></text></g><g><title>fast_jacobian (main.cpp:47) (47 samples, 8.42%)</title><rect x="42.1147%" y="340" width="8.4229%" height="15" fill="rgb(251,182,27)" fg:x="235" fg:w="47"/><text x="42.3647%" y="350.50">fast_jacobia..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (47 samples, 8.42%)</title><rect x="42.1147%" y="356" width="8.4229%" height="15" fill="rgb(238,24,4)" fg:x="235" fg:w="47"/><text x="42.3647%" y="366.50">at::Tensor::..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (47 samples, 8.42%)</title><rect x="42.1147%" y="372" width="8.4229%" height="15" fill="rgb(224,220,25)" fg:x="235" fg:w="47"/><text x="42.3647%" y="382.50">c10::optiona..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (47 samples, 8.42%)</title><rect x="42.1147%" y="388" width="8.4229%" height="15" fill="rgb(239,133,26)" fg:x="235" fg:w="47"/><text x="42.3647%" y="398.50">c10::optiona..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (47 samples, 8.42%)</title><rect x="42.1147%" y="404" width="8.4229%" height="15" fill="rgb(211,94,48)" fg:x="235" fg:w="47"/><text x="42.3647%" y="414.50">at::Tensor::..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (47 samples, 8.42%)</title><rect x="42.1147%" y="420" width="8.4229%" height="15" fill="rgb(239,87,6)" fg:x="235" fg:w="47"/><text x="42.3647%" y="430.50">torch::autog..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (47 samples, 8.42%)</title><rect x="42.1147%" y="436" width="8.4229%" height="15" fill="rgb(227,62,0)" fg:x="235" fg:w="47"/><text x="42.3647%" y="446.50">torch::autog..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (45 samples, 8.06%)</title><rect x="42.4731%" y="452" width="8.0645%" height="15" fill="rgb(211,226,4)" fg:x="237" fg:w="45"/><text x="42.7231%" y="462.50">torch::auto..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (45 samples, 8.06%)</title><rect x="42.4731%" y="468" width="8.0645%" height="15" fill="rgb(253,38,52)" fg:x="237" fg:w="45"/><text x="42.7231%" y="478.50">torch::auto..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (45 samples, 8.06%)</title><rect x="42.4731%" y="484" width="8.0645%" height="15" fill="rgb(229,126,40)" fg:x="237" fg:w="45"/><text x="42.7231%" y="494.50">torch::auto..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (44 samples, 7.89%)</title><rect x="42.6523%" y="500" width="7.8853%" height="15" fill="rgb(229,165,44)" fg:x="238" fg:w="44"/><text x="42.9023%" y="510.50">torch::auto..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (44 samples, 7.89%)</title><rect x="42.6523%" y="516" width="7.8853%" height="15" fill="rgb(247,95,47)" fg:x="238" fg:w="44"/><text x="42.9023%" y="526.50">torch::auto..</text></g><g><title>torch::autograd::ReadyQueue::push (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.3584%" y="532" width="0.1792%" height="15" fill="rgb(216,140,30)" fg:x="281" fg:w="1"/><text x="50.6084%" y="542.50"></text></g><g><title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;torch::autograd::NodeTask*, std::vector&lt;torch::autograd::NodeTask, std::allocator&lt;torch::autograd::NodeTask&gt; &gt; &gt;, long, torch::autograd::NodeTask, __gnu_cxx::__ops::_Iter_comp_val&lt;torch::autograd::ReadyQueue::CompareNodeTaskTime&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="50.3584%" y="548" width="0.1792%" height="15" fill="rgb(246,214,8)" fg:x="281" fg:w="1"/><text x="50.6084%" y="558.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (libtorch_python.so) (1 samples, 0.18%)</title><rect x="50.3584%" y="564" width="0.1792%" height="15" fill="rgb(227,224,15)" fg:x="281" fg:w="1"/><text x="50.6084%" y="574.50"></text></g><g><title>0x7f34fee968a2 (libc.so.6) (1 samples, 0.18%)</title><rect x="50.5376%" y="708" width="0.1792%" height="15" fill="rgb(233,175,4)" fg:x="282" fg:w="1"/><text x="50.7876%" y="718.50"></text></g><g><title>rattle_step (main.cpp:101) (104 samples, 18.64%)</title><rect x="32.2581%" y="308" width="18.6380%" height="15" fill="rgb(221,66,45)" fg:x="180" fg:w="104"/><text x="32.5081%" y="318.50">rattle_step (main.cpp:101)</text></g><g><title>at::matmul (matmul.h:27) (74 samples, 13.26%)</title><rect x="37.6344%" y="324" width="13.2616%" height="15" fill="rgb(221,178,18)" fg:x="210" fg:w="74"/><text x="37.8844%" y="334.50">at::matmul (matmul.h..</text></g><g><title>fast_jacobian (main.cpp:54) (2 samples, 0.36%)</title><rect x="50.5376%" y="340" width="0.3584%" height="15" fill="rgb(213,81,29)" fg:x="282" fg:w="2"/><text x="50.7876%" y="350.50"></text></g><g><title>at::_ops::stack::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="356" width="0.3584%" height="15" fill="rgb(220,89,49)" fg:x="282" fg:w="2"/><text x="50.7876%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="372" width="0.3584%" height="15" fill="rgb(227,60,33)" fg:x="282" fg:w="2"/><text x="50.7876%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="388" width="0.3584%" height="15" fill="rgb(205,113,12)" fg:x="282" fg:w="2"/><text x="50.7876%" y="398.50"></text></g><g><title>at::_ops::stack::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="404" width="0.3584%" height="15" fill="rgb(211,32,1)" fg:x="282" fg:w="2"/><text x="50.7876%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__stack(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="420" width="0.3584%" height="15" fill="rgb(246,2,12)" fg:x="282" fg:w="2"/><text x="50.7876%" y="430.50"></text></g><g><title>at::native::stack (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="436" width="0.3584%" height="15" fill="rgb(243,37,27)" fg:x="282" fg:w="2"/><text x="50.7876%" y="446.50"></text></g><g><title>at::_ops::cat::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="452" width="0.3584%" height="15" fill="rgb(248,211,31)" fg:x="282" fg:w="2"/><text x="50.7876%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long), &amp;at::(anonymous namespace)::wrapper_CPU_cat(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::IListRef&lt;at::Tensor&gt; const&amp;, long&gt; &gt;, at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="468" width="0.3584%" height="15" fill="rgb(242,146,47)" fg:x="282" fg:w="2"/><text x="50.7876%" y="478.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_cat (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="484" width="0.3584%" height="15" fill="rgb(206,70,20)" fg:x="282" fg:w="2"/><text x="50.7876%" y="494.50"></text></g><g><title>at::meta::structured_cat::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="500" width="0.3584%" height="15" fill="rgb(215,10,51)" fg:x="282" fg:w="2"/><text x="50.7876%" y="510.50"></text></g><g><title>at::(anonymous namespace)::structured_cat_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="516" width="0.3584%" height="15" fill="rgb(243,178,53)" fg:x="282" fg:w="2"/><text x="50.7876%" y="526.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="532" width="0.3584%" height="15" fill="rgb(233,221,20)" fg:x="282" fg:w="2"/><text x="50.7876%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="548" width="0.3584%" height="15" fill="rgb(218,95,35)" fg:x="282" fg:w="2"/><text x="50.7876%" y="558.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="564" width="0.3584%" height="15" fill="rgb(229,13,5)" fg:x="282" fg:w="2"/><text x="50.7876%" y="574.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="580" width="0.3584%" height="15" fill="rgb(252,164,30)" fg:x="282" fg:w="2"/><text x="50.7876%" y="590.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="596" width="0.3584%" height="15" fill="rgb(232,68,36)" fg:x="282" fg:w="2"/><text x="50.7876%" y="606.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="612" width="0.3584%" height="15" fill="rgb(219,59,54)" fg:x="282" fg:w="2"/><text x="50.7876%" y="622.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="628" width="0.3584%" height="15" fill="rgb(250,92,33)" fg:x="282" fg:w="2"/><text x="50.7876%" y="638.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (2 samples, 0.36%)</title><rect x="50.5376%" y="644" width="0.3584%" height="15" fill="rgb(229,162,54)" fg:x="282" fg:w="2"/><text x="50.7876%" y="654.50"></text></g><g><title>posix_memalign (libc.so.6) (2 samples, 0.36%)</title><rect x="50.5376%" y="660" width="0.3584%" height="15" fill="rgb(244,114,52)" fg:x="282" fg:w="2"/><text x="50.7876%" y="670.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (2 samples, 0.36%)</title><rect x="50.5376%" y="676" width="0.3584%" height="15" fill="rgb(212,211,43)" fg:x="282" fg:w="2"/><text x="50.7876%" y="686.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (2 samples, 0.36%)</title><rect x="50.5376%" y="692" width="0.3584%" height="15" fill="rgb(226,147,8)" fg:x="282" fg:w="2"/><text x="50.7876%" y="702.50"></text></g><g><title>0x7f34fee96969 (libc.so.6) (1 samples, 0.18%)</title><rect x="50.7168%" y="708" width="0.1792%" height="15" fill="rgb(226,23,13)" fg:x="283" fg:w="1"/><text x="50.9668%" y="718.50"></text></g><g><title>0x7f34fee96749 (libc.so.6) (1 samples, 0.18%)</title><rect x="50.7168%" y="724" width="0.1792%" height="15" fill="rgb(240,63,4)" fg:x="283" fg:w="1"/><text x="50.9668%" y="734.50"></text></g><g><title>0x7f34c17ff450 (libtorch_python.so) (1 samples, 0.18%)</title><rect x="50.8961%" y="436" width="0.1792%" height="15" fill="rgb(221,1,32)" fg:x="284" fg:w="1"/><text x="51.1461%" y="446.50"></text></g><g><title>at::_ops::mv::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="436" width="0.1792%" height="15" fill="rgb(242,117,10)" fg:x="285" fg:w="1"/><text x="51.3253%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mv(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="452" width="0.1792%" height="15" fill="rgb(249,172,44)" fg:x="285" fg:w="1"/><text x="51.3253%" y="462.50"></text></g><g><title>at::native::mv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="468" width="0.1792%" height="15" fill="rgb(244,46,45)" fg:x="285" fg:w="1"/><text x="51.3253%" y="478.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="484" width="0.1792%" height="15" fill="rgb(206,43,17)" fg:x="285" fg:w="1"/><text x="51.3253%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="500" width="0.1792%" height="15" fill="rgb(239,218,39)" fg:x="285" fg:w="1"/><text x="51.3253%" y="510.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="516" width="0.1792%" height="15" fill="rgb(208,169,54)" fg:x="285" fg:w="1"/><text x="51.3253%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="532" width="0.1792%" height="15" fill="rgb(247,25,42)" fg:x="285" fg:w="1"/><text x="51.3253%" y="542.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="548" width="0.1792%" height="15" fill="rgb(226,23,31)" fg:x="285" fg:w="1"/><text x="51.3253%" y="558.50"></text></g><g><title>at::native::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="564" width="0.1792%" height="15" fill="rgb(247,16,28)" fg:x="285" fg:w="1"/><text x="51.3253%" y="574.50"></text></g><g><title>at::Context::deterministicAlgorithms (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.0753%" y="580" width="0.1792%" height="15" fill="rgb(231,147,38)" fg:x="285" fg:w="1"/><text x="51.3253%" y="590.50"></text></g><g><title>rattle_step (main.cpp:102) (3 samples, 0.54%)</title><rect x="50.8961%" y="308" width="0.5376%" height="15" fill="rgb(253,81,48)" fg:x="284" fg:w="3"/><text x="51.1461%" y="318.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="324" width="0.5376%" height="15" fill="rgb(249,222,43)" fg:x="284" fg:w="3"/><text x="51.1461%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="340" width="0.5376%" height="15" fill="rgb(221,3,27)" fg:x="284" fg:w="3"/><text x="51.1461%" y="350.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="356" width="0.5376%" height="15" fill="rgb(228,180,5)" fg:x="284" fg:w="3"/><text x="51.1461%" y="366.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="372" width="0.5376%" height="15" fill="rgb(227,131,42)" fg:x="284" fg:w="3"/><text x="51.1461%" y="382.50"></text></g><g><title>at::_ops::mv::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="388" width="0.5376%" height="15" fill="rgb(212,3,39)" fg:x="284" fg:w="3"/><text x="51.1461%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mv(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="404" width="0.5376%" height="15" fill="rgb(226,45,5)" fg:x="284" fg:w="3"/><text x="51.1461%" y="414.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mv (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="50.8961%" y="420" width="0.5376%" height="15" fill="rgb(215,167,45)" fg:x="284" fg:w="3"/><text x="51.1461%" y="430.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (libtorch_python.so) (1 samples, 0.18%)</title><rect x="51.2545%" y="436" width="0.1792%" height="15" fill="rgb(250,218,53)" fg:x="286" fg:w="1"/><text x="51.5045%" y="446.50"></text></g><g><title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::~vector (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.4337%" y="772" width="0.1792%" height="15" fill="rgb(207,140,0)" fg:x="287" fg:w="1"/><text x="51.6837%" y="782.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (2 samples, 0.36%)</title><rect x="51.4337%" y="660" width="0.3584%" height="15" fill="rgb(238,133,51)" fg:x="287" fg:w="2"/><text x="51.6837%" y="670.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (2 samples, 0.36%)</title><rect x="51.4337%" y="676" width="0.3584%" height="15" fill="rgb(218,203,53)" fg:x="287" fg:w="2"/><text x="51.6837%" y="686.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (2 samples, 0.36%)</title><rect x="51.4337%" y="692" width="0.3584%" height="15" fill="rgb(226,184,25)" fg:x="287" fg:w="2"/><text x="51.6837%" y="702.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (2 samples, 0.36%)</title><rect x="51.4337%" y="708" width="0.3584%" height="15" fill="rgb(231,121,21)" fg:x="287" fg:w="2"/><text x="51.6837%" y="718.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="51.4337%" y="724" width="0.3584%" height="15" fill="rgb(251,14,34)" fg:x="287" fg:w="2"/><text x="51.6837%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="51.4337%" y="740" width="0.3584%" height="15" fill="rgb(249,193,11)" fg:x="287" fg:w="2"/><text x="51.6837%" y="750.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="51.4337%" y="756" width="0.3584%" height="15" fill="rgb(220,172,37)" fg:x="287" fg:w="2"/><text x="51.6837%" y="766.50"></text></g><g><title>torch::autograd::Node::Node (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.6129%" y="772" width="0.1792%" height="15" fill="rgb(231,229,43)" fg:x="288" fg:w="1"/><text x="51.8629%" y="782.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.6129%" y="788" width="0.1792%" height="15" fill="rgb(250,161,5)" fg:x="288" fg:w="1"/><text x="51.8629%" y="798.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="51.6129%" y="804" width="0.1792%" height="15" fill="rgb(218,225,18)" fg:x="288" fg:w="1"/><text x="51.8629%" y="814.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.7921%" y="756" width="0.1792%" height="15" fill="rgb(245,45,42)" fg:x="289" fg:w="1"/><text x="52.0421%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.7921%" y="772" width="0.1792%" height="15" fill="rgb(211,115,1)" fg:x="289" fg:w="1"/><text x="52.0421%" y="782.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="51.7921%" y="788" width="0.1792%" height="15" fill="rgb(248,133,52)" fg:x="289" fg:w="1"/><text x="52.0421%" y="798.50"></text></g><g><title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (libc10.so) (1 samples, 0.18%)</title><rect x="51.9713%" y="756" width="0.1792%" height="15" fill="rgb(238,100,21)" fg:x="290" fg:w="1"/><text x="52.2213%" y="766.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (3 samples, 0.54%)</title><rect x="51.7921%" y="660" width="0.5376%" height="15" fill="rgb(247,144,11)" fg:x="289" fg:w="3"/><text x="52.0421%" y="670.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (3 samples, 0.54%)</title><rect x="51.7921%" y="676" width="0.5376%" height="15" fill="rgb(206,164,16)" fg:x="289" fg:w="3"/><text x="52.0421%" y="686.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (3 samples, 0.54%)</title><rect x="51.7921%" y="692" width="0.5376%" height="15" fill="rgb(222,34,3)" fg:x="289" fg:w="3"/><text x="52.0421%" y="702.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="51.7921%" y="708" width="0.5376%" height="15" fill="rgb(248,82,4)" fg:x="289" fg:w="3"/><text x="52.0421%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="51.7921%" y="724" width="0.5376%" height="15" fill="rgb(228,81,46)" fg:x="289" fg:w="3"/><text x="52.0421%" y="734.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="51.7921%" y="740" width="0.5376%" height="15" fill="rgb(227,67,47)" fg:x="289" fg:w="3"/><text x="52.0421%" y="750.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.1505%" y="756" width="0.1792%" height="15" fill="rgb(215,93,53)" fg:x="291" fg:w="1"/><text x="52.4005%" y="766.50"></text></g><g><title>c10::TensorImpl::_fw_grad (libc10.so) (1 samples, 0.18%)</title><rect x="52.1505%" y="772" width="0.1792%" height="15" fill="rgb(248,194,39)" fg:x="291" fg:w="1"/><text x="52.4005%" y="782.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.5090%" y="708" width="0.1792%" height="15" fill="rgb(215,5,19)" fg:x="293" fg:w="1"/><text x="52.7590%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.5090%" y="724" width="0.1792%" height="15" fill="rgb(226,215,51)" fg:x="293" fg:w="1"/><text x="52.7590%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.5090%" y="740" width="0.1792%" height="15" fill="rgb(225,56,26)" fg:x="293" fg:w="1"/><text x="52.7590%" y="750.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.5090%" y="756" width="0.1792%" height="15" fill="rgb(222,75,29)" fg:x="293" fg:w="1"/><text x="52.7590%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.5090%" y="772" width="0.1792%" height="15" fill="rgb(236,139,6)" fg:x="293" fg:w="1"/><text x="52.7590%" y="782.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="52.3297%" y="660" width="0.5376%" height="15" fill="rgb(223,137,36)" fg:x="292" fg:w="3"/><text x="52.5797%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="52.3297%" y="676" width="0.5376%" height="15" fill="rgb(226,99,2)" fg:x="292" fg:w="3"/><text x="52.5797%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="52.5090%" y="692" width="0.3584%" height="15" fill="rgb(206,133,23)" fg:x="293" fg:w="2"/><text x="52.7590%" y="702.50"></text></g><g><title>torch::autograd::isFwGradDefined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.6882%" y="708" width="0.1792%" height="15" fill="rgb(243,173,15)" fg:x="294" fg:w="1"/><text x="52.9382%" y="718.50"></text></g><g><title>torch::autograd::AutogradMeta::fw_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.6882%" y="724" width="0.1792%" height="15" fill="rgb(228,69,28)" fg:x="294" fg:w="1"/><text x="52.9382%" y="734.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="52.6882%" y="740" width="0.1792%" height="15" fill="rgb(212,51,22)" fg:x="294" fg:w="1"/><text x="52.9382%" y="750.50"></text></g><g><title>at::pow (pow.h:64) (1 samples, 0.18%)</title><rect x="52.8674%" y="660" width="0.1792%" height="15" fill="rgb(227,113,0)" fg:x="295" fg:w="1"/><text x="53.1174%" y="670.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="52.8674%" y="676" width="0.1792%" height="15" fill="rgb(252,84,27)" fg:x="295" fg:w="1"/><text x="53.1174%" y="686.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="52.8674%" y="692" width="0.1792%" height="15" fill="rgb(223,145,39)" fg:x="295" fg:w="1"/><text x="53.1174%" y="702.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="52.8674%" y="708" width="0.1792%" height="15" fill="rgb(239,219,30)" fg:x="295" fg:w="1"/><text x="53.1174%" y="718.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="724" width="0.1792%" height="15" fill="rgb(224,196,39)" fg:x="295" fg:w="1"/><text x="53.1174%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="740" width="0.1792%" height="15" fill="rgb(205,35,43)" fg:x="295" fg:w="1"/><text x="53.1174%" y="750.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="756" width="0.1792%" height="15" fill="rgb(228,201,21)" fg:x="295" fg:w="1"/><text x="53.1174%" y="766.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="772" width="0.1792%" height="15" fill="rgb(237,118,16)" fg:x="295" fg:w="1"/><text x="53.1174%" y="782.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="788" width="0.1792%" height="15" fill="rgb(241,17,19)" fg:x="295" fg:w="1"/><text x="53.1174%" y="798.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="804" width="0.1792%" height="15" fill="rgb(214,10,25)" fg:x="295" fg:w="1"/><text x="53.1174%" y="814.50"></text></g><g><title>at::native::structured_sub_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="820" width="0.1792%" height="15" fill="rgb(238,37,29)" fg:x="295" fg:w="1"/><text x="53.1174%" y="830.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="836" width="0.1792%" height="15" fill="rgb(253,83,25)" fg:x="295" fg:w="1"/><text x="53.1174%" y="846.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="852" width="0.1792%" height="15" fill="rgb(234,192,12)" fg:x="295" fg:w="1"/><text x="53.1174%" y="862.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="868" width="0.1792%" height="15" fill="rgb(241,216,45)" fg:x="295" fg:w="1"/><text x="53.1174%" y="878.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="52.8674%" y="884" width="0.1792%" height="15" fill="rgb(242,22,33)" fg:x="295" fg:w="1"/><text x="53.1174%" y="894.50"></text></g><g><title>operator+ (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="53.0466%" y="660" width="0.1792%" height="15" fill="rgb(231,105,49)" fg:x="296" fg:w="1"/><text x="53.2966%" y="670.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="53.0466%" y="676" width="0.1792%" height="15" fill="rgb(218,204,15)" fg:x="296" fg:w="1"/><text x="53.2966%" y="686.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="53.0466%" y="692" width="0.1792%" height="15" fill="rgb(235,138,41)" fg:x="296" fg:w="1"/><text x="53.2966%" y="702.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.0466%" y="708" width="0.1792%" height="15" fill="rgb(246,0,9)" fg:x="296" fg:w="1"/><text x="53.2966%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.0466%" y="724" width="0.1792%" height="15" fill="rgb(210,74,4)" fg:x="296" fg:w="1"/><text x="53.2966%" y="734.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.0466%" y="740" width="0.1792%" height="15" fill="rgb(250,60,41)" fg:x="296" fg:w="1"/><text x="53.2966%" y="750.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (libtorch_python.so) (1 samples, 0.18%)</title><rect x="53.0466%" y="756" width="0.1792%" height="15" fill="rgb(220,115,12)" fg:x="296" fg:w="1"/><text x="53.2966%" y="766.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (11 samples, 1.97%)</title><rect x="51.4337%" y="404" width="1.9713%" height="15" fill="rgb(237,100,13)" fg:x="287" fg:w="11"/><text x="51.6837%" y="414.50">f..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (11 samples, 1.97%)</title><rect x="51.4337%" y="420" width="1.9713%" height="15" fill="rgb(213,55,26)" fg:x="287" fg:w="11"/><text x="51.6837%" y="430.50">a..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (11 samples, 1.97%)</title><rect x="51.4337%" y="436" width="1.9713%" height="15" fill="rgb(216,17,4)" fg:x="287" fg:w="11"/><text x="51.6837%" y="446.50">a..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (11 samples, 1.97%)</title><rect x="51.4337%" y="452" width="1.9713%" height="15" fill="rgb(220,153,47)" fg:x="287" fg:w="11"/><text x="51.6837%" y="462.50">c..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (11 samples, 1.97%)</title><rect x="51.4337%" y="468" width="1.9713%" height="15" fill="rgb(215,131,9)" fg:x="287" fg:w="11"/><text x="51.6837%" y="478.50">c..</text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (11 samples, 1.97%)</title><rect x="51.4337%" y="484" width="1.9713%" height="15" fill="rgb(233,46,42)" fg:x="287" fg:w="11"/><text x="51.6837%" y="494.50">s..</text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (11 samples, 1.97%)</title><rect x="51.4337%" y="500" width="1.9713%" height="15" fill="rgb(226,86,7)" fg:x="287" fg:w="11"/><text x="51.6837%" y="510.50">s..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (11 samples, 1.97%)</title><rect x="51.4337%" y="516" width="1.9713%" height="15" fill="rgb(239,226,21)" fg:x="287" fg:w="11"/><text x="51.6837%" y="526.50">s..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (11 samples, 1.97%)</title><rect x="51.4337%" y="532" width="1.9713%" height="15" fill="rgb(244,137,22)" fg:x="287" fg:w="11"/><text x="51.6837%" y="542.50">s..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (11 samples, 1.97%)</title><rect x="51.4337%" y="548" width="1.9713%" height="15" fill="rgb(211,139,35)" fg:x="287" fg:w="11"/><text x="51.6837%" y="558.50">s..</text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (11 samples, 1.97%)</title><rect x="51.4337%" y="564" width="1.9713%" height="15" fill="rgb(214,62,50)" fg:x="287" fg:w="11"/><text x="51.6837%" y="574.50">s..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (11 samples, 1.97%)</title><rect x="51.4337%" y="580" width="1.9713%" height="15" fill="rgb(212,113,44)" fg:x="287" fg:w="11"/><text x="51.6837%" y="590.50">s..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (11 samples, 1.97%)</title><rect x="51.4337%" y="596" width="1.9713%" height="15" fill="rgb(226,150,43)" fg:x="287" fg:w="11"/><text x="51.6837%" y="606.50">a..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (11 samples, 1.97%)</title><rect x="51.4337%" y="612" width="1.9713%" height="15" fill="rgb(250,71,37)" fg:x="287" fg:w="11"/><text x="51.6837%" y="622.50">a..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (11 samples, 1.97%)</title><rect x="51.4337%" y="628" width="1.9713%" height="15" fill="rgb(219,76,19)" fg:x="287" fg:w="11"/><text x="51.6837%" y="638.50">c..</text></g><g><title>my_length_constraint (main.cpp:268) (11 samples, 1.97%)</title><rect x="51.4337%" y="644" width="1.9713%" height="15" fill="rgb(250,39,11)" fg:x="287" fg:w="11"/><text x="51.6837%" y="654.50">m..</text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="53.2258%" y="660" width="0.1792%" height="15" fill="rgb(230,64,31)" fg:x="297" fg:w="1"/><text x="53.4758%" y="670.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="53.2258%" y="676" width="0.1792%" height="15" fill="rgb(208,222,23)" fg:x="297" fg:w="1"/><text x="53.4758%" y="686.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="53.2258%" y="692" width="0.1792%" height="15" fill="rgb(227,125,18)" fg:x="297" fg:w="1"/><text x="53.4758%" y="702.50"></text></g><g><title>std::__shared_ptr&lt;torch::autograd::GraphTask, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;torch::autograd::GraphTask&gt;, bool&amp;, bool&amp;, int, std::shared_ptr&lt;torch::autograd::ReadyQueue&gt;&amp;, c10::SmallVector&lt;torch::autograd::Node*, (unsigned int)4&gt; &gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="53.4050%" y="564" width="0.3584%" height="15" fill="rgb(234,210,9)" fg:x="298" fg:w="2"/><text x="53.6550%" y="574.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="53.4050%" y="580" width="0.3584%" height="15" fill="rgb(217,127,24)" fg:x="298" fg:w="2"/><text x="53.6550%" y="590.50"></text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, true&gt; const*)#1}&gt; (libtorch_python.so) (2 samples, 0.36%)</title><rect x="53.4050%" y="596" width="0.3584%" height="15" fill="rgb(239,141,48)" fg:x="298" fg:w="2"/><text x="53.6550%" y="606.50"></text></g><g><title>torch::autograd::Engine::compute_dependencies (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.7634%" y="564" width="0.1792%" height="15" fill="rgb(227,109,8)" fg:x="300" fg:w="1"/><text x="54.0134%" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="53.7634%" y="580" width="0.1792%" height="15" fill="rgb(235,184,23)" fg:x="300" fg:w="1"/><text x="54.0134%" y="590.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="53.7634%" y="596" width="0.1792%" height="15" fill="rgb(227,226,48)" fg:x="300" fg:w="1"/><text x="54.0134%" y="606.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.9427%" y="628" width="0.1792%" height="15" fill="rgb(206,150,11)" fg:x="301" fg:w="1"/><text x="54.1927%" y="638.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.9427%" y="644" width="0.1792%" height="15" fill="rgb(254,2,33)" fg:x="301" fg:w="1"/><text x="54.1927%" y="654.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="53.9427%" y="660" width="0.1792%" height="15" fill="rgb(243,160,20)" fg:x="301" fg:w="1"/><text x="54.1927%" y="670.50"></text></g><g><title>at::SavedTensorDefaultHooks::set_tls_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="54.1219%" y="628" width="0.1792%" height="15" fill="rgb(218,208,30)" fg:x="302" fg:w="1"/><text x="54.3719%" y="638.50"></text></g><g><title>std::deque&lt;std::pair&lt;_object*, _object*&gt;, std::allocator&lt;std::pair&lt;_object*, _object*&gt; &gt; &gt;::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="54.1219%" y="644" width="0.1792%" height="15" fill="rgb(224,120,49)" fg:x="302" fg:w="1"/><text x="54.3719%" y="654.50"></text></g><g><title>at::impl::PythonTorchFunctionTLS::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="54.3011%" y="628" width="0.1792%" height="15" fill="rgb(246,12,2)" fg:x="303" fg:w="1"/><text x="54.5511%" y="638.50"></text></g><g><title>__tls_init (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="54.3011%" y="644" width="0.1792%" height="15" fill="rgb(236,117,3)" fg:x="303" fg:w="1"/><text x="54.5511%" y="654.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.3011%" y="660" width="0.1792%" height="15" fill="rgb(216,128,52)" fg:x="303" fg:w="1"/><text x="54.5511%" y="670.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.3011%" y="676" width="0.1792%" height="15" fill="rgb(246,145,19)" fg:x="303" fg:w="1"/><text x="54.5511%" y="686.50"></text></g><g><title>0x7f34ff179b34 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.3011%" y="692" width="0.1792%" height="15" fill="rgb(222,11,46)" fg:x="303" fg:w="1"/><text x="54.5511%" y="702.50"></text></g><g><title>at::impl::ThreadLocalPythonObjects::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="54.4803%" y="628" width="0.1792%" height="15" fill="rgb(245,82,36)" fg:x="304" fg:w="1"/><text x="54.7303%" y="638.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.4803%" y="644" width="0.1792%" height="15" fill="rgb(250,73,51)" fg:x="304" fg:w="1"/><text x="54.7303%" y="654.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.4803%" y="660" width="0.1792%" height="15" fill="rgb(221,189,23)" fg:x="304" fg:w="1"/><text x="54.7303%" y="670.50"></text></g><g><title>0x7f34ff179cb3 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="54.4803%" y="676" width="0.1792%" height="15" fill="rgb(210,33,7)" fg:x="304" fg:w="1"/><text x="54.7303%" y="686.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="53.9427%" y="612" width="0.8961%" height="15" fill="rgb(210,107,22)" fg:x="301" fg:w="5"/><text x="54.1927%" y="622.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::set_state (libc10.so) (1 samples, 0.18%)</title><rect x="54.6595%" y="628" width="0.1792%" height="15" fill="rgb(222,116,37)" fg:x="305" fg:w="1"/><text x="54.9095%" y="638.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="644" width="0.1792%" height="15" fill="rgb(254,17,48)" fg:x="306" fg:w="1"/><text x="55.0887%" y="654.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="660" width="0.1792%" height="15" fill="rgb(224,36,32)" fg:x="306" fg:w="1"/><text x="55.0887%" y="670.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="676" width="0.1792%" height="15" fill="rgb(232,90,46)" fg:x="306" fg:w="1"/><text x="55.0887%" y="686.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="692" width="0.1792%" height="15" fill="rgb(241,66,40)" fg:x="306" fg:w="1"/><text x="55.0887%" y="702.50"></text></g><g><title>c10::DefaultCPUAllocator::ReportAndDelete (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="708" width="0.1792%" height="15" fill="rgb(249,184,29)" fg:x="306" fg:w="1"/><text x="55.0887%" y="718.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::Delete (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="724" width="0.1792%" height="15" fill="rgb(231,181,1)" fg:x="306" fg:w="1"/><text x="55.0887%" y="734.50"></text></g><g><title>c10::memoryProfilingEnabled (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="740" width="0.1792%" height="15" fill="rgb(224,94,2)" fg:x="306" fg:w="1"/><text x="55.0887%" y="750.50"></text></g><g><title>c10::ThreadLocalDebugInfo::get (libc10.so) (1 samples, 0.18%)</title><rect x="54.8387%" y="756" width="0.1792%" height="15" fill="rgb(229,170,15)" fg:x="306" fg:w="1"/><text x="55.0887%" y="766.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (libtorch_python.so) (2 samples, 0.36%)</title><rect x="54.8387%" y="628" width="0.3584%" height="15" fill="rgb(240,127,35)" fg:x="306" fg:w="2"/><text x="55.0887%" y="638.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="55.0179%" y="644" width="0.1792%" height="15" fill="rgb(248,196,34)" fg:x="307" fg:w="1"/><text x="55.2679%" y="654.50"></text></g><g><title>0x7f34fee97a21 (libc.so.6) (1 samples, 0.18%)</title><rect x="55.0179%" y="660" width="0.1792%" height="15" fill="rgb(236,137,7)" fg:x="307" fg:w="1"/><text x="55.2679%" y="670.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="628" width="0.1792%" height="15" fill="rgb(235,127,16)" fg:x="308" fg:w="1"/><text x="55.4471%" y="638.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="644" width="0.1792%" height="15" fill="rgb(250,192,54)" fg:x="308" fg:w="1"/><text x="55.4471%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="660" width="0.1792%" height="15" fill="rgb(218,98,20)" fg:x="308" fg:w="1"/><text x="55.4471%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="676" width="0.1792%" height="15" fill="rgb(230,176,47)" fg:x="308" fg:w="1"/><text x="55.4471%" y="686.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="692" width="0.1792%" height="15" fill="rgb(244,2,33)" fg:x="308" fg:w="1"/><text x="55.4471%" y="702.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="708" width="0.1792%" height="15" fill="rgb(231,100,17)" fg:x="308" fg:w="1"/><text x="55.4471%" y="718.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="724" width="0.1792%" height="15" fill="rgb(245,23,12)" fg:x="308" fg:w="1"/><text x="55.4471%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="740" width="0.1792%" height="15" fill="rgb(249,55,22)" fg:x="308" fg:w="1"/><text x="55.4471%" y="750.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="756" width="0.1792%" height="15" fill="rgb(207,134,9)" fg:x="308" fg:w="1"/><text x="55.4471%" y="766.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="772" width="0.1792%" height="15" fill="rgb(218,134,0)" fg:x="308" fg:w="1"/><text x="55.4471%" y="782.50"></text></g><g><title>at::TensorIteratorBase::cast_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.1971%" y="788" width="0.1792%" height="15" fill="rgb(213,212,33)" fg:x="308" fg:w="1"/><text x="55.4471%" y="798.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="644" width="0.1792%" height="15" fill="rgb(252,106,18)" fg:x="309" fg:w="1"/><text x="55.6263%" y="654.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="660" width="0.1792%" height="15" fill="rgb(208,126,42)" fg:x="309" fg:w="1"/><text x="55.6263%" y="670.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="676" width="0.1792%" height="15" fill="rgb(246,175,29)" fg:x="309" fg:w="1"/><text x="55.6263%" y="686.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="692" width="0.1792%" height="15" fill="rgb(215,13,50)" fg:x="309" fg:w="1"/><text x="55.6263%" y="702.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="708" width="0.1792%" height="15" fill="rgb(216,172,15)" fg:x="309" fg:w="1"/><text x="55.6263%" y="718.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="724" width="0.1792%" height="15" fill="rgb(212,103,13)" fg:x="309" fg:w="1"/><text x="55.6263%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="740" width="0.1792%" height="15" fill="rgb(231,171,36)" fg:x="309" fg:w="1"/><text x="55.6263%" y="750.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="756" width="0.1792%" height="15" fill="rgb(250,123,20)" fg:x="309" fg:w="1"/><text x="55.6263%" y="766.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="772" width="0.1792%" height="15" fill="rgb(212,53,50)" fg:x="309" fg:w="1"/><text x="55.6263%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="788" width="0.1792%" height="15" fill="rgb(243,54,12)" fg:x="309" fg:w="1"/><text x="55.6263%" y="798.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="804" width="0.1792%" height="15" fill="rgb(234,101,34)" fg:x="309" fg:w="1"/><text x="55.6263%" y="814.50"></text></g><g><title>at::TensorIteratorBase::compute_types (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.3763%" y="820" width="0.1792%" height="15" fill="rgb(254,67,22)" fg:x="309" fg:w="1"/><text x="55.6263%" y="830.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="54.8387%" y="612" width="0.8961%" height="15" fill="rgb(250,35,47)" fg:x="306" fg:w="5"/><text x="55.0887%" y="622.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="55.3763%" y="628" width="0.3584%" height="15" fill="rgb(226,126,38)" fg:x="309" fg:w="2"/><text x="55.6263%" y="638.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="644" width="0.1792%" height="15" fill="rgb(216,138,53)" fg:x="310" fg:w="1"/><text x="55.8056%" y="654.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="660" width="0.1792%" height="15" fill="rgb(246,199,43)" fg:x="310" fg:w="1"/><text x="55.8056%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="676" width="0.1792%" height="15" fill="rgb(232,125,11)" fg:x="310" fg:w="1"/><text x="55.8056%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="692" width="0.1792%" height="15" fill="rgb(218,219,45)" fg:x="310" fg:w="1"/><text x="55.8056%" y="702.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="708" width="0.1792%" height="15" fill="rgb(216,102,54)" fg:x="310" fg:w="1"/><text x="55.8056%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="724" width="0.1792%" height="15" fill="rgb(250,228,7)" fg:x="310" fg:w="1"/><text x="55.8056%" y="734.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="740" width="0.1792%" height="15" fill="rgb(226,125,25)" fg:x="310" fg:w="1"/><text x="55.8056%" y="750.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="756" width="0.1792%" height="15" fill="rgb(224,165,27)" fg:x="310" fg:w="1"/><text x="55.8056%" y="766.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="772" width="0.1792%" height="15" fill="rgb(233,86,3)" fg:x="310" fg:w="1"/><text x="55.8056%" y="782.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="788" width="0.1792%" height="15" fill="rgb(228,116,20)" fg:x="310" fg:w="1"/><text x="55.8056%" y="798.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="804" width="0.1792%" height="15" fill="rgb(209,192,17)" fg:x="310" fg:w="1"/><text x="55.8056%" y="814.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="820" width="0.1792%" height="15" fill="rgb(224,88,34)" fg:x="310" fg:w="1"/><text x="55.8056%" y="830.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="836" width="0.1792%" height="15" fill="rgb(233,38,6)" fg:x="310" fg:w="1"/><text x="55.8056%" y="846.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.5556%" y="852" width="0.1792%" height="15" fill="rgb(212,59,30)" fg:x="310" fg:w="1"/><text x="55.8056%" y="862.50"></text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (11 samples, 1.97%)</title><rect x="53.9427%" y="596" width="1.9713%" height="15" fill="rgb(213,80,3)" fg:x="301" fg:w="11"/><text x="54.1927%" y="606.50">t..</text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="612" width="0.1792%" height="15" fill="rgb(251,178,7)" fg:x="311" fg:w="1"/><text x="55.9848%" y="622.50"></text></g><g><title>torch::autograd::GraphTask::exec_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="628" width="0.1792%" height="15" fill="rgb(213,154,26)" fg:x="311" fg:w="1"/><text x="55.9848%" y="638.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="644" width="0.1792%" height="15" fill="rgb(238,165,49)" fg:x="311" fg:w="1"/><text x="55.9848%" y="654.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="660" width="0.1792%" height="15" fill="rgb(248,91,46)" fg:x="311" fg:w="1"/><text x="55.9848%" y="670.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="676" width="0.1792%" height="15" fill="rgb(244,21,52)" fg:x="311" fg:w="1"/><text x="55.9848%" y="686.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="692" width="0.1792%" height="15" fill="rgb(247,122,20)" fg:x="311" fg:w="1"/><text x="55.9848%" y="702.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.7348%" y="708" width="0.1792%" height="15" fill="rgb(218,27,9)" fg:x="311" fg:w="1"/><text x="55.9848%" y="718.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="55.7348%" y="724" width="0.1792%" height="15" fill="rgb(246,7,6)" fg:x="311" fg:w="1"/><text x="55.9848%" y="734.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="55.7348%" y="740" width="0.1792%" height="15" fill="rgb(227,135,54)" fg:x="311" fg:w="1"/><text x="55.9848%" y="750.50"></text></g><g><title>0x7f34ff179b4f (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="55.7348%" y="756" width="0.1792%" height="15" fill="rgb(247,14,11)" fg:x="311" fg:w="1"/><text x="55.9848%" y="766.50"></text></g><g><title>fast_jacobian (main.cpp:47) (15 samples, 2.69%)</title><rect x="53.4050%" y="404" width="2.6882%" height="15" fill="rgb(206,149,34)" fg:x="298" fg:w="15"/><text x="53.6550%" y="414.50">fa..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (15 samples, 2.69%)</title><rect x="53.4050%" y="420" width="2.6882%" height="15" fill="rgb(227,228,4)" fg:x="298" fg:w="15"/><text x="53.6550%" y="430.50">at..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (15 samples, 2.69%)</title><rect x="53.4050%" y="436" width="2.6882%" height="15" fill="rgb(238,218,28)" fg:x="298" fg:w="15"/><text x="53.6550%" y="446.50">c1..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (15 samples, 2.69%)</title><rect x="53.4050%" y="452" width="2.6882%" height="15" fill="rgb(252,86,40)" fg:x="298" fg:w="15"/><text x="53.6550%" y="462.50">c1..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="468" width="2.6882%" height="15" fill="rgb(251,225,11)" fg:x="298" fg:w="15"/><text x="53.6550%" y="478.50">at..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="484" width="2.6882%" height="15" fill="rgb(206,46,49)" fg:x="298" fg:w="15"/><text x="53.6550%" y="494.50">to..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="500" width="2.6882%" height="15" fill="rgb(245,128,24)" fg:x="298" fg:w="15"/><text x="53.6550%" y="510.50">to..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="516" width="2.6882%" height="15" fill="rgb(219,177,34)" fg:x="298" fg:w="15"/><text x="53.6550%" y="526.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="532" width="2.6882%" height="15" fill="rgb(218,60,48)" fg:x="298" fg:w="15"/><text x="53.6550%" y="542.50">to..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="53.4050%" y="548" width="2.6882%" height="15" fill="rgb(221,11,5)" fg:x="298" fg:w="15"/><text x="53.6550%" y="558.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (12 samples, 2.15%)</title><rect x="53.9427%" y="564" width="2.1505%" height="15" fill="rgb(220,148,13)" fg:x="301" fg:w="12"/><text x="54.1927%" y="574.50">t..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (12 samples, 2.15%)</title><rect x="53.9427%" y="580" width="2.1505%" height="15" fill="rgb(210,16,3)" fg:x="301" fg:w="12"/><text x="54.1927%" y="590.50">t..</text></g><g><title>torch::autograd::ReadyQueue::push (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="55.9140%" y="596" width="0.1792%" height="15" fill="rgb(236,80,2)" fg:x="312" fg:w="1"/><text x="56.1640%" y="606.50"></text></g><g><title>rattle_step (main.cpp:113) (27 samples, 4.84%)</title><rect x="51.4337%" y="308" width="4.8387%" height="15" fill="rgb(239,129,19)" fg:x="287" fg:w="27"/><text x="51.6837%" y="318.50">rattle..</text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (27 samples, 4.84%)</title><rect x="51.4337%" y="324" width="4.8387%" height="15" fill="rgb(220,106,35)" fg:x="287" fg:w="27"/><text x="51.6837%" y="334.50">at::Te..</text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (27 samples, 4.84%)</title><rect x="51.4337%" y="340" width="4.8387%" height="15" fill="rgb(252,139,45)" fg:x="287" fg:w="27"/><text x="51.6837%" y="350.50">at::Te..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (27 samples, 4.84%)</title><rect x="51.4337%" y="356" width="4.8387%" height="15" fill="rgb(229,8,36)" fg:x="287" fg:w="27"/><text x="51.6837%" y="366.50">c10::i..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (27 samples, 4.84%)</title><rect x="51.4337%" y="372" width="4.8387%" height="15" fill="rgb(230,126,33)" fg:x="287" fg:w="27"/><text x="51.6837%" y="382.50">c10::i..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (27 samples, 4.84%)</title><rect x="51.4337%" y="388" width="4.8387%" height="15" fill="rgb(239,140,21)" fg:x="287" fg:w="27"/><text x="51.6837%" y="398.50">c10::i..</text></g><g><title>fast_jacobian (main.cpp:50) (1 samples, 0.18%)</title><rect x="56.0932%" y="404" width="0.1792%" height="15" fill="rgb(254,104,9)" fg:x="313" fg:w="1"/><text x="56.3432%" y="414.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="56.0932%" y="420" width="0.1792%" height="15" fill="rgb(239,52,14)" fg:x="313" fg:w="1"/><text x="56.3432%" y="430.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="56.0932%" y="436" width="0.1792%" height="15" fill="rgb(208,227,44)" fg:x="313" fg:w="1"/><text x="56.3432%" y="446.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="56.0932%" y="452" width="0.1792%" height="15" fill="rgb(246,18,19)" fg:x="313" fg:w="1"/><text x="56.3432%" y="462.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (1 samples, 0.18%)</title><rect x="56.0932%" y="468" width="0.1792%" height="15" fill="rgb(235,228,25)" fg:x="313" fg:w="1"/><text x="56.3432%" y="478.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (1 samples, 0.18%)</title><rect x="56.0932%" y="484" width="0.1792%" height="15" fill="rgb(240,156,20)" fg:x="313" fg:w="1"/><text x="56.3432%" y="494.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="56.0932%" y="500" width="0.1792%" height="15" fill="rgb(224,8,20)" fg:x="313" fg:w="1"/><text x="56.3432%" y="510.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="56.0932%" y="516" width="0.1792%" height="15" fill="rgb(214,12,52)" fg:x="313" fg:w="1"/><text x="56.3432%" y="526.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.0932%" y="532" width="0.1792%" height="15" fill="rgb(211,220,47)" fg:x="313" fg:w="1"/><text x="56.3432%" y="542.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.0932%" y="548" width="0.1792%" height="15" fill="rgb(250,173,5)" fg:x="313" fg:w="1"/><text x="56.3432%" y="558.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.0932%" y="564" width="0.1792%" height="15" fill="rgb(250,125,52)" fg:x="313" fg:w="1"/><text x="56.3432%" y="574.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="56.0932%" y="580" width="0.1792%" height="15" fill="rgb(209,133,18)" fg:x="313" fg:w="1"/><text x="56.3432%" y="590.50"></text></g><g><title>0x7f34fee979ad (libc.so.6) (1 samples, 0.18%)</title><rect x="56.0932%" y="596" width="0.1792%" height="15" fill="rgb(216,173,22)" fg:x="313" fg:w="1"/><text x="56.3432%" y="606.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (1 samples, 0.18%)</title><rect x="56.2724%" y="596" width="0.1792%" height="15" fill="rgb(205,3,22)" fg:x="314" fg:w="1"/><text x="56.5224%" y="606.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (1 samples, 0.18%)</title><rect x="56.2724%" y="612" width="0.1792%" height="15" fill="rgb(248,22,20)" fg:x="314" fg:w="1"/><text x="56.5224%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (1 samples, 0.18%)</title><rect x="56.2724%" y="628" width="0.1792%" height="15" fill="rgb(233,6,29)" fg:x="314" fg:w="1"/><text x="56.5224%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (1 samples, 0.18%)</title><rect x="56.2724%" y="644" width="0.1792%" height="15" fill="rgb(240,22,54)" fg:x="314" fg:w="1"/><text x="56.5224%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.2724%" y="660" width="0.1792%" height="15" fill="rgb(231,133,32)" fg:x="314" fg:w="1"/><text x="56.5224%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.2724%" y="676" width="0.1792%" height="15" fill="rgb(248,193,4)" fg:x="314" fg:w="1"/><text x="56.5224%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.2724%" y="692" width="0.1792%" height="15" fill="rgb(211,178,46)" fg:x="314" fg:w="1"/><text x="56.5224%" y="702.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (libtorch_python.so) (1 samples, 0.18%)</title><rect x="56.2724%" y="708" width="0.1792%" height="15" fill="rgb(224,5,42)" fg:x="314" fg:w="1"/><text x="56.5224%" y="718.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.4516%" y="804" width="0.1792%" height="15" fill="rgb(239,176,25)" fg:x="315" fg:w="1"/><text x="56.7016%" y="814.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.4516%" y="820" width="0.1792%" height="15" fill="rgb(245,187,50)" fg:x="315" fg:w="1"/><text x="56.7016%" y="830.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.4516%" y="836" width="0.1792%" height="15" fill="rgb(248,24,15)" fg:x="315" fg:w="1"/><text x="56.7016%" y="846.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuildActiveCallbacksIfNeeded (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="56.4516%" y="852" width="0.1792%" height="15" fill="rgb(205,166,13)" fg:x="315" fg:w="1"/><text x="56.7016%" y="862.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="56.4516%" y="868" width="0.1792%" height="15" fill="rgb(208,114,23)" fg:x="315" fg:w="1"/><text x="56.7016%" y="878.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="56.4516%" y="884" width="0.1792%" height="15" fill="rgb(239,127,18)" fg:x="315" fg:w="1"/><text x="56.7016%" y="894.50"></text></g><g><title>0x7f34ff179b00 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="56.4516%" y="900" width="0.1792%" height="15" fill="rgb(219,154,28)" fg:x="315" fg:w="1"/><text x="56.7016%" y="910.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="56.4516%" y="740" width="0.3584%" height="15" fill="rgb(225,157,23)" fg:x="315" fg:w="2"/><text x="56.7016%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="56.4516%" y="756" width="0.3584%" height="15" fill="rgb(219,8,6)" fg:x="315" fg:w="2"/><text x="56.7016%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="56.4516%" y="772" width="0.3584%" height="15" fill="rgb(212,47,6)" fg:x="315" fg:w="2"/><text x="56.7016%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="56.4516%" y="788" width="0.3584%" height="15" fill="rgb(224,190,4)" fg:x="315" fg:w="2"/><text x="56.7016%" y="798.50"></text></g><g><title>c10::SymInt::sym_lt (libc10.so) (1 samples, 0.18%)</title><rect x="56.6308%" y="804" width="0.1792%" height="15" fill="rgb(239,183,29)" fg:x="316" fg:w="1"/><text x="56.8808%" y="814.50"></text></g><g><title>c10::SymInt::maybe_as_int (libc10.so) (1 samples, 0.18%)</title><rect x="56.6308%" y="820" width="0.1792%" height="15" fill="rgb(213,57,7)" fg:x="316" fg:w="1"/><text x="56.8808%" y="830.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (3 samples, 0.54%)</title><rect x="56.4516%" y="596" width="0.5376%" height="15" fill="rgb(216,148,1)" fg:x="315" fg:w="3"/><text x="56.7016%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (3 samples, 0.54%)</title><rect x="56.4516%" y="612" width="0.5376%" height="15" fill="rgb(236,182,29)" fg:x="315" fg:w="3"/><text x="56.7016%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (3 samples, 0.54%)</title><rect x="56.4516%" y="628" width="0.5376%" height="15" fill="rgb(244,120,48)" fg:x="315" fg:w="3"/><text x="56.7016%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="644" width="0.5376%" height="15" fill="rgb(206,71,34)" fg:x="315" fg:w="3"/><text x="56.7016%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="660" width="0.5376%" height="15" fill="rgb(242,32,6)" fg:x="315" fg:w="3"/><text x="56.7016%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="676" width="0.5376%" height="15" fill="rgb(241,35,3)" fg:x="315" fg:w="3"/><text x="56.7016%" y="686.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="692" width="0.5376%" height="15" fill="rgb(222,62,19)" fg:x="315" fg:w="3"/><text x="56.7016%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="708" width="0.5376%" height="15" fill="rgb(223,110,41)" fg:x="315" fg:w="3"/><text x="56.7016%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="56.4516%" y="724" width="0.5376%" height="15" fill="rgb(208,224,4)" fg:x="315" fg:w="3"/><text x="56.7016%" y="734.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="56.8100%" y="740" width="0.1792%" height="15" fill="rgb(241,137,19)" fg:x="317" fg:w="1"/><text x="57.0600%" y="750.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="56.8100%" y="756" width="0.1792%" height="15" fill="rgb(244,24,17)" fg:x="317" fg:w="1"/><text x="57.0600%" y="766.50"></text></g><g><title>0x7f34ff179d21 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="56.8100%" y="772" width="0.1792%" height="15" fill="rgb(245,178,49)" fg:x="317" fg:w="1"/><text x="57.0600%" y="782.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="56.9892%" y="596" width="0.1792%" height="15" fill="rgb(219,160,38)" fg:x="318" fg:w="1"/><text x="57.2392%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="56.9892%" y="612" width="0.1792%" height="15" fill="rgb(228,137,14)" fg:x="318" fg:w="1"/><text x="57.2392%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="56.9892%" y="628" width="0.1792%" height="15" fill="rgb(237,134,11)" fg:x="318" fg:w="1"/><text x="57.2392%" y="638.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="56.9892%" y="644" width="0.1792%" height="15" fill="rgb(211,126,44)" fg:x="318" fg:w="1"/><text x="57.2392%" y="654.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="56.9892%" y="660" width="0.1792%" height="15" fill="rgb(226,171,33)" fg:x="318" fg:w="1"/><text x="57.2392%" y="670.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="56.9892%" y="676" width="0.1792%" height="15" fill="rgb(253,99,13)" fg:x="318" fg:w="1"/><text x="57.2392%" y="686.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.1685%" y="596" width="0.1792%" height="15" fill="rgb(244,48,7)" fg:x="319" fg:w="1"/><text x="57.4185%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.1685%" y="612" width="0.1792%" height="15" fill="rgb(244,217,54)" fg:x="319" fg:w="1"/><text x="57.4185%" y="622.50"></text></g><g><title>operator+ (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="57.3477%" y="596" width="0.1792%" height="15" fill="rgb(224,15,18)" fg:x="320" fg:w="1"/><text x="57.5977%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="57.3477%" y="612" width="0.1792%" height="15" fill="rgb(244,99,12)" fg:x="320" fg:w="1"/><text x="57.5977%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="57.3477%" y="628" width="0.1792%" height="15" fill="rgb(233,226,8)" fg:x="320" fg:w="1"/><text x="57.5977%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="644" width="0.1792%" height="15" fill="rgb(229,211,3)" fg:x="320" fg:w="1"/><text x="57.5977%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="660" width="0.1792%" height="15" fill="rgb(216,140,21)" fg:x="320" fg:w="1"/><text x="57.5977%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="676" width="0.1792%" height="15" fill="rgb(234,122,30)" fg:x="320" fg:w="1"/><text x="57.5977%" y="686.50"></text></g><g><title>at::_ops::add_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="692" width="0.1792%" height="15" fill="rgb(236,25,46)" fg:x="320" fg:w="1"/><text x="57.5977%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="708" width="0.1792%" height="15" fill="rgb(217,52,54)" fg:x="320" fg:w="1"/><text x="57.5977%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.3477%" y="724" width="0.1792%" height="15" fill="rgb(222,29,26)" fg:x="320" fg:w="1"/><text x="57.5977%" y="734.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (9 samples, 1.61%)</title><rect x="56.2724%" y="340" width="1.6129%" height="15" fill="rgb(216,177,29)" fg:x="314" fg:w="9"/><text x="56.5224%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (9 samples, 1.61%)</title><rect x="56.2724%" y="356" width="1.6129%" height="15" fill="rgb(247,136,51)" fg:x="314" fg:w="9"/><text x="56.5224%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (9 samples, 1.61%)</title><rect x="56.2724%" y="372" width="1.6129%" height="15" fill="rgb(231,47,47)" fg:x="314" fg:w="9"/><text x="56.5224%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (9 samples, 1.61%)</title><rect x="56.2724%" y="388" width="1.6129%" height="15" fill="rgb(211,192,36)" fg:x="314" fg:w="9"/><text x="56.5224%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (9 samples, 1.61%)</title><rect x="56.2724%" y="404" width="1.6129%" height="15" fill="rgb(229,156,32)" fg:x="314" fg:w="9"/><text x="56.5224%" y="414.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (9 samples, 1.61%)</title><rect x="56.2724%" y="420" width="1.6129%" height="15" fill="rgb(248,213,20)" fg:x="314" fg:w="9"/><text x="56.5224%" y="430.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (9 samples, 1.61%)</title><rect x="56.2724%" y="436" width="1.6129%" height="15" fill="rgb(217,64,7)" fg:x="314" fg:w="9"/><text x="56.5224%" y="446.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (9 samples, 1.61%)</title><rect x="56.2724%" y="452" width="1.6129%" height="15" fill="rgb(232,142,8)" fg:x="314" fg:w="9"/><text x="56.5224%" y="462.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (9 samples, 1.61%)</title><rect x="56.2724%" y="468" width="1.6129%" height="15" fill="rgb(224,92,44)" fg:x="314" fg:w="9"/><text x="56.5224%" y="478.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (9 samples, 1.61%)</title><rect x="56.2724%" y="484" width="1.6129%" height="15" fill="rgb(214,169,17)" fg:x="314" fg:w="9"/><text x="56.5224%" y="494.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (9 samples, 1.61%)</title><rect x="56.2724%" y="500" width="1.6129%" height="15" fill="rgb(210,59,37)" fg:x="314" fg:w="9"/><text x="56.5224%" y="510.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (9 samples, 1.61%)</title><rect x="56.2724%" y="516" width="1.6129%" height="15" fill="rgb(214,116,48)" fg:x="314" fg:w="9"/><text x="56.5224%" y="526.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (9 samples, 1.61%)</title><rect x="56.2724%" y="532" width="1.6129%" height="15" fill="rgb(244,191,6)" fg:x="314" fg:w="9"/><text x="56.5224%" y="542.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (9 samples, 1.61%)</title><rect x="56.2724%" y="548" width="1.6129%" height="15" fill="rgb(241,50,52)" fg:x="314" fg:w="9"/><text x="56.5224%" y="558.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (9 samples, 1.61%)</title><rect x="56.2724%" y="564" width="1.6129%" height="15" fill="rgb(236,75,39)" fg:x="314" fg:w="9"/><text x="56.5224%" y="574.50"></text></g><g><title>my_length_constraint (main.cpp:268) (9 samples, 1.61%)</title><rect x="56.2724%" y="580" width="1.6129%" height="15" fill="rgb(236,99,0)" fg:x="314" fg:w="9"/><text x="56.5224%" y="590.50"></text></g><g><title>operator- (TensorOperators.h:50) (2 samples, 0.36%)</title><rect x="57.5269%" y="596" width="0.3584%" height="15" fill="rgb(207,202,15)" fg:x="321" fg:w="2"/><text x="57.7769%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (2 samples, 0.36%)</title><rect x="57.5269%" y="612" width="0.3584%" height="15" fill="rgb(233,207,14)" fg:x="321" fg:w="2"/><text x="57.7769%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (2 samples, 0.36%)</title><rect x="57.5269%" y="628" width="0.3584%" height="15" fill="rgb(226,27,51)" fg:x="321" fg:w="2"/><text x="57.7769%" y="638.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="644" width="0.1792%" height="15" fill="rgb(206,104,42)" fg:x="322" fg:w="1"/><text x="57.9561%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="660" width="0.1792%" height="15" fill="rgb(212,225,4)" fg:x="322" fg:w="1"/><text x="57.9561%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="676" width="0.1792%" height="15" fill="rgb(233,96,42)" fg:x="322" fg:w="1"/><text x="57.9561%" y="686.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="692" width="0.1792%" height="15" fill="rgb(229,21,32)" fg:x="322" fg:w="1"/><text x="57.9561%" y="702.50"></text></g><g><title>torch::autograd::impl::gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="708" width="0.1792%" height="15" fill="rgb(226,216,24)" fg:x="322" fg:w="1"/><text x="57.9561%" y="718.50"></text></g><g><title>at::TensorBase::grad_fn (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.7061%" y="724" width="0.1792%" height="15" fill="rgb(221,163,17)" fg:x="322" fg:w="1"/><text x="57.9561%" y="734.50"></text></g><g><title>fast_jacobian (main.cpp:44) (1 samples, 0.18%)</title><rect x="57.8853%" y="340" width="0.1792%" height="15" fill="rgb(216,216,42)" fg:x="323" fg:w="1"/><text x="58.1353%" y="350.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="57.8853%" y="356" width="0.1792%" height="15" fill="rgb(240,118,7)" fg:x="323" fg:w="1"/><text x="58.1353%" y="366.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="57.8853%" y="372" width="0.1792%" height="15" fill="rgb(221,67,37)" fg:x="323" fg:w="1"/><text x="58.1353%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (1 samples, 0.18%)</title><rect x="57.8853%" y="388" width="0.1792%" height="15" fill="rgb(241,32,44)" fg:x="323" fg:w="1"/><text x="58.1353%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (1 samples, 0.18%)</title><rect x="57.8853%" y="404" width="0.1792%" height="15" fill="rgb(235,204,43)" fg:x="323" fg:w="1"/><text x="58.1353%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (1 samples, 0.18%)</title><rect x="57.8853%" y="420" width="0.1792%" height="15" fill="rgb(213,116,10)" fg:x="323" fg:w="1"/><text x="58.1353%" y="430.50"></text></g><g><title>at::_ops::detach::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.8853%" y="436" width="0.1792%" height="15" fill="rgb(239,15,48)" fg:x="323" fg:w="1"/><text x="58.1353%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.8853%" y="452" width="0.1792%" height="15" fill="rgb(207,123,36)" fg:x="323" fg:w="1"/><text x="58.1353%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.8853%" y="468" width="0.1792%" height="15" fill="rgb(209,103,30)" fg:x="323" fg:w="1"/><text x="58.1353%" y="478.50"></text></g><g><title>at::RecordFunction::RecordFunction (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.8853%" y="484" width="0.1792%" height="15" fill="rgb(238,100,19)" fg:x="323" fg:w="1"/><text x="58.1353%" y="494.50"></text></g><g><title>at::getStepCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="57.8853%" y="500" width="0.1792%" height="15" fill="rgb(244,30,14)" fg:x="323" fg:w="1"/><text x="58.1353%" y="510.50"></text></g><g><title>torch::autograd::Engine::compute_dependencies (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.0645%" y="500" width="0.1792%" height="15" fill="rgb(249,174,6)" fg:x="324" fg:w="1"/><text x="58.3145%" y="510.50"></text></g><g><title>std::_Hashtable&lt;torch::autograd::Node*, std::pair&lt;torch::autograd::Node* const, int&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Node* const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Node*&gt;, std::hash&lt;torch::autograd::Node*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.0645%" y="516" width="0.1792%" height="15" fill="rgb(235,213,41)" fg:x="324" fg:w="1"/><text x="58.3145%" y="526.50"></text></g><g><title>at::RecordFunction::RecordFunction (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.4229%" y="548" width="0.1792%" height="15" fill="rgb(213,118,6)" fg:x="326" fg:w="1"/><text x="58.6729%" y="558.50"></text></g><g><title>at::getStepCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.4229%" y="564" width="0.1792%" height="15" fill="rgb(235,44,51)" fg:x="326" fg:w="1"/><text x="58.6729%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="58.6022%" y="564" width="0.3584%" height="15" fill="rgb(217,9,53)" fg:x="327" fg:w="2"/><text x="58.8522%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="58.6022%" y="580" width="0.3584%" height="15" fill="rgb(237,172,34)" fg:x="327" fg:w="2"/><text x="58.8522%" y="590.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.7814%" y="596" width="0.1792%" height="15" fill="rgb(206,206,11)" fg:x="328" fg:w="1"/><text x="59.0314%" y="606.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="58.7814%" y="612" width="0.1792%" height="15" fill="rgb(214,149,29)" fg:x="328" fg:w="1"/><text x="59.0314%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="58.7814%" y="628" width="0.1792%" height="15" fill="rgb(208,123,3)" fg:x="328" fg:w="1"/><text x="59.0314%" y="638.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="58.6022%" y="548" width="0.5376%" height="15" fill="rgb(229,126,4)" fg:x="327" fg:w="3"/><text x="58.8522%" y="558.50"></text></g><g><title>c10::impl::PythonDispatcherTLS::set_state (libc10.so) (1 samples, 0.18%)</title><rect x="58.9606%" y="564" width="0.1792%" height="15" fill="rgb(222,92,36)" fg:x="329" fg:w="1"/><text x="59.2106%" y="574.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="58.9606%" y="580" width="0.1792%" height="15" fill="rgb(216,39,41)" fg:x="329" fg:w="1"/><text x="59.2106%" y="590.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="58.9606%" y="596" width="0.1792%" height="15" fill="rgb(253,127,28)" fg:x="329" fg:w="1"/><text x="59.2106%" y="606.50"></text></g><g><title>0x7f34ff179b00 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="58.9606%" y="612" width="0.1792%" height="15" fill="rgb(249,152,51)" fg:x="329" fg:w="1"/><text x="59.2106%" y="622.50"></text></g><g><title>c10::WarningUtils::get_warning_handler (libc10.so) (1 samples, 0.18%)</title><rect x="59.1398%" y="548" width="0.1792%" height="15" fill="rgb(209,123,42)" fg:x="330" fg:w="1"/><text x="59.3898%" y="558.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="59.1398%" y="564" width="0.1792%" height="15" fill="rgb(241,118,22)" fg:x="330" fg:w="1"/><text x="59.3898%" y="574.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="564" width="0.1792%" height="15" fill="rgb(208,25,7)" fg:x="331" fg:w="1"/><text x="59.5690%" y="574.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="580" width="0.1792%" height="15" fill="rgb(243,144,39)" fg:x="331" fg:w="1"/><text x="59.5690%" y="590.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="596" width="0.1792%" height="15" fill="rgb(250,50,5)" fg:x="331" fg:w="1"/><text x="59.5690%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="612" width="0.1792%" height="15" fill="rgb(207,67,11)" fg:x="331" fg:w="1"/><text x="59.5690%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="628" width="0.1792%" height="15" fill="rgb(245,204,40)" fg:x="331" fg:w="1"/><text x="59.5690%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="644" width="0.1792%" height="15" fill="rgb(238,228,24)" fg:x="331" fg:w="1"/><text x="59.5690%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="660" width="0.1792%" height="15" fill="rgb(217,116,22)" fg:x="331" fg:w="1"/><text x="59.5690%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="676" width="0.1792%" height="15" fill="rgb(234,98,12)" fg:x="331" fg:w="1"/><text x="59.5690%" y="686.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="692" width="0.1792%" height="15" fill="rgb(242,170,50)" fg:x="331" fg:w="1"/><text x="59.5690%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="708" width="0.1792%" height="15" fill="rgb(235,7,5)" fg:x="331" fg:w="1"/><text x="59.5690%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="724" width="0.1792%" height="15" fill="rgb(241,114,28)" fg:x="331" fg:w="1"/><text x="59.5690%" y="734.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="740" width="0.1792%" height="15" fill="rgb(246,112,42)" fg:x="331" fg:w="1"/><text x="59.5690%" y="750.50"></text></g><g><title>at::OperandInfo::tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.3190%" y="756" width="0.1792%" height="15" fill="rgb(248,228,14)" fg:x="331" fg:w="1"/><text x="59.5690%" y="766.50"></text></g><g><title>std::__find_if&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, __gnu_cxx::__ops::_Iter_pred&lt;torch::autograd::Node::task_should_compute_output(std::initializer_list&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;) const::{lambda(std::pair&lt;unsigned long, unsigned long&gt;)#1}&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.4982%" y="596" width="0.1792%" height="15" fill="rgb(208,133,18)" fg:x="332" fg:w="1"/><text x="59.7482%" y="606.50"></text></g><g><title>torch::autograd::SavedVariable::unpack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.6774%" y="596" width="0.1792%" height="15" fill="rgb(207,35,49)" fg:x="333" fg:w="1"/><text x="59.9274%" y="606.50"></text></g><g><title>torch::autograd::generated::details::any_variable_defined (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="59.8566%" y="596" width="0.1792%" height="15" fill="rgb(205,68,36)" fg:x="334" fg:w="1"/><text x="60.1066%" y="606.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="59.4982%" y="580" width="0.7168%" height="15" fill="rgb(245,62,40)" fg:x="332" fg:w="4"/><text x="59.7482%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="596" width="0.1792%" height="15" fill="rgb(228,27,24)" fg:x="335" fg:w="1"/><text x="60.2858%" y="606.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="612" width="0.1792%" height="15" fill="rgb(253,19,12)" fg:x="335" fg:w="1"/><text x="60.2858%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="628" width="0.1792%" height="15" fill="rgb(232,28,20)" fg:x="335" fg:w="1"/><text x="60.2858%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="644" width="0.1792%" height="15" fill="rgb(218,35,51)" fg:x="335" fg:w="1"/><text x="60.2858%" y="654.50"></text></g><g><title>at::_ops::mul_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="660" width="0.1792%" height="15" fill="rgb(212,90,40)" fg:x="335" fg:w="1"/><text x="60.2858%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="676" width="0.1792%" height="15" fill="rgb(220,172,12)" fg:x="335" fg:w="1"/><text x="60.2858%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="692" width="0.1792%" height="15" fill="rgb(226,159,20)" fg:x="335" fg:w="1"/><text x="60.2858%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="708" width="0.1792%" height="15" fill="rgb(234,205,16)" fg:x="335" fg:w="1"/><text x="60.2858%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="724" width="0.1792%" height="15" fill="rgb(207,9,39)" fg:x="335" fg:w="1"/><text x="60.2858%" y="734.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.0358%" y="740" width="0.1792%" height="15" fill="rgb(249,143,15)" fg:x="335" fg:w="1"/><text x="60.2858%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.2151%" y="756" width="0.1792%" height="15" fill="rgb(253,133,29)" fg:x="336" fg:w="1"/><text x="60.4651%" y="766.50"></text></g><g><title>at::TensorIteratorBase::compute_mem_overlaps (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.2151%" y="772" width="0.1792%" height="15" fill="rgb(221,187,0)" fg:x="336" fg:w="1"/><text x="60.4651%" y="782.50"></text></g><g><title>at::assert_no_partial_overlap (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.2151%" y="788" width="0.1792%" height="15" fill="rgb(205,204,26)" fg:x="336" fg:w="1"/><text x="60.4651%" y="798.50"></text></g><g><title>at::get_overlap_status (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.2151%" y="804" width="0.1792%" height="15" fill="rgb(224,68,54)" fg:x="336" fg:w="1"/><text x="60.4651%" y="814.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="59.4982%" y="564" width="1.0753%" height="15" fill="rgb(209,67,4)" fg:x="332" fg:w="6"/><text x="59.7482%" y="574.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="580" width="0.3584%" height="15" fill="rgb(228,229,18)" fg:x="336" fg:w="2"/><text x="60.4651%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="596" width="0.3584%" height="15" fill="rgb(231,89,13)" fg:x="336" fg:w="2"/><text x="60.4651%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="612" width="0.3584%" height="15" fill="rgb(210,182,18)" fg:x="336" fg:w="2"/><text x="60.4651%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="628" width="0.3584%" height="15" fill="rgb(240,105,2)" fg:x="336" fg:w="2"/><text x="60.4651%" y="638.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="644" width="0.3584%" height="15" fill="rgb(207,170,50)" fg:x="336" fg:w="2"/><text x="60.4651%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="660" width="0.3584%" height="15" fill="rgb(232,133,24)" fg:x="336" fg:w="2"/><text x="60.4651%" y="670.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="676" width="0.3584%" height="15" fill="rgb(235,166,27)" fg:x="336" fg:w="2"/><text x="60.4651%" y="686.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="692" width="0.3584%" height="15" fill="rgb(209,19,13)" fg:x="336" fg:w="2"/><text x="60.4651%" y="702.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="708" width="0.3584%" height="15" fill="rgb(226,79,39)" fg:x="336" fg:w="2"/><text x="60.4651%" y="718.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="724" width="0.3584%" height="15" fill="rgb(222,163,10)" fg:x="336" fg:w="2"/><text x="60.4651%" y="734.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="60.2151%" y="740" width="0.3584%" height="15" fill="rgb(214,44,19)" fg:x="336" fg:w="2"/><text x="60.4651%" y="750.50"></text></g><g><title>at::native::AVX2::copy_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.3943%" y="756" width="0.1792%" height="15" fill="rgb(210,217,13)" fg:x="337" fg:w="1"/><text x="60.6443%" y="766.50"></text></g><g><title>torch::autograd::generated::PowBackward0::release_variables (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.5735%" y="564" width="0.1792%" height="15" fill="rgb(237,61,54)" fg:x="338" fg:w="1"/><text x="60.8235%" y="574.50"></text></g><g><title>torch::autograd::SavedVariable::reset_data (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.5735%" y="580" width="0.1792%" height="15" fill="rgb(226,184,24)" fg:x="338" fg:w="1"/><text x="60.8235%" y="590.50"></text></g><g><title>fast_jacobian (main.cpp:47) (16 samples, 2.87%)</title><rect x="58.0645%" y="340" width="2.8674%" height="15" fill="rgb(223,226,4)" fg:x="324" fg:w="16"/><text x="58.3145%" y="350.50">fa..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (16 samples, 2.87%)</title><rect x="58.0645%" y="356" width="2.8674%" height="15" fill="rgb(210,26,41)" fg:x="324" fg:w="16"/><text x="58.3145%" y="366.50">at..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (16 samples, 2.87%)</title><rect x="58.0645%" y="372" width="2.8674%" height="15" fill="rgb(220,221,6)" fg:x="324" fg:w="16"/><text x="58.3145%" y="382.50">c1..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (16 samples, 2.87%)</title><rect x="58.0645%" y="388" width="2.8674%" height="15" fill="rgb(225,89,49)" fg:x="324" fg:w="16"/><text x="58.3145%" y="398.50">c1..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="404" width="2.8674%" height="15" fill="rgb(218,70,45)" fg:x="324" fg:w="16"/><text x="58.3145%" y="414.50">at..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="420" width="2.8674%" height="15" fill="rgb(238,166,21)" fg:x="324" fg:w="16"/><text x="58.3145%" y="430.50">to..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="436" width="2.8674%" height="15" fill="rgb(224,141,44)" fg:x="324" fg:w="16"/><text x="58.3145%" y="446.50">to..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="452" width="2.8674%" height="15" fill="rgb(230,12,49)" fg:x="324" fg:w="16"/><text x="58.3145%" y="462.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="468" width="2.8674%" height="15" fill="rgb(212,174,12)" fg:x="324" fg:w="16"/><text x="58.3145%" y="478.50">to..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="58.0645%" y="484" width="2.8674%" height="15" fill="rgb(246,67,9)" fg:x="324" fg:w="16"/><text x="58.3145%" y="494.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (15 samples, 2.69%)</title><rect x="58.2437%" y="500" width="2.6882%" height="15" fill="rgb(239,35,23)" fg:x="325" fg:w="15"/><text x="58.4937%" y="510.50">to..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="58.2437%" y="516" width="2.6882%" height="15" fill="rgb(211,167,0)" fg:x="325" fg:w="15"/><text x="58.4937%" y="526.50">to..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="58.2437%" y="532" width="2.6882%" height="15" fill="rgb(225,119,45)" fg:x="325" fg:w="15"/><text x="58.4937%" y="542.50">to..</text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (9 samples, 1.61%)</title><rect x="59.3190%" y="548" width="1.6129%" height="15" fill="rgb(210,162,6)" fg:x="331" fg:w="9"/><text x="59.5690%" y="558.50"></text></g><g><title>torch::autograd::validate_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.7527%" y="564" width="0.1792%" height="15" fill="rgb(208,118,35)" fg:x="339" fg:w="1"/><text x="61.0027%" y="574.50"></text></g><g><title>rattle_step (main.cpp:120) (27 samples, 4.84%)</title><rect x="56.2724%" y="308" width="4.8387%" height="15" fill="rgb(239,4,53)" fg:x="314" fg:w="27"/><text x="56.5224%" y="318.50">rattle..</text></g><g><title>at::Tensor::t (TensorBody.h:3678) (27 samples, 4.84%)</title><rect x="56.2724%" y="324" width="4.8387%" height="15" fill="rgb(213,130,21)" fg:x="314" fg:w="27"/><text x="56.5224%" y="334.50">at::Te..</text></g><g><title>fast_jacobian (main.cpp:50) (1 samples, 0.18%)</title><rect x="60.9319%" y="340" width="0.1792%" height="15" fill="rgb(235,148,0)" fg:x="340" fg:w="1"/><text x="61.1819%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="60.9319%" y="356" width="0.1792%" height="15" fill="rgb(244,224,18)" fg:x="340" fg:w="1"/><text x="61.1819%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="60.9319%" y="372" width="0.1792%" height="15" fill="rgb(211,214,4)" fg:x="340" fg:w="1"/><text x="61.1819%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="60.9319%" y="388" width="0.1792%" height="15" fill="rgb(206,119,25)" fg:x="340" fg:w="1"/><text x="61.1819%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (1 samples, 0.18%)</title><rect x="60.9319%" y="404" width="0.1792%" height="15" fill="rgb(243,93,47)" fg:x="340" fg:w="1"/><text x="61.1819%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (1 samples, 0.18%)</title><rect x="60.9319%" y="420" width="0.1792%" height="15" fill="rgb(224,194,6)" fg:x="340" fg:w="1"/><text x="61.1819%" y="430.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="60.9319%" y="436" width="0.1792%" height="15" fill="rgb(243,229,6)" fg:x="340" fg:w="1"/><text x="61.1819%" y="446.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="60.9319%" y="452" width="0.1792%" height="15" fill="rgb(207,23,50)" fg:x="340" fg:w="1"/><text x="61.1819%" y="462.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.9319%" y="468" width="0.1792%" height="15" fill="rgb(253,192,32)" fg:x="340" fg:w="1"/><text x="61.1819%" y="478.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.9319%" y="484" width="0.1792%" height="15" fill="rgb(213,21,6)" fg:x="340" fg:w="1"/><text x="61.1819%" y="494.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="60.9319%" y="500" width="0.1792%" height="15" fill="rgb(243,151,13)" fg:x="340" fg:w="1"/><text x="61.1819%" y="510.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="60.9319%" y="516" width="0.1792%" height="15" fill="rgb(233,165,41)" fg:x="340" fg:w="1"/><text x="61.1819%" y="526.50"></text></g><g><title>0x7f34fee97716 (libc.so.6) (1 samples, 0.18%)</title><rect x="60.9319%" y="532" width="0.1792%" height="15" fill="rgb(246,176,45)" fg:x="340" fg:w="1"/><text x="61.1819%" y="542.50"></text></g><g><title>rattle_step (main.cpp:78) (1 samples, 0.18%)</title><rect x="61.1111%" y="308" width="0.1792%" height="15" fill="rgb(217,170,52)" fg:x="341" fg:w="1"/><text x="61.3611%" y="318.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="324" width="0.1792%" height="15" fill="rgb(214,203,54)" fg:x="341" fg:w="1"/><text x="61.3611%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="340" width="0.1792%" height="15" fill="rgb(248,215,49)" fg:x="341" fg:w="1"/><text x="61.3611%" y="350.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="356" width="0.1792%" height="15" fill="rgb(208,46,10)" fg:x="341" fg:w="1"/><text x="61.3611%" y="366.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="372" width="0.1792%" height="15" fill="rgb(254,5,31)" fg:x="341" fg:w="1"/><text x="61.3611%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="388" width="0.1792%" height="15" fill="rgb(222,104,33)" fg:x="341" fg:w="1"/><text x="61.3611%" y="398.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="404" width="0.1792%" height="15" fill="rgb(248,49,16)" fg:x="341" fg:w="1"/><text x="61.3611%" y="414.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="420" width="0.1792%" height="15" fill="rgb(232,198,41)" fg:x="341" fg:w="1"/><text x="61.3611%" y="430.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="436" width="0.1792%" height="15" fill="rgb(214,125,3)" fg:x="341" fg:w="1"/><text x="61.3611%" y="446.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="452" width="0.1792%" height="15" fill="rgb(229,220,28)" fg:x="341" fg:w="1"/><text x="61.3611%" y="462.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="468" width="0.1792%" height="15" fill="rgb(222,64,37)" fg:x="341" fg:w="1"/><text x="61.3611%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="484" width="0.1792%" height="15" fill="rgb(249,184,13)" fg:x="341" fg:w="1"/><text x="61.3611%" y="494.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="500" width="0.1792%" height="15" fill="rgb(252,176,6)" fg:x="341" fg:w="1"/><text x="61.3611%" y="510.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="516" width="0.1792%" height="15" fill="rgb(228,153,7)" fg:x="341" fg:w="1"/><text x="61.3611%" y="526.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="532" width="0.1792%" height="15" fill="rgb(242,193,5)" fg:x="341" fg:w="1"/><text x="61.3611%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="548" width="0.1792%" height="15" fill="rgb(232,140,9)" fg:x="341" fg:w="1"/><text x="61.3611%" y="558.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="564" width="0.1792%" height="15" fill="rgb(213,222,16)" fg:x="341" fg:w="1"/><text x="61.3611%" y="574.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="580" width="0.1792%" height="15" fill="rgb(222,75,50)" fg:x="341" fg:w="1"/><text x="61.3611%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="596" width="0.1792%" height="15" fill="rgb(205,180,2)" fg:x="341" fg:w="1"/><text x="61.3611%" y="606.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="612" width="0.1792%" height="15" fill="rgb(216,34,7)" fg:x="341" fg:w="1"/><text x="61.3611%" y="622.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="628" width="0.1792%" height="15" fill="rgb(253,16,32)" fg:x="341" fg:w="1"/><text x="61.3611%" y="638.50"></text></g><g><title>at::_ops::linalg_lu_solve_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="644" width="0.1792%" height="15" fill="rgb(208,97,28)" fg:x="341" fg:w="1"/><text x="61.3611%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_solve_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="660" width="0.1792%" height="15" fill="rgb(225,92,11)" fg:x="341" fg:w="1"/><text x="61.3611%" y="670.50"></text></g><g><title>at::native::structured_linalg_lu_solve_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="676" width="0.1792%" height="15" fill="rgb(243,38,12)" fg:x="341" fg:w="1"/><text x="61.3611%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::lu_solve_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="692" width="0.1792%" height="15" fill="rgb(208,139,16)" fg:x="341" fg:w="1"/><text x="61.3611%" y="702.50"></text></g><g><title>at::_ops::gt_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="708" width="0.1792%" height="15" fill="rgb(227,24,9)" fg:x="341" fg:w="1"/><text x="61.3611%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_gt_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="724" width="0.1792%" height="15" fill="rgb(206,62,11)" fg:x="341" fg:w="1"/><text x="61.3611%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_gt_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="740" width="0.1792%" height="15" fill="rgb(228,134,27)" fg:x="341" fg:w="1"/><text x="61.3611%" y="750.50"></text></g><g><title>at::meta::structured_gt_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="756" width="0.1792%" height="15" fill="rgb(205,55,33)" fg:x="341" fg:w="1"/><text x="61.3611%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_except_last_argument_comparison_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.1111%" y="772" width="0.1792%" height="15" fill="rgb(243,75,43)" fg:x="341" fg:w="1"/><text x="61.3611%" y="782.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (1 samples, 0.18%)</title><rect x="61.2903%" y="596" width="0.1792%" height="15" fill="rgb(223,27,42)" fg:x="342" fg:w="1"/><text x="61.5403%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (1 samples, 0.18%)</title><rect x="61.2903%" y="612" width="0.1792%" height="15" fill="rgb(232,189,33)" fg:x="342" fg:w="1"/><text x="61.5403%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (1 samples, 0.18%)</title><rect x="61.2903%" y="628" width="0.1792%" height="15" fill="rgb(210,9,39)" fg:x="342" fg:w="1"/><text x="61.5403%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.2903%" y="644" width="0.1792%" height="15" fill="rgb(242,85,26)" fg:x="342" fg:w="1"/><text x="61.5403%" y="654.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.2903%" y="660" width="0.1792%" height="15" fill="rgb(248,44,4)" fg:x="342" fg:w="1"/><text x="61.5403%" y="670.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="61.2903%" y="676" width="0.1792%" height="15" fill="rgb(250,96,46)" fg:x="342" fg:w="1"/><text x="61.5403%" y="686.50"></text></g><g><title>0x7f34ff17a050 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="61.2903%" y="692" width="0.1792%" height="15" fill="rgb(229,116,26)" fg:x="342" fg:w="1"/><text x="61.5403%" y="702.50"></text></g><g><title>at::pow (pow.h:64) (1 samples, 0.18%)</title><rect x="61.4695%" y="596" width="0.1792%" height="15" fill="rgb(246,94,34)" fg:x="343" fg:w="1"/><text x="61.7195%" y="606.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="61.4695%" y="612" width="0.1792%" height="15" fill="rgb(251,73,21)" fg:x="343" fg:w="1"/><text x="61.7195%" y="622.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="61.4695%" y="628" width="0.1792%" height="15" fill="rgb(254,121,25)" fg:x="343" fg:w="1"/><text x="61.7195%" y="638.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="61.4695%" y="644" width="0.1792%" height="15" fill="rgb(215,161,49)" fg:x="343" fg:w="1"/><text x="61.7195%" y="654.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="660" width="0.1792%" height="15" fill="rgb(221,43,13)" fg:x="343" fg:w="1"/><text x="61.7195%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="676" width="0.1792%" height="15" fill="rgb(249,5,37)" fg:x="343" fg:w="1"/><text x="61.7195%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="692" width="0.1792%" height="15" fill="rgb(226,25,44)" fg:x="343" fg:w="1"/><text x="61.7195%" y="702.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="708" width="0.1792%" height="15" fill="rgb(238,189,16)" fg:x="343" fg:w="1"/><text x="61.7195%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="724" width="0.1792%" height="15" fill="rgb(251,186,8)" fg:x="343" fg:w="1"/><text x="61.7195%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="740" width="0.1792%" height="15" fill="rgb(254,34,31)" fg:x="343" fg:w="1"/><text x="61.7195%" y="750.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="756" width="0.1792%" height="15" fill="rgb(225,215,27)" fg:x="343" fg:w="1"/><text x="61.7195%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="772" width="0.1792%" height="15" fill="rgb(221,192,48)" fg:x="343" fg:w="1"/><text x="61.7195%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="788" width="0.1792%" height="15" fill="rgb(219,137,20)" fg:x="343" fg:w="1"/><text x="61.7195%" y="798.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="804" width="0.1792%" height="15" fill="rgb(219,84,11)" fg:x="343" fg:w="1"/><text x="61.7195%" y="814.50"></text></g><g><title>at::(anonymous namespace)::structured_sub_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="820" width="0.1792%" height="15" fill="rgb(224,10,23)" fg:x="343" fg:w="1"/><text x="61.7195%" y="830.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="836" width="0.1792%" height="15" fill="rgb(248,22,39)" fg:x="343" fg:w="1"/><text x="61.7195%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.4695%" y="852" width="0.1792%" height="15" fill="rgb(212,154,20)" fg:x="343" fg:w="1"/><text x="61.7195%" y="862.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (3 samples, 0.54%)</title><rect x="61.2903%" y="340" width="0.5376%" height="15" fill="rgb(236,199,50)" fg:x="342" fg:w="3"/><text x="61.5403%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (3 samples, 0.54%)</title><rect x="61.2903%" y="356" width="0.5376%" height="15" fill="rgb(211,9,17)" fg:x="342" fg:w="3"/><text x="61.5403%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (3 samples, 0.54%)</title><rect x="61.2903%" y="372" width="0.5376%" height="15" fill="rgb(243,216,36)" fg:x="342" fg:w="3"/><text x="61.5403%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (3 samples, 0.54%)</title><rect x="61.2903%" y="388" width="0.5376%" height="15" fill="rgb(250,2,10)" fg:x="342" fg:w="3"/><text x="61.5403%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (3 samples, 0.54%)</title><rect x="61.2903%" y="404" width="0.5376%" height="15" fill="rgb(226,50,48)" fg:x="342" fg:w="3"/><text x="61.5403%" y="414.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (3 samples, 0.54%)</title><rect x="61.2903%" y="420" width="0.5376%" height="15" fill="rgb(243,81,16)" fg:x="342" fg:w="3"/><text x="61.5403%" y="430.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (3 samples, 0.54%)</title><rect x="61.2903%" y="436" width="0.5376%" height="15" fill="rgb(250,14,2)" fg:x="342" fg:w="3"/><text x="61.5403%" y="446.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (3 samples, 0.54%)</title><rect x="61.2903%" y="452" width="0.5376%" height="15" fill="rgb(233,135,29)" fg:x="342" fg:w="3"/><text x="61.5403%" y="462.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (3 samples, 0.54%)</title><rect x="61.2903%" y="468" width="0.5376%" height="15" fill="rgb(224,64,43)" fg:x="342" fg:w="3"/><text x="61.5403%" y="478.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (3 samples, 0.54%)</title><rect x="61.2903%" y="484" width="0.5376%" height="15" fill="rgb(238,84,13)" fg:x="342" fg:w="3"/><text x="61.5403%" y="494.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (3 samples, 0.54%)</title><rect x="61.2903%" y="500" width="0.5376%" height="15" fill="rgb(253,48,26)" fg:x="342" fg:w="3"/><text x="61.5403%" y="510.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (3 samples, 0.54%)</title><rect x="61.2903%" y="516" width="0.5376%" height="15" fill="rgb(205,223,31)" fg:x="342" fg:w="3"/><text x="61.5403%" y="526.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (3 samples, 0.54%)</title><rect x="61.2903%" y="532" width="0.5376%" height="15" fill="rgb(221,41,32)" fg:x="342" fg:w="3"/><text x="61.5403%" y="542.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (3 samples, 0.54%)</title><rect x="61.2903%" y="548" width="0.5376%" height="15" fill="rgb(213,158,31)" fg:x="342" fg:w="3"/><text x="61.5403%" y="558.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (3 samples, 0.54%)</title><rect x="61.2903%" y="564" width="0.5376%" height="15" fill="rgb(245,126,43)" fg:x="342" fg:w="3"/><text x="61.5403%" y="574.50"></text></g><g><title>my_length_constraint (main.cpp:268) (3 samples, 0.54%)</title><rect x="61.2903%" y="580" width="0.5376%" height="15" fill="rgb(227,7,22)" fg:x="342" fg:w="3"/><text x="61.5403%" y="590.50"></text></g><g><title>operator+ (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="61.6487%" y="596" width="0.1792%" height="15" fill="rgb(252,90,44)" fg:x="344" fg:w="1"/><text x="61.8987%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="61.6487%" y="612" width="0.1792%" height="15" fill="rgb(253,91,0)" fg:x="344" fg:w="1"/><text x="61.8987%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="61.6487%" y="628" width="0.1792%" height="15" fill="rgb(252,175,49)" fg:x="344" fg:w="1"/><text x="61.8987%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="61.6487%" y="644" width="0.1792%" height="15" fill="rgb(246,150,1)" fg:x="344" fg:w="1"/><text x="61.8987%" y="654.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (libtorch_python.so) (3 samples, 0.54%)</title><rect x="62.0072%" y="500" width="0.5376%" height="15" fill="rgb(241,192,25)" fg:x="346" fg:w="3"/><text x="62.2572%" y="510.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;torch::autograd::GraphTask, std::allocator&lt;torch::autograd::GraphTask&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="62.0072%" y="516" width="0.5376%" height="15" fill="rgb(239,187,11)" fg:x="346" fg:w="3"/><text x="62.2572%" y="526.50"></text></g><g><title>c10::ivalue::Future::~Future (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="62.0072%" y="532" width="0.5376%" height="15" fill="rgb(218,202,51)" fg:x="346" fg:w="3"/><text x="62.2572%" y="542.50"></text></g><g><title>c10::ListType::~ListType (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="62.1864%" y="548" width="0.3584%" height="15" fill="rgb(225,176,8)" fg:x="347" fg:w="2"/><text x="62.4364%" y="558.50"></text></g><g><title>std::__shared_ptr&lt;torch::autograd::GraphTask, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;torch::autograd::GraphTask&gt;, bool&amp;, bool&amp;, int, std::shared_ptr&lt;torch::autograd::ReadyQueue&gt;&amp;, c10::SmallVector&lt;torch::autograd::Node*, (unsigned int)4&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="62.5448%" y="500" width="0.1792%" height="15" fill="rgb(219,122,41)" fg:x="349" fg:w="1"/><text x="62.7948%" y="510.50"></text></g><g><title>c10::ListType::create&lt;std::shared_ptr&lt;c10::TensorType&gt; const&amp;&gt; (libtorch_python.so) (1 samples, 0.18%)</title><rect x="62.5448%" y="516" width="0.1792%" height="15" fill="rgb(248,140,20)" fg:x="349" fg:w="1"/><text x="62.7948%" y="526.50"></text></g><g><title>at::RecordFunction::~RecordFunction (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="62.7240%" y="548" width="0.1792%" height="15" fill="rgb(245,41,37)" fg:x="350" fg:w="1"/><text x="62.9740%" y="558.50"></text></g><g><title>0x7f34ff179d07 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="63.2616%" y="612" width="0.1792%" height="15" fill="rgb(235,82,39)" fg:x="353" fg:w="1"/><text x="63.5116%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (3 samples, 0.54%)</title><rect x="63.0824%" y="596" width="0.5376%" height="15" fill="rgb(230,108,42)" fg:x="352" fg:w="3"/><text x="63.3324%" y="606.50"></text></g><g><title>0x7f34ff17a050 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="63.4409%" y="612" width="0.1792%" height="15" fill="rgb(215,150,50)" fg:x="354" fg:w="1"/><text x="63.6909%" y="622.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="63.6201%" y="612" width="0.3584%" height="15" fill="rgb(233,212,5)" fg:x="355" fg:w="2"/><text x="63.8701%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="63.7993%" y="628" width="0.1792%" height="15" fill="rgb(245,80,22)" fg:x="356" fg:w="1"/><text x="64.0493%" y="638.50"></text></g><g><title>0x7f34ff179d07 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="63.7993%" y="644" width="0.1792%" height="15" fill="rgb(238,129,16)" fg:x="356" fg:w="1"/><text x="64.0493%" y="654.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="62.9032%" y="564" width="1.2545%" height="15" fill="rgb(240,19,0)" fg:x="351" fg:w="7"/><text x="63.1532%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="62.9032%" y="580" width="1.2545%" height="15" fill="rgb(232,42,35)" fg:x="351" fg:w="7"/><text x="63.1532%" y="590.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="63.6201%" y="596" width="0.5376%" height="15" fill="rgb(223,130,24)" fg:x="355" fg:w="3"/><text x="63.8701%" y="606.50"></text></g><g><title>c10::SmallVectorImpl&lt;at::StepCallbacks::StartEndPair&gt;::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="63.9785%" y="612" width="0.1792%" height="15" fill="rgb(237,16,22)" fg:x="357" fg:w="1"/><text x="64.2285%" y="622.50"></text></g><g><title>at::impl::ThreadLocalPythonObjects::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="64.1577%" y="564" width="0.1792%" height="15" fill="rgb(248,192,20)" fg:x="358" fg:w="1"/><text x="64.4077%" y="574.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="64.1577%" y="580" width="0.1792%" height="15" fill="rgb(233,167,2)" fg:x="358" fg:w="1"/><text x="64.4077%" y="590.50"></text></g><g><title>0x7f34ff179d27 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="64.1577%" y="596" width="0.1792%" height="15" fill="rgb(252,71,44)" fg:x="358" fg:w="1"/><text x="64.4077%" y="606.50"></text></g><g><title>c10::ThreadLocalDebugInfo::_forceCurrentDebugInfo (libc10.so) (1 samples, 0.18%)</title><rect x="64.3369%" y="564" width="0.1792%" height="15" fill="rgb(238,37,47)" fg:x="359" fg:w="1"/><text x="64.5869%" y="574.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (10 samples, 1.79%)</title><rect x="62.9032%" y="548" width="1.7921%" height="15" fill="rgb(214,202,54)" fg:x="351" fg:w="10"/><text x="63.1532%" y="558.50">a..</text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, true&gt; const*)#1}&gt; (libtorch_python.so) (1 samples, 0.18%)</title><rect x="64.5161%" y="564" width="0.1792%" height="15" fill="rgb(254,165,40)" fg:x="360" fg:w="1"/><text x="64.7661%" y="574.50"></text></g><g><title>std::_Hashtable&lt;torch::autograd::Node*, std::pair&lt;torch::autograd::Node* const, int&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Node* const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Node*&gt;, std::hash&lt;torch::autograd::Node*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="64.6953%" y="564" width="0.1792%" height="15" fill="rgb(246,173,38)" fg:x="361" fg:w="1"/><text x="64.9453%" y="574.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="64.8746%" y="564" width="0.1792%" height="15" fill="rgb(215,3,27)" fg:x="362" fg:w="1"/><text x="65.1246%" y="574.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.0538%" y="708" width="0.1792%" height="15" fill="rgb(239,169,51)" fg:x="363" fg:w="1"/><text x="65.3038%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.0538%" y="724" width="0.1792%" height="15" fill="rgb(212,5,25)" fg:x="363" fg:w="1"/><text x="65.3038%" y="734.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.0538%" y="740" width="0.1792%" height="15" fill="rgb(243,45,17)" fg:x="363" fg:w="1"/><text x="65.3038%" y="750.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="612" width="0.3584%" height="15" fill="rgb(242,97,9)" fg:x="363" fg:w="2"/><text x="65.3038%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="628" width="0.3584%" height="15" fill="rgb(228,71,31)" fg:x="363" fg:w="2"/><text x="65.3038%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="644" width="0.3584%" height="15" fill="rgb(252,184,16)" fg:x="363" fg:w="2"/><text x="65.3038%" y="654.50"></text></g><g><title>at::_ops::mul_Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="660" width="0.3584%" height="15" fill="rgb(236,169,46)" fg:x="363" fg:w="2"/><text x="65.3038%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="676" width="0.3584%" height="15" fill="rgb(207,17,47)" fg:x="363" fg:w="2"/><text x="65.3038%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.0538%" y="692" width="0.3584%" height="15" fill="rgb(206,201,28)" fg:x="363" fg:w="2"/><text x="65.3038%" y="702.50"></text></g><g><title>at::TensorIteratorBase::~TensorIteratorBase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.2330%" y="708" width="0.1792%" height="15" fill="rgb(224,184,23)" fg:x="364" fg:w="1"/><text x="65.4830%" y="718.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="65.0538%" y="580" width="0.5376%" height="15" fill="rgb(208,139,48)" fg:x="363" fg:w="3"/><text x="65.3038%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="65.0538%" y="596" width="0.5376%" height="15" fill="rgb(208,130,10)" fg:x="363" fg:w="3"/><text x="65.3038%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.4122%" y="612" width="0.1792%" height="15" fill="rgb(211,213,45)" fg:x="365" fg:w="1"/><text x="65.6622%" y="622.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.5914%" y="708" width="0.1792%" height="15" fill="rgb(235,100,30)" fg:x="366" fg:w="1"/><text x="65.8414%" y="718.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.5914%" y="724" width="0.1792%" height="15" fill="rgb(206,144,31)" fg:x="366" fg:w="1"/><text x="65.8414%" y="734.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.5914%" y="740" width="0.1792%" height="15" fill="rgb(224,200,26)" fg:x="366" fg:w="1"/><text x="65.8414%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.5914%" y="756" width="0.1792%" height="15" fill="rgb(247,104,53)" fg:x="366" fg:w="1"/><text x="65.8414%" y="766.50"></text></g><g><title>at::TensorIteratorBase::populate_operands (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.5914%" y="772" width="0.1792%" height="15" fill="rgb(220,14,17)" fg:x="366" fg:w="1"/><text x="65.8414%" y="782.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="580" width="0.3584%" height="15" fill="rgb(230,140,40)" fg:x="366" fg:w="2"/><text x="65.8414%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="596" width="0.3584%" height="15" fill="rgb(229,2,41)" fg:x="366" fg:w="2"/><text x="65.8414%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="612" width="0.3584%" height="15" fill="rgb(232,89,16)" fg:x="366" fg:w="2"/><text x="65.8414%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="628" width="0.3584%" height="15" fill="rgb(247,59,52)" fg:x="366" fg:w="2"/><text x="65.8414%" y="638.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="644" width="0.3584%" height="15" fill="rgb(226,110,21)" fg:x="366" fg:w="2"/><text x="65.8414%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="660" width="0.3584%" height="15" fill="rgb(224,176,43)" fg:x="366" fg:w="2"/><text x="65.8414%" y="670.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="676" width="0.3584%" height="15" fill="rgb(221,73,6)" fg:x="366" fg:w="2"/><text x="65.8414%" y="686.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="65.5914%" y="692" width="0.3584%" height="15" fill="rgb(232,78,19)" fg:x="366" fg:w="2"/><text x="65.8414%" y="702.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.7706%" y="708" width="0.1792%" height="15" fill="rgb(233,112,48)" fg:x="367" fg:w="1"/><text x="66.0206%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.7706%" y="724" width="0.1792%" height="15" fill="rgb(243,131,47)" fg:x="367" fg:w="1"/><text x="66.0206%" y="734.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.7706%" y="740" width="0.1792%" height="15" fill="rgb(226,51,1)" fg:x="367" fg:w="1"/><text x="66.0206%" y="750.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.7706%" y="756" width="0.1792%" height="15" fill="rgb(247,58,7)" fg:x="367" fg:w="1"/><text x="66.0206%" y="766.50"></text></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;c10::SymInt const*, c10::SymInt*&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.7706%" y="772" width="0.1792%" height="15" fill="rgb(209,7,32)" fg:x="367" fg:w="1"/><text x="66.0206%" y="782.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="65.0538%" y="564" width="1.0753%" height="15" fill="rgb(209,39,41)" fg:x="363" fg:w="6"/><text x="65.3038%" y="574.50"></text></g><g><title>torch::autograd::generated::SubBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="580" width="0.1792%" height="15" fill="rgb(226,182,46)" fg:x="368" fg:w="1"/><text x="66.1998%" y="590.50"></text></g><g><title>at::_ops::neg::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="596" width="0.1792%" height="15" fill="rgb(230,219,10)" fg:x="368" fg:w="1"/><text x="66.1998%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::neg(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="612" width="0.1792%" height="15" fill="rgb(227,175,30)" fg:x="368" fg:w="1"/><text x="66.1998%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::neg (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="628" width="0.1792%" height="15" fill="rgb(217,2,50)" fg:x="368" fg:w="1"/><text x="66.1998%" y="638.50"></text></g><g><title>at::_ops::neg::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="644" width="0.1792%" height="15" fill="rgb(229,160,0)" fg:x="368" fg:w="1"/><text x="66.1998%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_neg(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="660" width="0.1792%" height="15" fill="rgb(207,78,37)" fg:x="368" fg:w="1"/><text x="66.1998%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_neg (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="65.9498%" y="676" width="0.1792%" height="15" fill="rgb(225,57,0)" fg:x="368" fg:w="1"/><text x="66.1998%" y="686.50"></text></g><g><title>torch::autograd::ReadyQueue::push (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.1290%" y="564" width="0.1792%" height="15" fill="rgb(232,154,2)" fg:x="369" fg:w="1"/><text x="66.3790%" y="574.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (10 samples, 1.79%)</title><rect x="64.6953%" y="548" width="1.7921%" height="15" fill="rgb(241,212,25)" fg:x="361" fg:w="10"/><text x="64.9453%" y="558.50">t..</text></g><g><title>torch::autograd::generated::PowBackward0::release_variables (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.3082%" y="564" width="0.1792%" height="15" fill="rgb(226,69,20)" fg:x="370" fg:w="1"/><text x="66.5582%" y="574.50"></text></g><g><title>torch::autograd::SavedVariable::reset_data (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.3082%" y="580" width="0.1792%" height="15" fill="rgb(247,184,54)" fg:x="370" fg:w="1"/><text x="66.5582%" y="590.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="66.3082%" y="596" width="0.1792%" height="15" fill="rgb(210,145,0)" fg:x="370" fg:w="1"/><text x="66.5582%" y="606.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="66.3082%" y="612" width="0.1792%" height="15" fill="rgb(253,82,12)" fg:x="370" fg:w="1"/><text x="66.5582%" y="622.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.3082%" y="628" width="0.1792%" height="15" fill="rgb(245,42,11)" fg:x="370" fg:w="1"/><text x="66.5582%" y="638.50"></text></g><g><title>fast_jacobian (main.cpp:47) (27 samples, 4.84%)</title><rect x="61.8280%" y="340" width="4.8387%" height="15" fill="rgb(219,147,32)" fg:x="345" fg:w="27"/><text x="62.0780%" y="350.50">fast_j..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (27 samples, 4.84%)</title><rect x="61.8280%" y="356" width="4.8387%" height="15" fill="rgb(246,12,7)" fg:x="345" fg:w="27"/><text x="62.0780%" y="366.50">at::Te..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (27 samples, 4.84%)</title><rect x="61.8280%" y="372" width="4.8387%" height="15" fill="rgb(243,50,9)" fg:x="345" fg:w="27"/><text x="62.0780%" y="382.50">c10::o..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (27 samples, 4.84%)</title><rect x="61.8280%" y="388" width="4.8387%" height="15" fill="rgb(219,149,6)" fg:x="345" fg:w="27"/><text x="62.0780%" y="398.50">c10::o..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="404" width="4.8387%" height="15" fill="rgb(241,51,42)" fg:x="345" fg:w="27"/><text x="62.0780%" y="414.50">at::Te..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="420" width="4.8387%" height="15" fill="rgb(226,128,27)" fg:x="345" fg:w="27"/><text x="62.0780%" y="430.50">torch:..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="436" width="4.8387%" height="15" fill="rgb(244,144,4)" fg:x="345" fg:w="27"/><text x="62.0780%" y="446.50">torch:..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="452" width="4.8387%" height="15" fill="rgb(221,4,13)" fg:x="345" fg:w="27"/><text x="62.0780%" y="462.50">torch:..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="468" width="4.8387%" height="15" fill="rgb(208,170,28)" fg:x="345" fg:w="27"/><text x="62.0780%" y="478.50">torch:..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (27 samples, 4.84%)</title><rect x="61.8280%" y="484" width="4.8387%" height="15" fill="rgb(226,131,13)" fg:x="345" fg:w="27"/><text x="62.0780%" y="494.50">torch:..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (22 samples, 3.94%)</title><rect x="62.7240%" y="500" width="3.9427%" height="15" fill="rgb(215,72,41)" fg:x="350" fg:w="22"/><text x="62.9740%" y="510.50">torc..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (22 samples, 3.94%)</title><rect x="62.7240%" y="516" width="3.9427%" height="15" fill="rgb(243,108,20)" fg:x="350" fg:w="22"/><text x="62.9740%" y="526.50">torc..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (22 samples, 3.94%)</title><rect x="62.7240%" y="532" width="3.9427%" height="15" fill="rgb(230,189,17)" fg:x="350" fg:w="22"/><text x="62.9740%" y="542.50">torc..</text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.4875%" y="548" width="0.1792%" height="15" fill="rgb(220,50,17)" fg:x="371" fg:w="1"/><text x="66.7375%" y="558.50"></text></g><g><title>torch::autograd::GraphTask::exec_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.4875%" y="564" width="0.1792%" height="15" fill="rgb(248,152,48)" fg:x="371" fg:w="1"/><text x="66.7375%" y="574.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.4875%" y="580" width="0.1792%" height="15" fill="rgb(244,91,11)" fg:x="371" fg:w="1"/><text x="66.7375%" y="590.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.4875%" y="596" width="0.1792%" height="15" fill="rgb(220,157,5)" fg:x="371" fg:w="1"/><text x="66.7375%" y="606.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="66.4875%" y="612" width="0.1792%" height="15" fill="rgb(253,137,8)" fg:x="371" fg:w="1"/><text x="66.7375%" y="622.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (1 samples, 0.18%)</title><rect x="66.6667%" y="692" width="0.1792%" height="15" fill="rgb(217,137,51)" fg:x="372" fg:w="1"/><text x="66.9167%" y="702.50"></text></g><g><title>0x7f34fee9691b (libc.so.6) (1 samples, 0.18%)</title><rect x="66.6667%" y="708" width="0.1792%" height="15" fill="rgb(218,209,53)" fg:x="372" fg:w="1"/><text x="66.9167%" y="718.50"></text></g><g><title>0x7f34fee96749 (libc.so.6) (1 samples, 0.18%)</title><rect x="66.6667%" y="724" width="0.1792%" height="15" fill="rgb(249,137,25)" fg:x="372" fg:w="1"/><text x="66.9167%" y="734.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:163) (194 samples, 34.77%)</title><rect x="32.2581%" y="292" width="34.7670%" height="15" fill="rgb(239,155,26)" fg:x="180" fg:w="194"/><text x="32.5081%" y="302.50">gBAOAB_step_exact (main.cpp:163)</text></g><g><title>rattle_step (main.cpp:89) (32 samples, 5.73%)</title><rect x="61.2903%" y="308" width="5.7348%" height="15" fill="rgb(227,85,46)" fg:x="342" fg:w="32"/><text x="61.5403%" y="318.50">rattle_..</text></g><g><title>at::Tensor::squeeze (TensorBody.h:3523) (32 samples, 5.73%)</title><rect x="61.2903%" y="324" width="5.7348%" height="15" fill="rgb(251,107,43)" fg:x="342" fg:w="32"/><text x="61.5403%" y="334.50">at::Ten..</text></g><g><title>fast_jacobian (main.cpp:54) (2 samples, 0.36%)</title><rect x="66.6667%" y="340" width="0.3584%" height="15" fill="rgb(234,170,33)" fg:x="372" fg:w="2"/><text x="66.9167%" y="350.50"></text></g><g><title>at::_ops::stack::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="356" width="0.3584%" height="15" fill="rgb(206,29,35)" fg:x="372" fg:w="2"/><text x="66.9167%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="372" width="0.3584%" height="15" fill="rgb(227,138,25)" fg:x="372" fg:w="2"/><text x="66.9167%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="388" width="0.3584%" height="15" fill="rgb(249,131,35)" fg:x="372" fg:w="2"/><text x="66.9167%" y="398.50"></text></g><g><title>at::_ops::stack::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="404" width="0.3584%" height="15" fill="rgb(239,6,40)" fg:x="372" fg:w="2"/><text x="66.9167%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__stack(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="420" width="0.3584%" height="15" fill="rgb(246,136,47)" fg:x="372" fg:w="2"/><text x="66.9167%" y="430.50"></text></g><g><title>at::native::stack (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="436" width="0.3584%" height="15" fill="rgb(253,58,26)" fg:x="372" fg:w="2"/><text x="66.9167%" y="446.50"></text></g><g><title>at::_ops::cat::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="452" width="0.3584%" height="15" fill="rgb(237,141,10)" fg:x="372" fg:w="2"/><text x="66.9167%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long), &amp;at::(anonymous namespace)::wrapper_CPU_cat(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::IListRef&lt;at::Tensor&gt; const&amp;, long&gt; &gt;, at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="468" width="0.3584%" height="15" fill="rgb(234,156,12)" fg:x="372" fg:w="2"/><text x="66.9167%" y="478.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_cat (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="484" width="0.3584%" height="15" fill="rgb(243,224,36)" fg:x="372" fg:w="2"/><text x="66.9167%" y="494.50"></text></g><g><title>at::meta::structured_cat::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="500" width="0.3584%" height="15" fill="rgb(205,229,51)" fg:x="372" fg:w="2"/><text x="66.9167%" y="510.50"></text></g><g><title>at::(anonymous namespace)::structured_cat_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="516" width="0.3584%" height="15" fill="rgb(223,189,4)" fg:x="372" fg:w="2"/><text x="66.9167%" y="526.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="532" width="0.3584%" height="15" fill="rgb(249,167,54)" fg:x="372" fg:w="2"/><text x="66.9167%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="548" width="0.3584%" height="15" fill="rgb(218,34,28)" fg:x="372" fg:w="2"/><text x="66.9167%" y="558.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="564" width="0.3584%" height="15" fill="rgb(232,109,42)" fg:x="372" fg:w="2"/><text x="66.9167%" y="574.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="580" width="0.3584%" height="15" fill="rgb(248,214,46)" fg:x="372" fg:w="2"/><text x="66.9167%" y="590.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="596" width="0.3584%" height="15" fill="rgb(244,216,40)" fg:x="372" fg:w="2"/><text x="66.9167%" y="606.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="612" width="0.3584%" height="15" fill="rgb(231,226,31)" fg:x="372" fg:w="2"/><text x="66.9167%" y="622.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="628" width="0.3584%" height="15" fill="rgb(238,38,43)" fg:x="372" fg:w="2"/><text x="66.9167%" y="638.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (2 samples, 0.36%)</title><rect x="66.6667%" y="644" width="0.3584%" height="15" fill="rgb(208,88,43)" fg:x="372" fg:w="2"/><text x="66.9167%" y="654.50"></text></g><g><title>posix_memalign (libc.so.6) (2 samples, 0.36%)</title><rect x="66.6667%" y="660" width="0.3584%" height="15" fill="rgb(205,136,37)" fg:x="372" fg:w="2"/><text x="66.9167%" y="670.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (2 samples, 0.36%)</title><rect x="66.6667%" y="676" width="0.3584%" height="15" fill="rgb(237,34,14)" fg:x="372" fg:w="2"/><text x="66.9167%" y="686.50"></text></g><g><title>0x7f34fee99580 (libc.so.6) (1 samples, 0.18%)</title><rect x="66.8459%" y="692" width="0.1792%" height="15" fill="rgb(236,193,44)" fg:x="373" fg:w="1"/><text x="67.0959%" y="702.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="67.0251%" y="308" width="0.1792%" height="15" fill="rgb(231,48,10)" fg:x="374" fg:w="1"/><text x="67.2751%" y="318.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="67.0251%" y="324" width="0.1792%" height="15" fill="rgb(213,141,34)" fg:x="374" fg:w="1"/><text x="67.2751%" y="334.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="67.0251%" y="340" width="0.1792%" height="15" fill="rgb(249,130,34)" fg:x="374" fg:w="1"/><text x="67.2751%" y="350.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="67.0251%" y="356" width="0.1792%" height="15" fill="rgb(219,42,41)" fg:x="374" fg:w="1"/><text x="67.2751%" y="366.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (1 samples, 0.18%)</title><rect x="67.0251%" y="372" width="0.1792%" height="15" fill="rgb(224,100,54)" fg:x="374" fg:w="1"/><text x="67.2751%" y="382.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (1 samples, 0.18%)</title><rect x="67.0251%" y="388" width="0.1792%" height="15" fill="rgb(229,200,27)" fg:x="374" fg:w="1"/><text x="67.2751%" y="398.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (1 samples, 0.18%)</title><rect x="67.0251%" y="404" width="0.1792%" height="15" fill="rgb(217,118,10)" fg:x="374" fg:w="1"/><text x="67.2751%" y="414.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (1 samples, 0.18%)</title><rect x="67.0251%" y="420" width="0.1792%" height="15" fill="rgb(206,22,3)" fg:x="374" fg:w="1"/><text x="67.2751%" y="430.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (1 samples, 0.18%)</title><rect x="67.0251%" y="436" width="0.1792%" height="15" fill="rgb(232,163,46)" fg:x="374" fg:w="1"/><text x="67.2751%" y="446.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (1 samples, 0.18%)</title><rect x="67.0251%" y="452" width="0.1792%" height="15" fill="rgb(206,95,13)" fg:x="374" fg:w="1"/><text x="67.2751%" y="462.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (1 samples, 0.18%)</title><rect x="67.0251%" y="468" width="0.1792%" height="15" fill="rgb(253,154,18)" fg:x="374" fg:w="1"/><text x="67.2751%" y="478.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (1 samples, 0.18%)</title><rect x="67.0251%" y="484" width="0.1792%" height="15" fill="rgb(219,32,23)" fg:x="374" fg:w="1"/><text x="67.2751%" y="494.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="67.0251%" y="500" width="0.1792%" height="15" fill="rgb(230,191,45)" fg:x="374" fg:w="1"/><text x="67.2751%" y="510.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="67.0251%" y="516" width="0.1792%" height="15" fill="rgb(229,64,36)" fg:x="374" fg:w="1"/><text x="67.2751%" y="526.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="67.0251%" y="532" width="0.1792%" height="15" fill="rgb(205,129,25)" fg:x="374" fg:w="1"/><text x="67.2751%" y="542.50"></text></g><g><title>my_length_constraint (main.cpp:268) (1 samples, 0.18%)</title><rect x="67.0251%" y="548" width="0.1792%" height="15" fill="rgb(254,112,7)" fg:x="374" fg:w="1"/><text x="67.2751%" y="558.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.0251%" y="564" width="0.1792%" height="15" fill="rgb(226,53,48)" fg:x="374" fg:w="1"/><text x="67.2751%" y="574.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.0251%" y="580" width="0.1792%" height="15" fill="rgb(214,153,38)" fg:x="374" fg:w="1"/><text x="67.2751%" y="590.50"></text></g><g><title>pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="67.2043%" y="532" width="0.1792%" height="15" fill="rgb(243,101,7)" fg:x="375" fg:w="1"/><text x="67.4543%" y="542.50"></text></g><g><title>fast_jacobian (main.cpp:47) (2 samples, 0.36%)</title><rect x="67.2043%" y="308" width="0.3584%" height="15" fill="rgb(240,140,22)" fg:x="375" fg:w="2"/><text x="67.4543%" y="318.50"></text></g><g><title>at::Tensor::backward (TensorBody.h:445) (2 samples, 0.36%)</title><rect x="67.2043%" y="324" width="0.3584%" height="15" fill="rgb(235,114,2)" fg:x="375" fg:w="2"/><text x="67.4543%" y="334.50"></text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (2 samples, 0.36%)</title><rect x="67.2043%" y="340" width="0.3584%" height="15" fill="rgb(242,59,12)" fg:x="375" fg:w="2"/><text x="67.4543%" y="350.50"></text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (2 samples, 0.36%)</title><rect x="67.2043%" y="356" width="0.3584%" height="15" fill="rgb(252,134,9)" fg:x="375" fg:w="2"/><text x="67.4543%" y="366.50"></text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="372" width="0.3584%" height="15" fill="rgb(236,4,44)" fg:x="375" fg:w="2"/><text x="67.4543%" y="382.50"></text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="388" width="0.3584%" height="15" fill="rgb(254,172,41)" fg:x="375" fg:w="2"/><text x="67.4543%" y="398.50"></text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="404" width="0.3584%" height="15" fill="rgb(244,63,20)" fg:x="375" fg:w="2"/><text x="67.4543%" y="414.50"></text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="420" width="0.3584%" height="15" fill="rgb(250,73,31)" fg:x="375" fg:w="2"/><text x="67.4543%" y="430.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="436" width="0.3584%" height="15" fill="rgb(241,38,36)" fg:x="375" fg:w="2"/><text x="67.4543%" y="446.50"></text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="452" width="0.3584%" height="15" fill="rgb(245,211,2)" fg:x="375" fg:w="2"/><text x="67.4543%" y="462.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="468" width="0.3584%" height="15" fill="rgb(206,120,28)" fg:x="375" fg:w="2"/><text x="67.4543%" y="478.50"></text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="484" width="0.3584%" height="15" fill="rgb(211,59,34)" fg:x="375" fg:w="2"/><text x="67.4543%" y="494.50"></text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="500" width="0.3584%" height="15" fill="rgb(233,168,5)" fg:x="375" fg:w="2"/><text x="67.4543%" y="510.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.2043%" y="516" width="0.3584%" height="15" fill="rgb(234,33,13)" fg:x="375" fg:w="2"/><text x="67.4543%" y="526.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.3835%" y="532" width="0.1792%" height="15" fill="rgb(231,150,26)" fg:x="376" fg:w="1"/><text x="67.6335%" y="542.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.3835%" y="548" width="0.1792%" height="15" fill="rgb(217,191,4)" fg:x="376" fg:w="1"/><text x="67.6335%" y="558.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.3835%" y="564" width="0.1792%" height="15" fill="rgb(246,198,38)" fg:x="376" fg:w="1"/><text x="67.6335%" y="574.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.3835%" y="580" width="0.1792%" height="15" fill="rgb(245,64,37)" fg:x="376" fg:w="1"/><text x="67.6335%" y="590.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:172) (4 samples, 0.72%)</title><rect x="67.0251%" y="292" width="0.7168%" height="15" fill="rgb(250,30,36)" fg:x="374" fg:w="4"/><text x="67.2751%" y="302.50"></text></g><g><title>fast_jacobian (main.cpp:54) (1 samples, 0.18%)</title><rect x="67.5627%" y="308" width="0.1792%" height="15" fill="rgb(217,86,53)" fg:x="377" fg:w="1"/><text x="67.8127%" y="318.50"></text></g><g><title>at::_ops::stack::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="324" width="0.1792%" height="15" fill="rgb(228,157,16)" fg:x="377" fg:w="1"/><text x="67.8127%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="340" width="0.1792%" height="15" fill="rgb(217,59,31)" fg:x="377" fg:w="1"/><text x="67.8127%" y="350.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="356" width="0.1792%" height="15" fill="rgb(237,138,41)" fg:x="377" fg:w="1"/><text x="67.8127%" y="366.50"></text></g><g><title>at::_ops::stack::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="372" width="0.1792%" height="15" fill="rgb(227,91,49)" fg:x="377" fg:w="1"/><text x="67.8127%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__stack(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="388" width="0.1792%" height="15" fill="rgb(247,21,44)" fg:x="377" fg:w="1"/><text x="67.8127%" y="398.50"></text></g><g><title>at::native::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="404" width="0.1792%" height="15" fill="rgb(219,210,51)" fg:x="377" fg:w="1"/><text x="67.8127%" y="414.50"></text></g><g><title>at::_ops::cat::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="420" width="0.1792%" height="15" fill="rgb(209,140,6)" fg:x="377" fg:w="1"/><text x="67.8127%" y="430.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long), &amp;at::(anonymous namespace)::wrapper_CPU_cat(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::IListRef&lt;at::Tensor&gt; const&amp;, long&gt; &gt;, at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="436" width="0.1792%" height="15" fill="rgb(221,188,24)" fg:x="377" fg:w="1"/><text x="67.8127%" y="446.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_cat (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="452" width="0.1792%" height="15" fill="rgb(232,154,20)" fg:x="377" fg:w="1"/><text x="67.8127%" y="462.50"></text></g><g><title>at::meta::structured_cat::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="468" width="0.1792%" height="15" fill="rgb(244,137,50)" fg:x="377" fg:w="1"/><text x="67.8127%" y="478.50"></text></g><g><title>at::(anonymous namespace)::structured_cat_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="484" width="0.1792%" height="15" fill="rgb(225,185,43)" fg:x="377" fg:w="1"/><text x="67.8127%" y="494.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="500" width="0.1792%" height="15" fill="rgb(213,205,38)" fg:x="377" fg:w="1"/><text x="67.8127%" y="510.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="516" width="0.1792%" height="15" fill="rgb(236,73,12)" fg:x="377" fg:w="1"/><text x="67.8127%" y="526.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="532" width="0.1792%" height="15" fill="rgb(235,219,13)" fg:x="377" fg:w="1"/><text x="67.8127%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="548" width="0.1792%" height="15" fill="rgb(218,59,36)" fg:x="377" fg:w="1"/><text x="67.8127%" y="558.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="564" width="0.1792%" height="15" fill="rgb(205,110,39)" fg:x="377" fg:w="1"/><text x="67.8127%" y="574.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="580" width="0.1792%" height="15" fill="rgb(218,206,42)" fg:x="377" fg:w="1"/><text x="67.8127%" y="590.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="596" width="0.1792%" height="15" fill="rgb(248,125,24)" fg:x="377" fg:w="1"/><text x="67.8127%" y="606.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="67.5627%" y="612" width="0.1792%" height="15" fill="rgb(242,28,27)" fg:x="377" fg:w="1"/><text x="67.8127%" y="622.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="67.5627%" y="628" width="0.1792%" height="15" fill="rgb(216,228,15)" fg:x="377" fg:w="1"/><text x="67.8127%" y="638.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="67.5627%" y="644" width="0.1792%" height="15" fill="rgb(235,116,46)" fg:x="377" fg:w="1"/><text x="67.8127%" y="654.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (1 samples, 0.18%)</title><rect x="67.5627%" y="660" width="0.1792%" height="15" fill="rgb(224,18,32)" fg:x="377" fg:w="1"/><text x="67.8127%" y="670.50"></text></g><g><title>0x7f34fee9689e (libc.so.6) (1 samples, 0.18%)</title><rect x="67.5627%" y="676" width="0.1792%" height="15" fill="rgb(252,5,12)" fg:x="377" fg:w="1"/><text x="67.8127%" y="686.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.7419%" y="756" width="0.1792%" height="15" fill="rgb(251,36,5)" fg:x="378" fg:w="1"/><text x="67.9919%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.7419%" y="772" width="0.1792%" height="15" fill="rgb(217,53,14)" fg:x="378" fg:w="1"/><text x="67.9919%" y="782.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.7419%" y="788" width="0.1792%" height="15" fill="rgb(215,86,45)" fg:x="378" fg:w="1"/><text x="67.9919%" y="798.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.7419%" y="804" width="0.1792%" height="15" fill="rgb(242,169,11)" fg:x="378" fg:w="1"/><text x="67.9919%" y="814.50"></text></g><g><title>at::namedinference::propagate_names_except (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="67.7419%" y="820" width="0.1792%" height="15" fill="rgb(211,213,45)" fg:x="378" fg:w="1"/><text x="67.9919%" y="830.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.7419%" y="708" width="0.3584%" height="15" fill="rgb(205,88,11)" fg:x="378" fg:w="2"/><text x="67.9919%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.7419%" y="724" width="0.3584%" height="15" fill="rgb(252,69,26)" fg:x="378" fg:w="2"/><text x="67.9919%" y="734.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="67.7419%" y="740" width="0.3584%" height="15" fill="rgb(246,123,37)" fg:x="378" fg:w="2"/><text x="67.9919%" y="750.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="67.9211%" y="756" width="0.1792%" height="15" fill="rgb(212,205,5)" fg:x="379" fg:w="1"/><text x="68.1711%" y="766.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="67.9211%" y="772" width="0.1792%" height="15" fill="rgb(253,148,0)" fg:x="379" fg:w="1"/><text x="68.1711%" y="782.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="67.9211%" y="788" width="0.1792%" height="15" fill="rgb(239,22,4)" fg:x="379" fg:w="1"/><text x="68.1711%" y="798.50"></text></g><g><title>0x7f34ff179cac (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="67.9211%" y="804" width="0.1792%" height="15" fill="rgb(226,26,53)" fg:x="379" fg:w="1"/><text x="68.1711%" y="814.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (3 samples, 0.54%)</title><rect x="67.7419%" y="612" width="0.5376%" height="15" fill="rgb(225,229,45)" fg:x="378" fg:w="3"/><text x="67.9919%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (3 samples, 0.54%)</title><rect x="67.7419%" y="628" width="0.5376%" height="15" fill="rgb(220,60,37)" fg:x="378" fg:w="3"/><text x="67.9919%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (3 samples, 0.54%)</title><rect x="67.7419%" y="644" width="0.5376%" height="15" fill="rgb(217,180,35)" fg:x="378" fg:w="3"/><text x="67.9919%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="67.7419%" y="660" width="0.5376%" height="15" fill="rgb(229,7,53)" fg:x="378" fg:w="3"/><text x="67.9919%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="67.7419%" y="676" width="0.5376%" height="15" fill="rgb(254,137,3)" fg:x="378" fg:w="3"/><text x="67.9919%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="67.7419%" y="692" width="0.5376%" height="15" fill="rgb(215,140,41)" fg:x="378" fg:w="3"/><text x="67.9919%" y="702.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.1004%" y="708" width="0.1792%" height="15" fill="rgb(250,80,15)" fg:x="380" fg:w="1"/><text x="68.3504%" y="718.50"></text></g><g><title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::emplace_back&lt;torch::autograd::Edge&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.1004%" y="724" width="0.1792%" height="15" fill="rgb(252,191,6)" fg:x="380" fg:w="1"/><text x="68.3504%" y="734.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="68.1004%" y="740" width="0.1792%" height="15" fill="rgb(246,217,18)" fg:x="380" fg:w="1"/><text x="68.3504%" y="750.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="68.1004%" y="756" width="0.1792%" height="15" fill="rgb(223,93,7)" fg:x="380" fg:w="1"/><text x="68.3504%" y="766.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (4 samples, 0.72%)</title><rect x="67.7419%" y="596" width="0.7168%" height="15" fill="rgb(225,55,52)" fg:x="378" fg:w="4"/><text x="67.9919%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.2796%" y="612" width="0.1792%" height="15" fill="rgb(240,31,24)" fg:x="381" fg:w="1"/><text x="68.5296%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.2796%" y="628" width="0.1792%" height="15" fill="rgb(205,56,52)" fg:x="381" fg:w="1"/><text x="68.5296%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.2796%" y="644" width="0.1792%" height="15" fill="rgb(246,146,12)" fg:x="381" fg:w="1"/><text x="68.5296%" y="654.50"></text></g><g><title>torch::autograd::set_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.2796%" y="660" width="0.1792%" height="15" fill="rgb(239,84,36)" fg:x="381" fg:w="1"/><text x="68.5296%" y="670.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.2796%" y="676" width="0.1792%" height="15" fill="rgb(207,41,40)" fg:x="381" fg:w="1"/><text x="68.5296%" y="686.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.6380%" y="804" width="0.1792%" height="15" fill="rgb(241,179,25)" fg:x="383" fg:w="1"/><text x="68.8880%" y="814.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.6380%" y="820" width="0.1792%" height="15" fill="rgb(210,0,34)" fg:x="383" fg:w="1"/><text x="68.8880%" y="830.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.6380%" y="836" width="0.1792%" height="15" fill="rgb(225,217,29)" fg:x="383" fg:w="1"/><text x="68.8880%" y="846.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="692" width="0.3584%" height="15" fill="rgb(216,191,38)" fg:x="383" fg:w="2"/><text x="68.8880%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="708" width="0.3584%" height="15" fill="rgb(232,140,52)" fg:x="383" fg:w="2"/><text x="68.8880%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="724" width="0.3584%" height="15" fill="rgb(223,158,51)" fg:x="383" fg:w="2"/><text x="68.8880%" y="734.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="740" width="0.3584%" height="15" fill="rgb(235,29,51)" fg:x="383" fg:w="2"/><text x="68.8880%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="756" width="0.3584%" height="15" fill="rgb(215,181,18)" fg:x="383" fg:w="2"/><text x="68.8880%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="772" width="0.3584%" height="15" fill="rgb(227,125,34)" fg:x="383" fg:w="2"/><text x="68.8880%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="68.6380%" y="788" width="0.3584%" height="15" fill="rgb(230,197,49)" fg:x="383" fg:w="2"/><text x="68.8880%" y="798.50"></text></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;c10::SymInt const*, c10::SymInt*&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="68.8172%" y="804" width="0.1792%" height="15" fill="rgb(239,141,16)" fg:x="384" fg:w="1"/><text x="69.0672%" y="814.50"></text></g><g><title>c10::GradMode::is_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="68.9964%" y="692" width="0.1792%" height="15" fill="rgb(225,105,43)" fg:x="385" fg:w="1"/><text x="69.2464%" y="702.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="68.9964%" y="708" width="0.1792%" height="15" fill="rgb(214,131,14)" fg:x="385" fg:w="1"/><text x="69.2464%" y="718.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="68.9964%" y="724" width="0.1792%" height="15" fill="rgb(229,177,11)" fg:x="385" fg:w="1"/><text x="69.2464%" y="734.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="68.9964%" y="740" width="0.1792%" height="15" fill="rgb(231,180,14)" fg:x="385" fg:w="1"/><text x="69.2464%" y="750.50"></text></g><g><title>0x7f34ff179cb3 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="68.9964%" y="756" width="0.1792%" height="15" fill="rgb(232,88,2)" fg:x="385" fg:w="1"/><text x="69.2464%" y="766.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (5 samples, 0.90%)</title><rect x="68.4588%" y="596" width="0.8961%" height="15" fill="rgb(205,220,8)" fg:x="382" fg:w="5"/><text x="68.7088%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (5 samples, 0.90%)</title><rect x="68.4588%" y="612" width="0.8961%" height="15" fill="rgb(225,23,53)" fg:x="382" fg:w="5"/><text x="68.7088%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (5 samples, 0.90%)</title><rect x="68.4588%" y="628" width="0.8961%" height="15" fill="rgb(213,62,29)" fg:x="382" fg:w="5"/><text x="68.7088%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="68.4588%" y="644" width="0.8961%" height="15" fill="rgb(227,75,7)" fg:x="382" fg:w="5"/><text x="68.7088%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="68.6380%" y="660" width="0.7168%" height="15" fill="rgb(207,105,14)" fg:x="383" fg:w="4"/><text x="68.8880%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="68.6380%" y="676" width="0.7168%" height="15" fill="rgb(245,62,29)" fg:x="383" fg:w="4"/><text x="68.8880%" y="686.50"></text></g><g><title>torch::autograd::Node::Node (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.1756%" y="692" width="0.1792%" height="15" fill="rgb(236,202,4)" fg:x="386" fg:w="1"/><text x="69.4256%" y="702.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="69.3548%" y="596" width="0.1792%" height="15" fill="rgb(250,67,1)" fg:x="387" fg:w="1"/><text x="69.6048%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="69.3548%" y="612" width="0.1792%" height="15" fill="rgb(253,115,44)" fg:x="387" fg:w="1"/><text x="69.6048%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="69.3548%" y="628" width="0.1792%" height="15" fill="rgb(251,139,18)" fg:x="387" fg:w="1"/><text x="69.6048%" y="638.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="69.3548%" y="644" width="0.1792%" height="15" fill="rgb(218,22,32)" fg:x="387" fg:w="1"/><text x="69.6048%" y="654.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="69.3548%" y="660" width="0.1792%" height="15" fill="rgb(243,53,5)" fg:x="387" fg:w="1"/><text x="69.6048%" y="670.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="69.3548%" y="676" width="0.1792%" height="15" fill="rgb(227,56,16)" fg:x="387" fg:w="1"/><text x="69.6048%" y="686.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.3548%" y="692" width="0.1792%" height="15" fill="rgb(245,53,0)" fg:x="387" fg:w="1"/><text x="69.6048%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.3548%" y="708" width="0.1792%" height="15" fill="rgb(216,170,35)" fg:x="387" fg:w="1"/><text x="69.6048%" y="718.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.3548%" y="724" width="0.1792%" height="15" fill="rgb(211,200,8)" fg:x="387" fg:w="1"/><text x="69.6048%" y="734.50"></text></g><g><title>torch::autograd::flatten_tensor_args&lt;at::Tensor&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.3548%" y="740" width="0.1792%" height="15" fill="rgb(228,204,44)" fg:x="387" fg:w="1"/><text x="69.6048%" y="750.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::emplace_back&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.3548%" y="756" width="0.1792%" height="15" fill="rgb(214,121,17)" fg:x="387" fg:w="1"/><text x="69.6048%" y="766.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.5341%" y="596" width="0.1792%" height="15" fill="rgb(233,64,38)" fg:x="388" fg:w="1"/><text x="69.7841%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.5341%" y="612" width="0.1792%" height="15" fill="rgb(253,54,19)" fg:x="388" fg:w="1"/><text x="69.7841%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.5341%" y="628" width="0.1792%" height="15" fill="rgb(253,94,18)" fg:x="388" fg:w="1"/><text x="69.7841%" y="638.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="69.5341%" y="644" width="0.1792%" height="15" fill="rgb(227,57,52)" fg:x="388" fg:w="1"/><text x="69.7841%" y="654.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="69.5341%" y="660" width="0.1792%" height="15" fill="rgb(230,228,50)" fg:x="388" fg:w="1"/><text x="69.7841%" y="670.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="69.5341%" y="676" width="0.1792%" height="15" fill="rgb(217,205,27)" fg:x="388" fg:w="1"/><text x="69.7841%" y="686.50"></text></g><g><title>at::pow (pow.h:64) (1 samples, 0.18%)</title><rect x="69.7133%" y="596" width="0.1792%" height="15" fill="rgb(252,71,50)" fg:x="389" fg:w="1"/><text x="69.9633%" y="606.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="69.7133%" y="612" width="0.1792%" height="15" fill="rgb(209,86,4)" fg:x="389" fg:w="1"/><text x="69.9633%" y="622.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="69.7133%" y="628" width="0.1792%" height="15" fill="rgb(229,94,0)" fg:x="389" fg:w="1"/><text x="69.9633%" y="638.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="69.7133%" y="644" width="0.1792%" height="15" fill="rgb(252,223,21)" fg:x="389" fg:w="1"/><text x="69.9633%" y="654.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="660" width="0.1792%" height="15" fill="rgb(230,210,4)" fg:x="389" fg:w="1"/><text x="69.9633%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="676" width="0.1792%" height="15" fill="rgb(240,149,38)" fg:x="389" fg:w="1"/><text x="69.9633%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="692" width="0.1792%" height="15" fill="rgb(254,105,20)" fg:x="389" fg:w="1"/><text x="69.9633%" y="702.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="708" width="0.1792%" height="15" fill="rgb(253,87,46)" fg:x="389" fg:w="1"/><text x="69.9633%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="724" width="0.1792%" height="15" fill="rgb(253,116,33)" fg:x="389" fg:w="1"/><text x="69.9633%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="740" width="0.1792%" height="15" fill="rgb(229,198,5)" fg:x="389" fg:w="1"/><text x="69.9633%" y="750.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="756" width="0.1792%" height="15" fill="rgb(242,38,37)" fg:x="389" fg:w="1"/><text x="69.9633%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="772" width="0.1792%" height="15" fill="rgb(242,69,53)" fg:x="389" fg:w="1"/><text x="69.9633%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="788" width="0.1792%" height="15" fill="rgb(249,80,16)" fg:x="389" fg:w="1"/><text x="69.9633%" y="798.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.7133%" y="804" width="0.1792%" height="15" fill="rgb(206,128,11)" fg:x="389" fg:w="1"/><text x="69.9633%" y="814.50"></text></g><g><title>c10::impl::OperatorEntry::lookup (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="69.8925%" y="660" width="0.1792%" height="15" fill="rgb(212,35,20)" fg:x="390" fg:w="1"/><text x="70.1425%" y="670.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.0717%" y="788" width="0.1792%" height="15" fill="rgb(236,79,13)" fg:x="391" fg:w="1"/><text x="70.3217%" y="798.50"></text></g><g><title>at::TensorIteratorBase::compute_fast_setup_type (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.0717%" y="804" width="0.1792%" height="15" fill="rgb(233,123,3)" fg:x="391" fg:w="1"/><text x="70.3217%" y="814.50"></text></g><g><title>evG (TensorBody.h:92) (15 samples, 2.69%)</title><rect x="67.7419%" y="340" width="2.6882%" height="15" fill="rgb(214,93,52)" fg:x="378" fg:w="15"/><text x="67.9919%" y="350.50">ev..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (15 samples, 2.69%)</title><rect x="67.7419%" y="356" width="2.6882%" height="15" fill="rgb(251,37,40)" fg:x="378" fg:w="15"/><text x="67.9919%" y="366.50">at..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (15 samples, 2.69%)</title><rect x="67.7419%" y="372" width="2.6882%" height="15" fill="rgb(227,80,54)" fg:x="378" fg:w="15"/><text x="67.9919%" y="382.50">at..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (15 samples, 2.69%)</title><rect x="67.7419%" y="388" width="2.6882%" height="15" fill="rgb(254,48,11)" fg:x="378" fg:w="15"/><text x="67.9919%" y="398.50">c1..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (15 samples, 2.69%)</title><rect x="67.7419%" y="404" width="2.6882%" height="15" fill="rgb(235,193,26)" fg:x="378" fg:w="15"/><text x="67.9919%" y="414.50">c1..</text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (15 samples, 2.69%)</title><rect x="67.7419%" y="420" width="2.6882%" height="15" fill="rgb(229,99,21)" fg:x="378" fg:w="15"/><text x="67.9919%" y="430.50">st..</text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (15 samples, 2.69%)</title><rect x="67.7419%" y="436" width="2.6882%" height="15" fill="rgb(211,140,41)" fg:x="378" fg:w="15"/><text x="67.9919%" y="446.50">st..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (15 samples, 2.69%)</title><rect x="67.7419%" y="452" width="2.6882%" height="15" fill="rgb(240,227,30)" fg:x="378" fg:w="15"/><text x="67.9919%" y="462.50">st..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (15 samples, 2.69%)</title><rect x="67.7419%" y="468" width="2.6882%" height="15" fill="rgb(215,224,45)" fg:x="378" fg:w="15"/><text x="67.9919%" y="478.50">st..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (15 samples, 2.69%)</title><rect x="67.7419%" y="484" width="2.6882%" height="15" fill="rgb(206,123,31)" fg:x="378" fg:w="15"/><text x="67.9919%" y="494.50">st..</text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (15 samples, 2.69%)</title><rect x="67.7419%" y="500" width="2.6882%" height="15" fill="rgb(210,138,16)" fg:x="378" fg:w="15"/><text x="67.9919%" y="510.50">st..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (15 samples, 2.69%)</title><rect x="67.7419%" y="516" width="2.6882%" height="15" fill="rgb(228,57,28)" fg:x="378" fg:w="15"/><text x="67.9919%" y="526.50">st..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (15 samples, 2.69%)</title><rect x="67.7419%" y="532" width="2.6882%" height="15" fill="rgb(242,170,10)" fg:x="378" fg:w="15"/><text x="67.9919%" y="542.50">at..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (15 samples, 2.69%)</title><rect x="67.7419%" y="548" width="2.6882%" height="15" fill="rgb(228,214,39)" fg:x="378" fg:w="15"/><text x="67.9919%" y="558.50">at..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (15 samples, 2.69%)</title><rect x="67.7419%" y="564" width="2.6882%" height="15" fill="rgb(218,179,33)" fg:x="378" fg:w="15"/><text x="67.9919%" y="574.50">c1..</text></g><g><title>my_length_constraint (main.cpp:268) (15 samples, 2.69%)</title><rect x="67.7419%" y="580" width="2.6882%" height="15" fill="rgb(235,193,39)" fg:x="378" fg:w="15"/><text x="67.9919%" y="590.50">my..</text></g><g><title>operator- (TensorOperators.h:50) (3 samples, 0.54%)</title><rect x="69.8925%" y="596" width="0.5376%" height="15" fill="rgb(219,221,36)" fg:x="390" fg:w="3"/><text x="70.1425%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (3 samples, 0.54%)</title><rect x="69.8925%" y="612" width="0.5376%" height="15" fill="rgb(248,218,19)" fg:x="390" fg:w="3"/><text x="70.1425%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (3 samples, 0.54%)</title><rect x="69.8925%" y="628" width="0.5376%" height="15" fill="rgb(205,50,9)" fg:x="390" fg:w="3"/><text x="70.1425%" y="638.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="69.8925%" y="644" width="0.5376%" height="15" fill="rgb(238,81,28)" fg:x="390" fg:w="3"/><text x="70.1425%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="660" width="0.3584%" height="15" fill="rgb(235,110,19)" fg:x="391" fg:w="2"/><text x="70.3217%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="676" width="0.3584%" height="15" fill="rgb(214,7,14)" fg:x="391" fg:w="2"/><text x="70.3217%" y="686.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="692" width="0.3584%" height="15" fill="rgb(211,77,3)" fg:x="391" fg:w="2"/><text x="70.3217%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="708" width="0.3584%" height="15" fill="rgb(229,5,9)" fg:x="391" fg:w="2"/><text x="70.3217%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="724" width="0.3584%" height="15" fill="rgb(225,90,11)" fg:x="391" fg:w="2"/><text x="70.3217%" y="734.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="740" width="0.3584%" height="15" fill="rgb(242,56,8)" fg:x="391" fg:w="2"/><text x="70.3217%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="756" width="0.3584%" height="15" fill="rgb(249,212,39)" fg:x="391" fg:w="2"/><text x="70.3217%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="70.0717%" y="772" width="0.3584%" height="15" fill="rgb(236,90,9)" fg:x="391" fg:w="2"/><text x="70.3217%" y="782.50"></text></g><g><title>at::TensorIteratorBase::mark_resize_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.2509%" y="788" width="0.1792%" height="15" fill="rgb(206,88,35)" fg:x="392" fg:w="1"/><text x="70.5009%" y="798.50"></text></g><g><title>at::TensorBase::options (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.4301%" y="452" width="0.1792%" height="15" fill="rgb(205,126,30)" fg:x="393" fg:w="1"/><text x="70.6801%" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="70.6093%" y="468" width="0.1792%" height="15" fill="rgb(230,176,12)" fg:x="394" fg:w="1"/><text x="70.8593%" y="478.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="70.6093%" y="484" width="0.1792%" height="15" fill="rgb(243,19,9)" fg:x="394" fg:w="1"/><text x="70.8593%" y="494.50"></text></g><g><title>0x7f34fee998b0 (libc.so.6) (1 samples, 0.18%)</title><rect x="70.6093%" y="500" width="0.1792%" height="15" fill="rgb(245,171,17)" fg:x="394" fg:w="1"/><text x="70.8593%" y="510.50"></text></g><g><title>torch::autograd::CopySlices::CopySlices (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.7885%" y="468" width="0.1792%" height="15" fill="rgb(227,52,21)" fg:x="395" fg:w="1"/><text x="71.0385%" y="478.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.7885%" y="484" width="0.1792%" height="15" fill="rgb(238,69,14)" fg:x="395" fg:w="1"/><text x="71.0385%" y="494.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (4 samples, 0.72%)</title><rect x="70.4301%" y="356" width="0.7168%" height="15" fill="rgb(241,156,39)" fg:x="393" fg:w="4"/><text x="70.6801%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (4 samples, 0.72%)</title><rect x="70.4301%" y="372" width="0.7168%" height="15" fill="rgb(212,227,28)" fg:x="393" fg:w="4"/><text x="70.6801%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (4 samples, 0.72%)</title><rect x="70.4301%" y="388" width="0.7168%" height="15" fill="rgb(209,118,27)" fg:x="393" fg:w="4"/><text x="70.6801%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (4 samples, 0.72%)</title><rect x="70.4301%" y="404" width="0.7168%" height="15" fill="rgb(226,102,5)" fg:x="393" fg:w="4"/><text x="70.6801%" y="414.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="70.4301%" y="420" width="0.7168%" height="15" fill="rgb(223,34,3)" fg:x="393" fg:w="4"/><text x="70.6801%" y="430.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="70.4301%" y="436" width="0.7168%" height="15" fill="rgb(221,81,38)" fg:x="393" fg:w="4"/><text x="70.6801%" y="446.50"></text></g><g><title>torch::autograd::impl::rebase_history (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="70.6093%" y="452" width="0.5376%" height="15" fill="rgb(236,219,28)" fg:x="394" fg:w="3"/><text x="70.8593%" y="462.50"></text></g><g><title>torch::autograd::VariableHooks::grad_fn (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.9677%" y="468" width="0.1792%" height="15" fill="rgb(213,200,14)" fg:x="396" fg:w="1"/><text x="71.2177%" y="478.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.9677%" y="484" width="0.1792%" height="15" fill="rgb(240,33,19)" fg:x="396" fg:w="1"/><text x="71.2177%" y="494.50"></text></g><g><title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::emplace_back&lt;torch::autograd::Edge&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="70.9677%" y="500" width="0.1792%" height="15" fill="rgb(233,113,27)" fg:x="396" fg:w="1"/><text x="71.2177%" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="70.9677%" y="516" width="0.1792%" height="15" fill="rgb(220,221,18)" fg:x="396" fg:w="1"/><text x="71.2177%" y="526.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="70.9677%" y="532" width="0.1792%" height="15" fill="rgb(238,92,8)" fg:x="396" fg:w="1"/><text x="71.2177%" y="542.50"></text></g><g><title>0x7f34fee98cfd (libc.so.6) (1 samples, 0.18%)</title><rect x="70.9677%" y="548" width="0.1792%" height="15" fill="rgb(222,164,16)" fg:x="396" fg:w="1"/><text x="71.2177%" y="558.50"></text></g><g><title>at::Tensor::t (TensorBody.h:3678) (20 samples, 3.58%)</title><rect x="67.7419%" y="324" width="3.5842%" height="15" fill="rgb(241,119,3)" fg:x="378" fg:w="20"/><text x="67.9919%" y="334.50">at::..</text></g><g><title>evG (main.cpp:68) (5 samples, 0.90%)</title><rect x="70.4301%" y="340" width="0.8961%" height="15" fill="rgb(241,44,8)" fg:x="393" fg:w="5"/><text x="70.6801%" y="350.50"></text></g><g><title>at::_ops::squeeze::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="356" width="0.1792%" height="15" fill="rgb(230,36,40)" fg:x="397" fg:w="1"/><text x="71.3970%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::squeeze(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="372" width="0.1792%" height="15" fill="rgb(243,16,36)" fg:x="397" fg:w="1"/><text x="71.3970%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::squeeze (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="388" width="0.1792%" height="15" fill="rgb(231,4,26)" fg:x="397" fg:w="1"/><text x="71.3970%" y="398.50"></text></g><g><title>at::_ops::squeeze::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="404" width="0.1792%" height="15" fill="rgb(240,9,31)" fg:x="397" fg:w="1"/><text x="71.3970%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::squeeze(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="420" width="0.1792%" height="15" fill="rgb(207,173,15)" fg:x="397" fg:w="1"/><text x="71.3970%" y="430.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::squeeze (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.1470%" y="436" width="0.1792%" height="15" fill="rgb(224,192,53)" fg:x="397" fg:w="1"/><text x="71.3970%" y="446.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="324" width="0.1792%" height="15" fill="rgb(223,67,28)" fg:x="398" fg:w="1"/><text x="71.5762%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="340" width="0.1792%" height="15" fill="rgb(211,20,47)" fg:x="398" fg:w="1"/><text x="71.5762%" y="350.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="356" width="0.1792%" height="15" fill="rgb(240,228,2)" fg:x="398" fg:w="1"/><text x="71.5762%" y="366.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="372" width="0.1792%" height="15" fill="rgb(248,151,12)" fg:x="398" fg:w="1"/><text x="71.5762%" y="382.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="388" width="0.1792%" height="15" fill="rgb(244,8,39)" fg:x="398" fg:w="1"/><text x="71.5762%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mm(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="404" width="0.1792%" height="15" fill="rgb(222,26,8)" fg:x="398" fg:w="1"/><text x="71.5762%" y="414.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="420" width="0.1792%" height="15" fill="rgb(213,106,44)" fg:x="398" fg:w="1"/><text x="71.5762%" y="430.50"></text></g><g><title>at::_ops::mm::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="436" width="0.1792%" height="15" fill="rgb(214,129,20)" fg:x="398" fg:w="1"/><text x="71.5762%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="452" width="0.1792%" height="15" fill="rgb(212,32,13)" fg:x="398" fg:w="1"/><text x="71.5762%" y="462.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="468" width="0.1792%" height="15" fill="rgb(208,168,33)" fg:x="398" fg:w="1"/><text x="71.5762%" y="478.50"></text></g><g><title>at::native::structured_mm_out_cpu::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="484" width="0.1792%" height="15" fill="rgb(231,207,8)" fg:x="398" fg:w="1"/><text x="71.5762%" y="494.50"></text></g><g><title>at::native::addmm_impl_cpu_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="500" width="0.1792%" height="15" fill="rgb(235,219,23)" fg:x="398" fg:w="1"/><text x="71.5762%" y="510.50"></text></g><g><title>at::_ops::resolve_conj::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.3262%" y="516" width="0.1792%" height="15" fill="rgb(226,216,26)" fg:x="398" fg:w="1"/><text x="71.5762%" y="526.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="340" width="0.1792%" height="15" fill="rgb(239,137,16)" fg:x="399" fg:w="1"/><text x="71.7554%" y="350.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="356" width="0.1792%" height="15" fill="rgb(207,12,36)" fg:x="399" fg:w="1"/><text x="71.7554%" y="366.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="372" width="0.1792%" height="15" fill="rgb(210,214,24)" fg:x="399" fg:w="1"/><text x="71.7554%" y="382.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="388" width="0.1792%" height="15" fill="rgb(206,56,30)" fg:x="399" fg:w="1"/><text x="71.7554%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="404" width="0.1792%" height="15" fill="rgb(228,143,26)" fg:x="399" fg:w="1"/><text x="71.7554%" y="414.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="420" width="0.1792%" height="15" fill="rgb(216,218,46)" fg:x="399" fg:w="1"/><text x="71.7554%" y="430.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="436" width="0.1792%" height="15" fill="rgb(206,6,19)" fg:x="399" fg:w="1"/><text x="71.7554%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="452" width="0.1792%" height="15" fill="rgb(239,177,51)" fg:x="399" fg:w="1"/><text x="71.7554%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="468" width="0.1792%" height="15" fill="rgb(216,55,25)" fg:x="399" fg:w="1"/><text x="71.7554%" y="478.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="484" width="0.1792%" height="15" fill="rgb(231,163,29)" fg:x="399" fg:w="1"/><text x="71.7554%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="500" width="0.1792%" height="15" fill="rgb(232,149,50)" fg:x="399" fg:w="1"/><text x="71.7554%" y="510.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="516" width="0.1792%" height="15" fill="rgb(223,142,48)" fg:x="399" fg:w="1"/><text x="71.7554%" y="526.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="532" width="0.1792%" height="15" fill="rgb(245,83,23)" fg:x="399" fg:w="1"/><text x="71.7554%" y="542.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="548" width="0.1792%" height="15" fill="rgb(224,63,2)" fg:x="399" fg:w="1"/><text x="71.7554%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="564" width="0.1792%" height="15" fill="rgb(218,65,53)" fg:x="399" fg:w="1"/><text x="71.7554%" y="574.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="580" width="0.1792%" height="15" fill="rgb(221,84,29)" fg:x="399" fg:w="1"/><text x="71.7554%" y="590.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="596" width="0.1792%" height="15" fill="rgb(234,0,32)" fg:x="399" fg:w="1"/><text x="71.7554%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="612" width="0.1792%" height="15" fill="rgb(206,20,16)" fg:x="399" fg:w="1"/><text x="71.7554%" y="622.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="628" width="0.1792%" height="15" fill="rgb(244,172,18)" fg:x="399" fg:w="1"/><text x="71.7554%" y="638.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="644" width="0.1792%" height="15" fill="rgb(254,133,1)" fg:x="399" fg:w="1"/><text x="71.7554%" y="654.50"></text></g><g><title>at::_ops::linalg_lu_factor_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="660" width="0.1792%" height="15" fill="rgb(222,206,41)" fg:x="399" fg:w="1"/><text x="71.7554%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out(at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="676" width="0.1792%" height="15" fill="rgb(212,3,42)" fg:x="399" fg:w="1"/><text x="71.7554%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="692" width="0.1792%" height="15" fill="rgb(241,11,4)" fg:x="399" fg:w="1"/><text x="71.7554%" y="702.50"></text></g><g><title>at::native::structured_linalg_lu_factor_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="708" width="0.1792%" height="15" fill="rgb(205,19,26)" fg:x="399" fg:w="1"/><text x="71.7554%" y="718.50"></text></g><g><title>at::native::(anonymous namespace)::lu_factor_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="724" width="0.1792%" height="15" fill="rgb(210,179,32)" fg:x="399" fg:w="1"/><text x="71.7554%" y="734.50"></text></g><g><title>at::native::lapackLu&lt;double&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="740" width="0.1792%" height="15" fill="rgb(227,116,49)" fg:x="399" fg:w="1"/><text x="71.7554%" y="750.50"></text></g><g><title>mkl_lapack__dgetrf_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="756" width="0.1792%" height="15" fill="rgb(211,146,6)" fg:x="399" fg:w="1"/><text x="71.7554%" y="766.50"></text></g><g><title>mkl_lapack_dgetrf (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="772" width="0.1792%" height="15" fill="rgb(219,44,39)" fg:x="399" fg:w="1"/><text x="71.7554%" y="782.50"></text></g><g><title>mkl_lapack_xdgetrf_local (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="788" width="0.1792%" height="15" fill="rgb(234,128,11)" fg:x="399" fg:w="1"/><text x="71.7554%" y="798.50"></text></g><g><title>mkl_lapack_dgetf2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="804" width="0.1792%" height="15" fill="rgb(220,183,53)" fg:x="399" fg:w="1"/><text x="71.7554%" y="814.50"></text></g><g><title>mkl_blas_avx512_xdgemv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="820" width="0.1792%" height="15" fill="rgb(213,219,32)" fg:x="399" fg:w="1"/><text x="71.7554%" y="830.50"></text></g><g><title>mkl_blas_avx512_dgemv_t_intrinsics (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.5054%" y="836" width="0.1792%" height="15" fill="rgb(232,156,16)" fg:x="399" fg:w="1"/><text x="71.7554%" y="846.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="71.6846%" y="676" width="0.1792%" height="15" fill="rgb(246,135,34)" fg:x="400" fg:w="1"/><text x="71.9346%" y="686.50"></text></g><g><title>c10::impl::OperatorEntry::lookup (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="71.8638%" y="676" width="0.1792%" height="15" fill="rgb(241,99,0)" fg:x="401" fg:w="1"/><text x="72.1138%" y="686.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="708" width="0.1792%" height="15" fill="rgb(222,103,45)" fg:x="402" fg:w="1"/><text x="72.2930%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="724" width="0.1792%" height="15" fill="rgb(212,57,4)" fg:x="402" fg:w="1"/><text x="72.2930%" y="734.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="740" width="0.1792%" height="15" fill="rgb(215,68,47)" fg:x="402" fg:w="1"/><text x="72.2930%" y="750.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="756" width="0.1792%" height="15" fill="rgb(230,84,2)" fg:x="402" fg:w="1"/><text x="72.2930%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="772" width="0.1792%" height="15" fill="rgb(220,102,14)" fg:x="402" fg:w="1"/><text x="72.2930%" y="782.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="788" width="0.1792%" height="15" fill="rgb(240,10,32)" fg:x="402" fg:w="1"/><text x="72.2930%" y="798.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.0430%" y="804" width="0.1792%" height="15" fill="rgb(215,47,27)" fg:x="402" fg:w="1"/><text x="72.2930%" y="814.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="72.0430%" y="820" width="0.1792%" height="15" fill="rgb(233,188,43)" fg:x="402" fg:w="1"/><text x="72.2930%" y="830.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="72.0430%" y="836" width="0.1792%" height="15" fill="rgb(253,190,1)" fg:x="402" fg:w="1"/><text x="72.2930%" y="846.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (4 samples, 0.72%)</title><rect x="71.6846%" y="612" width="0.7168%" height="15" fill="rgb(206,114,52)" fg:x="400" fg:w="4"/><text x="71.9346%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (4 samples, 0.72%)</title><rect x="71.6846%" y="628" width="0.7168%" height="15" fill="rgb(233,120,37)" fg:x="400" fg:w="4"/><text x="71.9346%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (4 samples, 0.72%)</title><rect x="71.6846%" y="644" width="0.7168%" height="15" fill="rgb(214,52,39)" fg:x="400" fg:w="4"/><text x="71.9346%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="71.6846%" y="660" width="0.7168%" height="15" fill="rgb(223,80,29)" fg:x="400" fg:w="4"/><text x="71.9346%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.0430%" y="676" width="0.3584%" height="15" fill="rgb(230,101,40)" fg:x="402" fg:w="2"/><text x="72.2930%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.0430%" y="692" width="0.3584%" height="15" fill="rgb(219,211,8)" fg:x="402" fg:w="2"/><text x="72.2930%" y="702.50"></text></g><g><title>torch::autograd::set_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.2222%" y="708" width="0.1792%" height="15" fill="rgb(252,126,28)" fg:x="403" fg:w="1"/><text x="72.4722%" y="718.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.2222%" y="724" width="0.1792%" height="15" fill="rgb(215,56,38)" fg:x="403" fg:w="1"/><text x="72.4722%" y="734.50"></text></g><g><title>c10::impl::NoOpDeviceGuardImpl&lt;(c10::DeviceType)0&gt;::getStream (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.2222%" y="740" width="0.1792%" height="15" fill="rgb(249,55,44)" fg:x="403" fg:w="1"/><text x="72.4722%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="724" width="0.3584%" height="15" fill="rgb(220,221,32)" fg:x="404" fg:w="2"/><text x="72.6514%" y="734.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="740" width="0.3584%" height="15" fill="rgb(212,216,41)" fg:x="404" fg:w="2"/><text x="72.6514%" y="750.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="756" width="0.3584%" height="15" fill="rgb(228,213,43)" fg:x="404" fg:w="2"/><text x="72.6514%" y="766.50"></text></g><g><title>at::(anonymous namespace)::structured_pow_Tensor_Scalar_out_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="772" width="0.3584%" height="15" fill="rgb(211,31,26)" fg:x="404" fg:w="2"/><text x="72.6514%" y="782.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="788" width="0.3584%" height="15" fill="rgb(229,202,19)" fg:x="404" fg:w="2"/><text x="72.6514%" y="798.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="804" width="0.3584%" height="15" fill="rgb(229,105,46)" fg:x="404" fg:w="2"/><text x="72.6514%" y="814.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="820" width="0.3584%" height="15" fill="rgb(235,108,1)" fg:x="404" fg:w="2"/><text x="72.6514%" y="830.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="836" width="0.3584%" height="15" fill="rgb(245,111,35)" fg:x="404" fg:w="2"/><text x="72.6514%" y="846.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="852" width="0.3584%" height="15" fill="rgb(219,185,31)" fg:x="404" fg:w="2"/><text x="72.6514%" y="862.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.4014%" y="868" width="0.3584%" height="15" fill="rgb(214,4,43)" fg:x="404" fg:w="2"/><text x="72.6514%" y="878.50"></text></g><g><title>at::detail::make_tensor_base&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKeySet&amp;, caffe2::TypeMeta&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.5806%" y="884" width="0.1792%" height="15" fill="rgb(235,227,40)" fg:x="405" fg:w="1"/><text x="72.8306%" y="894.50"></text></g><g><title>c10::TensorImpl::TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="72.5806%" y="900" width="0.1792%" height="15" fill="rgb(230,88,30)" fg:x="405" fg:w="1"/><text x="72.8306%" y="910.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="72.5806%" y="916" width="0.1792%" height="15" fill="rgb(216,217,1)" fg:x="405" fg:w="1"/><text x="72.8306%" y="926.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="72.5806%" y="932" width="0.1792%" height="15" fill="rgb(248,139,50)" fg:x="405" fg:w="1"/><text x="72.8306%" y="942.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (7 samples, 1.25%)</title><rect x="71.6846%" y="596" width="1.2545%" height="15" fill="rgb(233,1,21)" fg:x="400" fg:w="7"/><text x="71.9346%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="612" width="0.5376%" height="15" fill="rgb(215,183,12)" fg:x="404" fg:w="3"/><text x="72.6514%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="628" width="0.5376%" height="15" fill="rgb(229,104,42)" fg:x="404" fg:w="3"/><text x="72.6514%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="644" width="0.5376%" height="15" fill="rgb(243,34,48)" fg:x="404" fg:w="3"/><text x="72.6514%" y="654.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="660" width="0.5376%" height="15" fill="rgb(239,11,44)" fg:x="404" fg:w="3"/><text x="72.6514%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="676" width="0.5376%" height="15" fill="rgb(231,98,35)" fg:x="404" fg:w="3"/><text x="72.6514%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="692" width="0.5376%" height="15" fill="rgb(233,28,25)" fg:x="404" fg:w="3"/><text x="72.6514%" y="702.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="72.4014%" y="708" width="0.5376%" height="15" fill="rgb(234,123,11)" fg:x="404" fg:w="3"/><text x="72.6514%" y="718.50"></text></g><g><title>at::_ops::result_type_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.7599%" y="724" width="0.1792%" height="15" fill="rgb(220,69,3)" fg:x="406" fg:w="1"/><text x="73.0099%" y="734.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="740" width="0.1792%" height="15" fill="rgb(214,64,36)" fg:x="407" fg:w="1"/><text x="73.1891%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="756" width="0.1792%" height="15" fill="rgb(211,138,32)" fg:x="407" fg:w="1"/><text x="73.1891%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="772" width="0.1792%" height="15" fill="rgb(213,118,47)" fg:x="407" fg:w="1"/><text x="73.1891%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="788" width="0.1792%" height="15" fill="rgb(243,124,49)" fg:x="407" fg:w="1"/><text x="73.1891%" y="798.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="804" width="0.1792%" height="15" fill="rgb(221,30,28)" fg:x="407" fg:w="1"/><text x="73.1891%" y="814.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="820" width="0.1792%" height="15" fill="rgb(246,37,13)" fg:x="407" fg:w="1"/><text x="73.1891%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="836" width="0.1792%" height="15" fill="rgb(249,66,14)" fg:x="407" fg:w="1"/><text x="73.1891%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="852" width="0.1792%" height="15" fill="rgb(213,166,5)" fg:x="407" fg:w="1"/><text x="73.1891%" y="862.50"></text></g><g><title>at::native::as_strided_tensorimpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="868" width="0.1792%" height="15" fill="rgb(221,66,24)" fg:x="407" fg:w="1"/><text x="73.1891%" y="878.50"></text></g><g><title>at::native::setStrided&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="884" width="0.1792%" height="15" fill="rgb(210,132,17)" fg:x="407" fg:w="1"/><text x="73.1891%" y="894.50"></text></g><g><title>c10::TensorImpl::set_sizes_and_strides (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="900" width="0.1792%" height="15" fill="rgb(243,202,5)" fg:x="407" fg:w="1"/><text x="73.1891%" y="910.50"></text></g><g><title>c10::TensorImpl::compute_contiguous (libc10.so) (1 samples, 0.18%)</title><rect x="72.9391%" y="916" width="0.1792%" height="15" fill="rgb(233,70,48)" fg:x="407" fg:w="1"/><text x="73.1891%" y="926.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.9391%" y="692" width="0.3584%" height="15" fill="rgb(238,41,26)" fg:x="407" fg:w="2"/><text x="73.1891%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.9391%" y="708" width="0.3584%" height="15" fill="rgb(241,19,31)" fg:x="407" fg:w="2"/><text x="73.1891%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="72.9391%" y="724" width="0.3584%" height="15" fill="rgb(214,76,10)" fg:x="407" fg:w="2"/><text x="73.1891%" y="734.50"></text></g><g><title>torch::autograd::as_view (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.1183%" y="740" width="0.1792%" height="15" fill="rgb(254,202,22)" fg:x="408" fg:w="1"/><text x="73.3683%" y="750.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::emplace_back&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.2975%" y="692" width="0.1792%" height="15" fill="rgb(214,72,24)" fg:x="409" fg:w="1"/><text x="73.5475%" y="702.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (4 samples, 0.72%)</title><rect x="72.9391%" y="596" width="0.7168%" height="15" fill="rgb(221,92,46)" fg:x="407" fg:w="4"/><text x="73.1891%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (4 samples, 0.72%)</title><rect x="72.9391%" y="612" width="0.7168%" height="15" fill="rgb(246,13,50)" fg:x="407" fg:w="4"/><text x="73.1891%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (4 samples, 0.72%)</title><rect x="72.9391%" y="628" width="0.7168%" height="15" fill="rgb(240,165,38)" fg:x="407" fg:w="4"/><text x="73.1891%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="72.9391%" y="644" width="0.7168%" height="15" fill="rgb(241,24,51)" fg:x="407" fg:w="4"/><text x="73.1891%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="72.9391%" y="660" width="0.7168%" height="15" fill="rgb(227,51,44)" fg:x="407" fg:w="4"/><text x="73.1891%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="72.9391%" y="676" width="0.7168%" height="15" fill="rgb(231,121,3)" fg:x="407" fg:w="4"/><text x="73.1891%" y="686.50"></text></g><g><title>std::vector&lt;c10::SymInt, std::allocator&lt;c10::SymInt&gt; &gt;::vector&lt;c10::SymInt const*, void&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.4767%" y="692" width="0.1792%" height="15" fill="rgb(245,3,41)" fg:x="410" fg:w="1"/><text x="73.7267%" y="702.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="73.6559%" y="596" width="0.1792%" height="15" fill="rgb(214,13,26)" fg:x="411" fg:w="1"/><text x="73.9059%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="73.6559%" y="612" width="0.1792%" height="15" fill="rgb(252,75,11)" fg:x="411" fg:w="1"/><text x="73.9059%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="73.6559%" y="628" width="0.1792%" height="15" fill="rgb(218,226,17)" fg:x="411" fg:w="1"/><text x="73.9059%" y="638.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="73.6559%" y="644" width="0.1792%" height="15" fill="rgb(248,89,38)" fg:x="411" fg:w="1"/><text x="73.9059%" y="654.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="73.6559%" y="660" width="0.1792%" height="15" fill="rgb(237,73,46)" fg:x="411" fg:w="1"/><text x="73.9059%" y="670.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="73.6559%" y="676" width="0.1792%" height="15" fill="rgb(242,78,33)" fg:x="411" fg:w="1"/><text x="73.9059%" y="686.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="692" width="0.1792%" height="15" fill="rgb(235,60,3)" fg:x="411" fg:w="1"/><text x="73.9059%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="708" width="0.1792%" height="15" fill="rgb(216,172,19)" fg:x="411" fg:w="1"/><text x="73.9059%" y="718.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="724" width="0.1792%" height="15" fill="rgb(227,6,42)" fg:x="411" fg:w="1"/><text x="73.9059%" y="734.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="740" width="0.1792%" height="15" fill="rgb(223,207,42)" fg:x="411" fg:w="1"/><text x="73.9059%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="756" width="0.1792%" height="15" fill="rgb(246,138,30)" fg:x="411" fg:w="1"/><text x="73.9059%" y="766.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="772" width="0.1792%" height="15" fill="rgb(251,199,47)" fg:x="411" fg:w="1"/><text x="73.9059%" y="782.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="788" width="0.1792%" height="15" fill="rgb(228,218,44)" fg:x="411" fg:w="1"/><text x="73.9059%" y="798.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="804" width="0.1792%" height="15" fill="rgb(220,68,6)" fg:x="411" fg:w="1"/><text x="73.9059%" y="814.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="820" width="0.1792%" height="15" fill="rgb(240,60,26)" fg:x="411" fg:w="1"/><text x="73.9059%" y="830.50"></text></g><g><title>at::TensorIteratorBase::compute_types (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="73.6559%" y="836" width="0.1792%" height="15" fill="rgb(211,200,19)" fg:x="411" fg:w="1"/><text x="73.9059%" y="846.50"></text></g><g><title>at::TensorIteratorBase::compute_types (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.0143%" y="804" width="0.1792%" height="15" fill="rgb(242,145,30)" fg:x="413" fg:w="1"/><text x="74.2643%" y="814.50"></text></g><g><title>at::TensorIteratorBase::compute_common_dtype (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.0143%" y="820" width="0.1792%" height="15" fill="rgb(225,64,13)" fg:x="413" fg:w="1"/><text x="74.2643%" y="830.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::New (libc10.so) (1 samples, 0.18%)</title><rect x="74.1935%" y="948" width="0.1792%" height="15" fill="rgb(218,103,35)" fg:x="414" fg:w="1"/><text x="74.4435%" y="958.50"></text></g><g><title>c10::memoryProfilingEnabled (libc10.so) (1 samples, 0.18%)</title><rect x="74.1935%" y="964" width="0.1792%" height="15" fill="rgb(216,93,46)" fg:x="414" fg:w="1"/><text x="74.4435%" y="974.50"></text></g><g><title>c10::ThreadLocalDebugInfo::get (libc10.so) (1 samples, 0.18%)</title><rect x="74.1935%" y="980" width="0.1792%" height="15" fill="rgb(225,159,27)" fg:x="414" fg:w="1"/><text x="74.4435%" y="990.50"></text></g><g><title>at::meta::structured_sub_Tensor::meta (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="74.0143%" y="756" width="0.5376%" height="15" fill="rgb(225,204,11)" fg:x="413" fg:w="3"/><text x="74.2643%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="74.0143%" y="772" width="0.5376%" height="15" fill="rgb(205,56,4)" fg:x="413" fg:w="3"/><text x="74.2643%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="74.0143%" y="788" width="0.5376%" height="15" fill="rgb(206,6,35)" fg:x="413" fg:w="3"/><text x="74.2643%" y="798.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="804" width="0.3584%" height="15" fill="rgb(247,73,52)" fg:x="414" fg:w="2"/><text x="74.4435%" y="814.50"></text></g><g><title>at::(anonymous namespace)::structured_sub_out_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="820" width="0.3584%" height="15" fill="rgb(246,97,4)" fg:x="414" fg:w="2"/><text x="74.4435%" y="830.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="836" width="0.3584%" height="15" fill="rgb(212,37,15)" fg:x="414" fg:w="2"/><text x="74.4435%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="852" width="0.3584%" height="15" fill="rgb(208,130,40)" fg:x="414" fg:w="2"/><text x="74.4435%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="868" width="0.3584%" height="15" fill="rgb(236,55,29)" fg:x="414" fg:w="2"/><text x="74.4435%" y="878.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="884" width="0.3584%" height="15" fill="rgb(209,156,45)" fg:x="414" fg:w="2"/><text x="74.4435%" y="894.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="900" width="0.3584%" height="15" fill="rgb(249,107,4)" fg:x="414" fg:w="2"/><text x="74.4435%" y="910.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="916" width="0.3584%" height="15" fill="rgb(227,7,13)" fg:x="414" fg:w="2"/><text x="74.4435%" y="926.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (2 samples, 0.36%)</title><rect x="74.1935%" y="932" width="0.3584%" height="15" fill="rgb(250,129,14)" fg:x="414" fg:w="2"/><text x="74.4435%" y="942.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="74.3728%" y="948" width="0.1792%" height="15" fill="rgb(229,92,13)" fg:x="415" fg:w="1"/><text x="74.6228%" y="958.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="74.3728%" y="964" width="0.1792%" height="15" fill="rgb(245,98,39)" fg:x="415" fg:w="1"/><text x="74.6228%" y="974.50"></text></g><g><title>0x7f34fee99d41 (libc.so.6) (1 samples, 0.18%)</title><rect x="74.3728%" y="980" width="0.1792%" height="15" fill="rgb(234,135,48)" fg:x="415" fg:w="1"/><text x="74.6228%" y="990.50"></text></g><g><title>at::_ops::sub_Tensor::redispatch (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="74.0143%" y="708" width="0.7168%" height="15" fill="rgb(230,98,28)" fg:x="413" fg:w="4"/><text x="74.2643%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_sub_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="74.0143%" y="724" width="0.7168%" height="15" fill="rgb(223,121,0)" fg:x="413" fg:w="4"/><text x="74.2643%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_sub_Tensor (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="74.0143%" y="740" width="0.7168%" height="15" fill="rgb(234,173,33)" fg:x="413" fg:w="4"/><text x="74.2643%" y="750.50"></text></g><g><title>at::native::structured_sub_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.5520%" y="756" width="0.1792%" height="15" fill="rgb(245,47,8)" fg:x="416" fg:w="1"/><text x="74.8020%" y="766.50"></text></g><g><title>at::pow (pow.h:64) (6 samples, 1.08%)</title><rect x="73.8351%" y="596" width="1.0753%" height="15" fill="rgb(205,17,20)" fg:x="412" fg:w="6"/><text x="74.0851%" y="606.50"></text></g><g><title>operator- (TensorOperators.h:50) (6 samples, 1.08%)</title><rect x="73.8351%" y="612" width="1.0753%" height="15" fill="rgb(232,151,16)" fg:x="412" fg:w="6"/><text x="74.0851%" y="622.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (6 samples, 1.08%)</title><rect x="73.8351%" y="628" width="1.0753%" height="15" fill="rgb(208,30,32)" fg:x="412" fg:w="6"/><text x="74.0851%" y="638.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (6 samples, 1.08%)</title><rect x="73.8351%" y="644" width="1.0753%" height="15" fill="rgb(254,26,3)" fg:x="412" fg:w="6"/><text x="74.0851%" y="654.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="73.8351%" y="660" width="1.0753%" height="15" fill="rgb(240,177,30)" fg:x="412" fg:w="6"/><text x="74.0851%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::sub_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="73.8351%" y="676" width="1.0753%" height="15" fill="rgb(248,76,44)" fg:x="412" fg:w="6"/><text x="74.0851%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::sub_Tensor (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="74.0143%" y="692" width="0.8961%" height="15" fill="rgb(241,186,54)" fg:x="413" fg:w="5"/><text x="74.2643%" y="702.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.7312%" y="708" width="0.1792%" height="15" fill="rgb(249,171,29)" fg:x="417" fg:w="1"/><text x="74.9812%" y="718.50"></text></g><g><title>torch::autograd::impl::gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.7312%" y="724" width="0.1792%" height="15" fill="rgb(237,151,44)" fg:x="417" fg:w="1"/><text x="74.9812%" y="734.50"></text></g><g><title>at::TensorBase::output_nr (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="74.7312%" y="740" width="0.1792%" height="15" fill="rgb(228,174,30)" fg:x="417" fg:w="1"/><text x="74.9812%" y="750.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="74.9104%" y="596" width="0.1792%" height="15" fill="rgb(252,14,37)" fg:x="418" fg:w="1"/><text x="75.1604%" y="606.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="74.9104%" y="612" width="0.1792%" height="15" fill="rgb(207,111,40)" fg:x="418" fg:w="1"/><text x="75.1604%" y="622.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="74.9104%" y="628" width="0.1792%" height="15" fill="rgb(248,171,54)" fg:x="418" fg:w="1"/><text x="75.1604%" y="638.50"></text></g><g><title>0x7f34fee97941 (libc.so.6) (1 samples, 0.18%)</title><rect x="74.9104%" y="644" width="0.1792%" height="15" fill="rgb(211,127,2)" fg:x="418" fg:w="1"/><text x="75.1604%" y="654.50"></text></g><g><title>at::TensorIteratorBase::compute_mem_overlaps (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.2688%" y="788" width="0.1792%" height="15" fill="rgb(236,87,47)" fg:x="420" fg:w="1"/><text x="75.5188%" y="798.50"></text></g><g><title>at::_ops::add_Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="692" width="0.3584%" height="15" fill="rgb(223,190,45)" fg:x="420" fg:w="2"/><text x="75.5188%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="708" width="0.3584%" height="15" fill="rgb(215,5,16)" fg:x="420" fg:w="2"/><text x="75.5188%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add_Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="724" width="0.3584%" height="15" fill="rgb(252,82,33)" fg:x="420" fg:w="2"/><text x="75.5188%" y="734.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="740" width="0.3584%" height="15" fill="rgb(247,213,44)" fg:x="420" fg:w="2"/><text x="75.5188%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="756" width="0.3584%" height="15" fill="rgb(205,196,44)" fg:x="420" fg:w="2"/><text x="75.5188%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="75.2688%" y="772" width="0.3584%" height="15" fill="rgb(237,96,54)" fg:x="420" fg:w="2"/><text x="75.5188%" y="782.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="788" width="0.1792%" height="15" fill="rgb(230,113,34)" fg:x="421" fg:w="1"/><text x="75.6980%" y="798.50"></text></g><g><title>at::(anonymous namespace)::structured_ufunc_add_CPU_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="804" width="0.1792%" height="15" fill="rgb(221,224,12)" fg:x="421" fg:w="1"/><text x="75.6980%" y="814.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="820" width="0.1792%" height="15" fill="rgb(219,112,44)" fg:x="421" fg:w="1"/><text x="75.6980%" y="830.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="836" width="0.1792%" height="15" fill="rgb(210,31,13)" fg:x="421" fg:w="1"/><text x="75.6980%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="852" width="0.1792%" height="15" fill="rgb(230,25,16)" fg:x="421" fg:w="1"/><text x="75.6980%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="868" width="0.1792%" height="15" fill="rgb(246,108,53)" fg:x="421" fg:w="1"/><text x="75.6980%" y="878.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="884" width="0.1792%" height="15" fill="rgb(241,172,50)" fg:x="421" fg:w="1"/><text x="75.6980%" y="894.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="900" width="0.1792%" height="15" fill="rgb(235,141,10)" fg:x="421" fg:w="1"/><text x="75.6980%" y="910.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="916" width="0.1792%" height="15" fill="rgb(220,174,43)" fg:x="421" fg:w="1"/><text x="75.6980%" y="926.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="75.4480%" y="932" width="0.1792%" height="15" fill="rgb(215,181,40)" fg:x="421" fg:w="1"/><text x="75.6980%" y="942.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="75.4480%" y="948" width="0.1792%" height="15" fill="rgb(230,97,2)" fg:x="421" fg:w="1"/><text x="75.6980%" y="958.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="75.4480%" y="964" width="0.1792%" height="15" fill="rgb(211,25,27)" fg:x="421" fg:w="1"/><text x="75.6980%" y="974.50"></text></g><g><title>0x7f34fee9962b (libc.so.6) (1 samples, 0.18%)</title><rect x="75.4480%" y="980" width="0.1792%" height="15" fill="rgb(230,87,26)" fg:x="421" fg:w="1"/><text x="75.6980%" y="990.50"></text></g><g><title>0x7f34fee96729 (libc.so.6) (1 samples, 0.18%)</title><rect x="75.4480%" y="996" width="0.1792%" height="15" fill="rgb(227,160,17)" fg:x="421" fg:w="1"/><text x="75.6980%" y="1006.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.6272%" y="692" width="0.1792%" height="15" fill="rgb(244,85,34)" fg:x="422" fg:w="1"/><text x="75.8772%" y="702.50"></text></g><g><title>torch::autograd::compute_requires_grad&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.8065%" y="692" width="0.1792%" height="15" fill="rgb(207,70,0)" fg:x="423" fg:w="1"/><text x="76.0565%" y="702.50"></text></g><g><title>c10::GradMode::is_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="75.8065%" y="708" width="0.1792%" height="15" fill="rgb(223,129,7)" fg:x="423" fg:w="1"/><text x="76.0565%" y="718.50"></text></g><g><title>c10::AutogradState::get_tls_state (libc10.so) (1 samples, 0.18%)</title><rect x="75.8065%" y="724" width="0.1792%" height="15" fill="rgb(246,105,7)" fg:x="423" fg:w="1"/><text x="76.0565%" y="734.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="75.8065%" y="740" width="0.1792%" height="15" fill="rgb(215,154,42)" fg:x="423" fg:w="1"/><text x="76.0565%" y="750.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="75.8065%" y="756" width="0.1792%" height="15" fill="rgb(220,215,30)" fg:x="423" fg:w="1"/><text x="76.0565%" y="766.50"></text></g><g><title>0x7f34ff179b23 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="75.8065%" y="772" width="0.1792%" height="15" fill="rgb(228,81,51)" fg:x="423" fg:w="1"/><text x="76.0565%" y="782.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (25 samples, 4.48%)</title><rect x="71.6846%" y="340" width="4.4803%" height="15" fill="rgb(247,71,54)" fg:x="400" fg:w="25"/><text x="71.9346%" y="350.50">fast_..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (25 samples, 4.48%)</title><rect x="71.6846%" y="356" width="4.4803%" height="15" fill="rgb(234,176,34)" fg:x="400" fg:w="25"/><text x="71.9346%" y="366.50">at::T..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (25 samples, 4.48%)</title><rect x="71.6846%" y="372" width="4.4803%" height="15" fill="rgb(241,103,54)" fg:x="400" fg:w="25"/><text x="71.9346%" y="382.50">at::T..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (25 samples, 4.48%)</title><rect x="71.6846%" y="388" width="4.4803%" height="15" fill="rgb(228,22,34)" fg:x="400" fg:w="25"/><text x="71.9346%" y="398.50">c10::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (25 samples, 4.48%)</title><rect x="71.6846%" y="404" width="4.4803%" height="15" fill="rgb(241,179,48)" fg:x="400" fg:w="25"/><text x="71.9346%" y="414.50">c10::..</text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (25 samples, 4.48%)</title><rect x="71.6846%" y="420" width="4.4803%" height="15" fill="rgb(235,167,37)" fg:x="400" fg:w="25"/><text x="71.9346%" y="430.50">std::..</text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (25 samples, 4.48%)</title><rect x="71.6846%" y="436" width="4.4803%" height="15" fill="rgb(213,109,30)" fg:x="400" fg:w="25"/><text x="71.9346%" y="446.50">std::..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (25 samples, 4.48%)</title><rect x="71.6846%" y="452" width="4.4803%" height="15" fill="rgb(222,172,16)" fg:x="400" fg:w="25"/><text x="71.9346%" y="462.50">std::..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (25 samples, 4.48%)</title><rect x="71.6846%" y="468" width="4.4803%" height="15" fill="rgb(233,192,5)" fg:x="400" fg:w="25"/><text x="71.9346%" y="478.50">std::..</text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (25 samples, 4.48%)</title><rect x="71.6846%" y="484" width="4.4803%" height="15" fill="rgb(247,189,41)" fg:x="400" fg:w="25"/><text x="71.9346%" y="494.50">std::..</text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (25 samples, 4.48%)</title><rect x="71.6846%" y="500" width="4.4803%" height="15" fill="rgb(218,134,47)" fg:x="400" fg:w="25"/><text x="71.9346%" y="510.50">std::..</text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (25 samples, 4.48%)</title><rect x="71.6846%" y="516" width="4.4803%" height="15" fill="rgb(216,29,3)" fg:x="400" fg:w="25"/><text x="71.9346%" y="526.50">std::..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (25 samples, 4.48%)</title><rect x="71.6846%" y="532" width="4.4803%" height="15" fill="rgb(246,140,12)" fg:x="400" fg:w="25"/><text x="71.9346%" y="542.50">at::T..</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (25 samples, 4.48%)</title><rect x="71.6846%" y="548" width="4.4803%" height="15" fill="rgb(230,136,11)" fg:x="400" fg:w="25"/><text x="71.9346%" y="558.50">at::T..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (25 samples, 4.48%)</title><rect x="71.6846%" y="564" width="4.4803%" height="15" fill="rgb(247,22,47)" fg:x="400" fg:w="25"/><text x="71.9346%" y="574.50">c10::..</text></g><g><title>my_length_constraint (main.cpp:268) (25 samples, 4.48%)</title><rect x="71.6846%" y="580" width="4.4803%" height="15" fill="rgb(218,84,22)" fg:x="400" fg:w="25"/><text x="71.9346%" y="590.50">my_le..</text></g><g><title>operator+ (TensorOperators.h:50) (6 samples, 1.08%)</title><rect x="75.0896%" y="596" width="1.0753%" height="15" fill="rgb(216,87,39)" fg:x="419" fg:w="6"/><text x="75.3396%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (6 samples, 1.08%)</title><rect x="75.0896%" y="612" width="1.0753%" height="15" fill="rgb(221,178,8)" fg:x="419" fg:w="6"/><text x="75.3396%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (6 samples, 1.08%)</title><rect x="75.0896%" y="628" width="1.0753%" height="15" fill="rgb(230,42,11)" fg:x="419" fg:w="6"/><text x="75.3396%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="75.0896%" y="644" width="1.0753%" height="15" fill="rgb(237,229,4)" fg:x="419" fg:w="6"/><text x="75.3396%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="75.0896%" y="660" width="1.0753%" height="15" fill="rgb(222,31,33)" fg:x="419" fg:w="6"/><text x="75.3396%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="75.0896%" y="676" width="1.0753%" height="15" fill="rgb(210,17,39)" fg:x="419" fg:w="6"/><text x="75.3396%" y="686.50"></text></g><g><title>torch::autograd::set_history (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.9857%" y="692" width="0.1792%" height="15" fill="rgb(244,93,20)" fg:x="424" fg:w="1"/><text x="76.2357%" y="702.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.9857%" y="708" width="0.1792%" height="15" fill="rgb(210,40,47)" fg:x="424" fg:w="1"/><text x="76.2357%" y="718.50"></text></g><g><title>at::TensorBase::options (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="75.9857%" y="724" width="0.1792%" height="15" fill="rgb(239,211,47)" fg:x="424" fg:w="1"/><text x="76.2357%" y="734.50"></text></g><g><title>fast_jacobian (main.cpp:44) (1 samples, 0.18%)</title><rect x="76.1649%" y="340" width="0.1792%" height="15" fill="rgb(251,223,49)" fg:x="425" fg:w="1"/><text x="76.4149%" y="350.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="76.1649%" y="356" width="0.1792%" height="15" fill="rgb(221,149,5)" fg:x="425" fg:w="1"/><text x="76.4149%" y="366.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="76.1649%" y="372" width="0.1792%" height="15" fill="rgb(219,224,51)" fg:x="425" fg:w="1"/><text x="76.4149%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (1 samples, 0.18%)</title><rect x="76.1649%" y="388" width="0.1792%" height="15" fill="rgb(223,7,8)" fg:x="425" fg:w="1"/><text x="76.4149%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (1 samples, 0.18%)</title><rect x="76.1649%" y="404" width="0.1792%" height="15" fill="rgb(241,217,22)" fg:x="425" fg:w="1"/><text x="76.4149%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (1 samples, 0.18%)</title><rect x="76.1649%" y="420" width="0.1792%" height="15" fill="rgb(248,209,0)" fg:x="425" fg:w="1"/><text x="76.4149%" y="430.50"></text></g><g><title>at::_ops::detach::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="76.1649%" y="436" width="0.1792%" height="15" fill="rgb(217,205,4)" fg:x="425" fg:w="1"/><text x="76.4149%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="76.1649%" y="452" width="0.1792%" height="15" fill="rgb(228,124,39)" fg:x="425" fg:w="1"/><text x="76.4149%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="76.1649%" y="468" width="0.1792%" height="15" fill="rgb(250,116,42)" fg:x="425" fg:w="1"/><text x="76.4149%" y="478.50"></text></g><g><title>at::RecordFunction::~RecordFunction (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="76.1649%" y="484" width="0.1792%" height="15" fill="rgb(223,202,9)" fg:x="425" fg:w="1"/><text x="76.4149%" y="494.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="76.3441%" y="452" width="0.1792%" height="15" fill="rgb(242,222,40)" fg:x="426" fg:w="1"/><text x="76.5941%" y="462.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="76.3441%" y="468" width="0.1792%" height="15" fill="rgb(229,99,46)" fg:x="426" fg:w="1"/><text x="76.5941%" y="478.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="76.3441%" y="484" width="0.1792%" height="15" fill="rgb(225,56,46)" fg:x="426" fg:w="1"/><text x="76.5941%" y="494.50"></text></g><g><title>torch::autograd::_make_grads (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="76.5233%" y="452" width="0.5376%" height="15" fill="rgb(227,94,5)" fg:x="427" fg:w="3"/><text x="76.7733%" y="462.50"></text></g><g><title>at::_ops::ones_like::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="76.5233%" y="468" width="0.5376%" height="15" fill="rgb(205,112,38)" fg:x="427" fg:w="3"/><text x="76.7733%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::ones_like(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="76.5233%" y="484" width="0.5376%" height="15" fill="rgb(231,133,46)" fg:x="427" fg:w="3"/><text x="76.7733%" y="494.50"></text></g><g><title>at::_ops::ones_like::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="76.5233%" y="500" width="0.5376%" height="15" fill="rgb(217,16,9)" fg:x="427" fg:w="3"/><text x="76.7733%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__ones_like(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="516" width="0.3584%" height="15" fill="rgb(249,173,9)" fg:x="428" fg:w="2"/><text x="76.9525%" y="526.50"></text></g><g><title>at::native::ones_like (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="532" width="0.3584%" height="15" fill="rgb(205,163,53)" fg:x="428" fg:w="2"/><text x="76.9525%" y="542.50"></text></g><g><title>at::_ops::empty_like::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="548" width="0.3584%" height="15" fill="rgb(217,54,41)" fg:x="428" fg:w="2"/><text x="76.9525%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__empty_like(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="564" width="0.3584%" height="15" fill="rgb(228,216,12)" fg:x="428" fg:w="2"/><text x="76.9525%" y="574.50"></text></g><g><title>at::native::empty_like (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="580" width="0.3584%" height="15" fill="rgb(244,228,15)" fg:x="428" fg:w="2"/><text x="76.9525%" y="590.50"></text></g><g><title>at::empty_symint (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="596" width="0.3584%" height="15" fill="rgb(221,176,53)" fg:x="428" fg:w="2"/><text x="76.9525%" y="606.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="76.7025%" y="612" width="0.3584%" height="15" fill="rgb(205,94,34)" fg:x="428" fg:w="2"/><text x="76.9525%" y="622.50"></text></g><g><title>c10::impl::OperatorEntry::lookup (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="76.8817%" y="628" width="0.1792%" height="15" fill="rgb(213,110,48)" fg:x="429" fg:w="1"/><text x="77.1317%" y="638.50"></text></g><g><title>std::__shared_ptr&lt;torch::autograd::GraphTask, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;torch::autograd::GraphTask&gt;, bool&amp;, bool&amp;, int, std::shared_ptr&lt;torch::autograd::ReadyQueue&gt;&amp;, c10::SmallVector&lt;torch::autograd::Node*, (unsigned int)4&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="77.0609%" y="500" width="0.1792%" height="15" fill="rgb(236,142,28)" fg:x="430" fg:w="1"/><text x="77.3109%" y="510.50"></text></g><g><title>std::__exception_ptr::exception_ptr::exception_ptr (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="77.0609%" y="516" width="0.1792%" height="15" fill="rgb(225,135,29)" fg:x="430" fg:w="1"/><text x="77.3109%" y="526.50"></text></g><g><title>torch::autograd::Engine::compute_dependencies (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="77.2401%" y="500" width="0.3584%" height="15" fill="rgb(252,45,31)" fg:x="431" fg:w="2"/><text x="77.4901%" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="77.4194%" y="516" width="0.1792%" height="15" fill="rgb(211,187,50)" fg:x="432" fg:w="1"/><text x="77.6694%" y="526.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="77.4194%" y="532" width="0.1792%" height="15" fill="rgb(229,109,7)" fg:x="432" fg:w="1"/><text x="77.6694%" y="542.50"></text></g><g><title>0x7f34fee98cdf (libc.so.6) (1 samples, 0.18%)</title><rect x="77.4194%" y="548" width="0.1792%" height="15" fill="rgb(251,131,51)" fg:x="432" fg:w="1"/><text x="77.6694%" y="558.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="77.7778%" y="612" width="0.1792%" height="15" fill="rgb(251,180,35)" fg:x="434" fg:w="1"/><text x="78.0278%" y="622.50"></text></g><g><title>0x7f34ff179b00 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="77.7778%" y="628" width="0.1792%" height="15" fill="rgb(211,46,32)" fg:x="434" fg:w="1"/><text x="78.0278%" y="638.50"></text></g><g><title>at::RecordFunction::RecordFunction (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="77.5986%" y="548" width="0.5376%" height="15" fill="rgb(248,123,17)" fg:x="433" fg:w="3"/><text x="77.8486%" y="558.50"></text></g><g><title>at::getStepCallbacks (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="77.5986%" y="564" width="0.5376%" height="15" fill="rgb(227,141,18)" fg:x="433" fg:w="3"/><text x="77.8486%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuildActiveCallbacksIfNeeded (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="77.7778%" y="580" width="0.3584%" height="15" fill="rgb(216,102,9)" fg:x="434" fg:w="2"/><text x="78.0278%" y="590.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="77.7778%" y="596" width="0.3584%" height="15" fill="rgb(253,47,13)" fg:x="434" fg:w="2"/><text x="78.0278%" y="606.50"></text></g><g><title>0x7f34ff179d19 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="77.9570%" y="612" width="0.1792%" height="15" fill="rgb(226,93,23)" fg:x="435" fg:w="1"/><text x="78.2070%" y="622.50"></text></g><g><title>at::impl::PythonTorchFunctionTLS::get_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="78.1362%" y="564" width="0.1792%" height="15" fill="rgb(247,104,17)" fg:x="436" fg:w="1"/><text x="78.3862%" y="574.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="78.1362%" y="580" width="0.1792%" height="15" fill="rgb(233,203,26)" fg:x="436" fg:w="1"/><text x="78.3862%" y="590.50"></text></g><g><title>0x7f34ff179d27 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="78.1362%" y="596" width="0.1792%" height="15" fill="rgb(244,98,49)" fg:x="436" fg:w="1"/><text x="78.3862%" y="606.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="78.1362%" y="548" width="0.3584%" height="15" fill="rgb(235,134,22)" fg:x="436" fg:w="2"/><text x="78.3862%" y="558.50"></text></g><g><title>std::deque&lt;std::pair&lt;_object*, _object*&gt;, std::allocator&lt;std::pair&lt;_object*, _object*&gt; &gt; &gt;::deque (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="78.3154%" y="564" width="0.1792%" height="15" fill="rgb(221,70,32)" fg:x="437" fg:w="1"/><text x="78.5654%" y="574.50"></text></g><g><title>std::_Deque_base&lt;std::pair&lt;_object*, _object*&gt;, std::allocator&lt;std::pair&lt;_object*, _object*&gt; &gt; &gt;::_M_initialize_map (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="78.3154%" y="580" width="0.1792%" height="15" fill="rgb(238,15,50)" fg:x="437" fg:w="1"/><text x="78.5654%" y="590.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="78.3154%" y="596" width="0.1792%" height="15" fill="rgb(215,221,48)" fg:x="437" fg:w="1"/><text x="78.5654%" y="606.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="78.3154%" y="612" width="0.1792%" height="15" fill="rgb(236,73,3)" fg:x="437" fg:w="1"/><text x="78.5654%" y="622.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="78.6738%" y="564" width="0.3584%" height="15" fill="rgb(250,107,11)" fg:x="439" fg:w="2"/><text x="78.9238%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="78.6738%" y="580" width="0.3584%" height="15" fill="rgb(242,39,14)" fg:x="439" fg:w="2"/><text x="78.9238%" y="590.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="78.8530%" y="596" width="0.1792%" height="15" fill="rgb(248,164,37)" fg:x="440" fg:w="1"/><text x="79.1030%" y="606.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="78.8530%" y="612" width="0.1792%" height="15" fill="rgb(217,60,12)" fg:x="440" fg:w="1"/><text x="79.1030%" y="622.50"></text></g><g><title>at::functorch::setFuncTorchTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="79.0323%" y="564" width="0.1792%" height="15" fill="rgb(240,125,29)" fg:x="441" fg:w="1"/><text x="79.2823%" y="574.50"></text></g><g><title>at::impl::PythonTorchFunctionTLS::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="79.2115%" y="564" width="0.1792%" height="15" fill="rgb(208,207,28)" fg:x="442" fg:w="1"/><text x="79.4615%" y="574.50"></text></g><g><title>__tls_init (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="79.2115%" y="580" width="0.1792%" height="15" fill="rgb(209,159,27)" fg:x="442" fg:w="1"/><text x="79.4615%" y="590.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="79.2115%" y="596" width="0.1792%" height="15" fill="rgb(251,176,53)" fg:x="442" fg:w="1"/><text x="79.4615%" y="606.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="78.4946%" y="548" width="1.2545%" height="15" fill="rgb(211,85,7)" fg:x="438" fg:w="7"/><text x="78.7446%" y="558.50"></text></g><g><title>c10::ThreadLocalDebugInfo::_forceCurrentDebugInfo (libc10.so) (2 samples, 0.36%)</title><rect x="79.3907%" y="564" width="0.3584%" height="15" fill="rgb(216,64,54)" fg:x="443" fg:w="2"/><text x="79.6407%" y="574.50"></text></g><g><title>c10::{lambda()#1}::_FUN (libc10.so) (1 samples, 0.18%)</title><rect x="79.5699%" y="580" width="0.1792%" height="15" fill="rgb(217,54,24)" fg:x="444" fg:w="1"/><text x="79.8199%" y="590.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="79.5699%" y="596" width="0.1792%" height="15" fill="rgb(208,206,53)" fg:x="444" fg:w="1"/><text x="79.8199%" y="606.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="79.5699%" y="612" width="0.1792%" height="15" fill="rgb(251,74,39)" fg:x="444" fg:w="1"/><text x="79.8199%" y="622.50"></text></g><g><title>0x7f34ff179b34 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="79.5699%" y="628" width="0.1792%" height="15" fill="rgb(226,47,5)" fg:x="444" fg:w="1"/><text x="79.8199%" y="638.50"></text></g><g><title>c10::impl::PyObjectSlot::destroy_pyobj_if_needed (libc10.so) (1 samples, 0.18%)</title><rect x="79.7491%" y="612" width="0.1792%" height="15" fill="rgb(234,111,33)" fg:x="445" fg:w="1"/><text x="79.9991%" y="622.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (libtorch_python.so) (2 samples, 0.36%)</title><rect x="79.7491%" y="564" width="0.3584%" height="15" fill="rgb(251,14,10)" fg:x="445" fg:w="2"/><text x="79.9991%" y="574.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="79.7491%" y="580" width="0.3584%" height="15" fill="rgb(232,43,0)" fg:x="445" fg:w="2"/><text x="79.9991%" y="590.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="79.7491%" y="596" width="0.3584%" height="15" fill="rgb(222,68,43)" fg:x="445" fg:w="2"/><text x="79.9991%" y="606.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="79.9283%" y="612" width="0.1792%" height="15" fill="rgb(217,24,23)" fg:x="446" fg:w="1"/><text x="80.1783%" y="622.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (1 samples, 0.18%)</title><rect x="79.9283%" y="628" width="0.1792%" height="15" fill="rgb(229,209,14)" fg:x="446" fg:w="1"/><text x="80.1783%" y="638.50"></text></g><g><title>c10::DefaultCPUAllocator::ReportAndDelete (libc10.so) (1 samples, 0.18%)</title><rect x="79.9283%" y="644" width="0.1792%" height="15" fill="rgb(250,149,48)" fg:x="446" fg:w="1"/><text x="80.1783%" y="654.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::Delete (libc10.so) (1 samples, 0.18%)</title><rect x="79.9283%" y="660" width="0.1792%" height="15" fill="rgb(210,120,37)" fg:x="446" fg:w="1"/><text x="80.1783%" y="670.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.1075%" y="740" width="0.1792%" height="15" fill="rgb(210,21,8)" fg:x="447" fg:w="1"/><text x="80.3575%" y="750.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="564" width="0.3584%" height="15" fill="rgb(243,145,7)" fg:x="447" fg:w="2"/><text x="80.3575%" y="574.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="580" width="0.3584%" height="15" fill="rgb(238,178,32)" fg:x="447" fg:w="2"/><text x="80.3575%" y="590.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="596" width="0.3584%" height="15" fill="rgb(222,4,10)" fg:x="447" fg:w="2"/><text x="80.3575%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="612" width="0.3584%" height="15" fill="rgb(239,7,37)" fg:x="447" fg:w="2"/><text x="80.3575%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="628" width="0.3584%" height="15" fill="rgb(215,31,37)" fg:x="447" fg:w="2"/><text x="80.3575%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="644" width="0.3584%" height="15" fill="rgb(224,83,33)" fg:x="447" fg:w="2"/><text x="80.3575%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="660" width="0.3584%" height="15" fill="rgb(239,55,3)" fg:x="447" fg:w="2"/><text x="80.3575%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="676" width="0.3584%" height="15" fill="rgb(247,92,11)" fg:x="447" fg:w="2"/><text x="80.3575%" y="686.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="692" width="0.3584%" height="15" fill="rgb(239,200,7)" fg:x="447" fg:w="2"/><text x="80.3575%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="708" width="0.3584%" height="15" fill="rgb(227,115,8)" fg:x="447" fg:w="2"/><text x="80.3575%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="80.1075%" y="724" width="0.3584%" height="15" fill="rgb(215,189,27)" fg:x="447" fg:w="2"/><text x="80.3575%" y="734.50"></text></g><g><title>at::TensorIteratorBase::mark_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.2867%" y="740" width="0.1792%" height="15" fill="rgb(251,216,39)" fg:x="448" fg:w="1"/><text x="80.5367%" y="750.50"></text></g><g><title>at::NamesMode::set_enabled (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.4659%" y="580" width="0.1792%" height="15" fill="rgb(207,29,47)" fg:x="449" fg:w="1"/><text x="80.7159%" y="590.50"></text></g><g><title>torch::autograd::AccumulateGrad::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.6452%" y="580" width="0.1792%" height="15" fill="rgb(210,71,34)" fg:x="450" fg:w="1"/><text x="80.8952%" y="590.50"></text></g><g><title>torch::autograd::AccumulateGrad::accumulateGrad&lt;torch::autograd::AccumulateGrad::apply(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;&amp;&amp;)::{lambda(at::Tensor&amp;&amp;)#1}&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.6452%" y="596" width="0.1792%" height="15" fill="rgb(253,217,51)" fg:x="450" fg:w="1"/><text x="80.8952%" y="606.50"></text></g><g><title>torch::autograd::utils::obeys_layout_contract (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="80.6452%" y="612" width="0.1792%" height="15" fill="rgb(222,117,46)" fg:x="450" fg:w="1"/><text x="80.8952%" y="622.50"></text></g><g><title>c10::SymInt::sym_ne (libc10.so) (1 samples, 0.18%)</title><rect x="80.6452%" y="628" width="0.1792%" height="15" fill="rgb(226,132,6)" fg:x="450" fg:w="1"/><text x="80.8952%" y="638.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.0036%" y="708" width="0.1792%" height="15" fill="rgb(254,145,51)" fg:x="452" fg:w="1"/><text x="81.2536%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.0036%" y="724" width="0.1792%" height="15" fill="rgb(231,199,27)" fg:x="452" fg:w="1"/><text x="81.2536%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.0036%" y="740" width="0.1792%" height="15" fill="rgb(245,158,14)" fg:x="452" fg:w="1"/><text x="81.2536%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.0036%" y="756" width="0.1792%" height="15" fill="rgb(240,113,14)" fg:x="452" fg:w="1"/><text x="81.2536%" y="766.50"></text></g><g><title>at::TensorIteratorConfig::add_borrowed_output (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.0036%" y="772" width="0.1792%" height="15" fill="rgb(210,20,13)" fg:x="452" fg:w="1"/><text x="81.2536%" y="782.50"></text></g><g><title>at::_ops::mul_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="80.8244%" y="612" width="0.5376%" height="15" fill="rgb(241,144,13)" fg:x="451" fg:w="3"/><text x="81.0744%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.0036%" y="628" width="0.3584%" height="15" fill="rgb(235,43,34)" fg:x="452" fg:w="2"/><text x="81.2536%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.0036%" y="644" width="0.3584%" height="15" fill="rgb(208,36,20)" fg:x="452" fg:w="2"/><text x="81.2536%" y="654.50"></text></g><g><title>at::_ops::mul_Scalar::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.0036%" y="660" width="0.3584%" height="15" fill="rgb(239,204,10)" fg:x="452" fg:w="2"/><text x="81.2536%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Scalar_mul(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.0036%" y="676" width="0.3584%" height="15" fill="rgb(217,84,43)" fg:x="452" fg:w="2"/><text x="81.2536%" y="686.50"></text></g><g><title>at::native::mul (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.0036%" y="692" width="0.3584%" height="15" fill="rgb(241,170,50)" fg:x="452" fg:w="2"/><text x="81.2536%" y="702.50"></text></g><g><title>at::native::wrapped_scalar_tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="708" width="0.1792%" height="15" fill="rgb(226,205,29)" fg:x="453" fg:w="1"/><text x="81.4328%" y="718.50"></text></g><g><title>at::detail::scalar_tensor_static (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="724" width="0.1792%" height="15" fill="rgb(233,113,1)" fg:x="453" fg:w="1"/><text x="81.4328%" y="734.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="740" width="0.1792%" height="15" fill="rgb(253,98,13)" fg:x="453" fg:w="1"/><text x="81.4328%" y="750.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="756" width="0.1792%" height="15" fill="rgb(211,115,12)" fg:x="453" fg:w="1"/><text x="81.4328%" y="766.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="772" width="0.1792%" height="15" fill="rgb(208,12,16)" fg:x="453" fg:w="1"/><text x="81.4328%" y="782.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.1828%" y="788" width="0.1792%" height="15" fill="rgb(237,193,54)" fg:x="453" fg:w="1"/><text x="81.4328%" y="798.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.5412%" y="708" width="0.1792%" height="15" fill="rgb(243,22,42)" fg:x="455" fg:w="1"/><text x="81.7912%" y="718.50"></text></g><g><title>at::_ops::result_type_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.5412%" y="724" width="0.1792%" height="15" fill="rgb(233,151,36)" fg:x="455" fg:w="1"/><text x="81.7912%" y="734.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.5412%" y="740" width="0.1792%" height="15" fill="rgb(237,57,45)" fg:x="455" fg:w="1"/><text x="81.7912%" y="750.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="81.5412%" y="756" width="0.1792%" height="15" fill="rgb(221,88,17)" fg:x="455" fg:w="1"/><text x="81.7912%" y="766.50"></text></g><g><title>0x7f34ff179d21 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="81.5412%" y="772" width="0.1792%" height="15" fill="rgb(230,79,15)" fg:x="455" fg:w="1"/><text x="81.7912%" y="782.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="80.8244%" y="580" width="1.0753%" height="15" fill="rgb(213,57,13)" fg:x="451" fg:w="6"/><text x="81.0744%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (6 samples, 1.08%)</title><rect x="80.8244%" y="596" width="1.0753%" height="15" fill="rgb(222,116,39)" fg:x="451" fg:w="6"/><text x="81.0744%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.3620%" y="612" width="0.5376%" height="15" fill="rgb(245,107,2)" fg:x="454" fg:w="3"/><text x="81.6120%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.3620%" y="628" width="0.5376%" height="15" fill="rgb(238,1,10)" fg:x="454" fg:w="3"/><text x="81.6120%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.3620%" y="644" width="0.5376%" height="15" fill="rgb(249,4,48)" fg:x="454" fg:w="3"/><text x="81.6120%" y="654.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.5412%" y="660" width="0.3584%" height="15" fill="rgb(223,151,18)" fg:x="455" fg:w="2"/><text x="81.7912%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.5412%" y="676" width="0.3584%" height="15" fill="rgb(227,65,43)" fg:x="455" fg:w="2"/><text x="81.7912%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="81.5412%" y="692" width="0.3584%" height="15" fill="rgb(218,40,45)" fg:x="455" fg:w="2"/><text x="81.7912%" y="702.50"></text></g><g><title>at::native::structured_pow_Tensor_Scalar_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.7204%" y="708" width="0.1792%" height="15" fill="rgb(252,121,31)" fg:x="456" fg:w="1"/><text x="81.9704%" y="718.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.7204%" y="724" width="0.1792%" height="15" fill="rgb(219,158,43)" fg:x="456" fg:w="1"/><text x="81.9704%" y="734.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.7204%" y="740" width="0.1792%" height="15" fill="rgb(231,162,42)" fg:x="456" fg:w="1"/><text x="81.9704%" y="750.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="81.7204%" y="756" width="0.1792%" height="15" fill="rgb(217,179,25)" fg:x="456" fg:w="1"/><text x="81.9704%" y="766.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="81.7204%" y="772" width="0.1792%" height="15" fill="rgb(206,212,31)" fg:x="456" fg:w="1"/><text x="81.9704%" y="782.50"></text></g><g><title>0x7f34ff179cac (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="81.7204%" y="788" width="0.1792%" height="15" fill="rgb(235,144,12)" fg:x="456" fg:w="1"/><text x="81.9704%" y="798.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.8996%" y="708" width="0.1792%" height="15" fill="rgb(213,51,10)" fg:x="457" fg:w="1"/><text x="82.1496%" y="718.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.8996%" y="724" width="0.1792%" height="15" fill="rgb(231,145,14)" fg:x="457" fg:w="1"/><text x="82.1496%" y="734.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.8996%" y="740" width="0.1792%" height="15" fill="rgb(235,15,28)" fg:x="457" fg:w="1"/><text x="82.1496%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.8996%" y="756" width="0.1792%" height="15" fill="rgb(237,206,10)" fg:x="457" fg:w="1"/><text x="82.1496%" y="766.50"></text></g><g><title>at::TensorIteratorBase::compute_shape (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="81.8996%" y="772" width="0.1792%" height="15" fill="rgb(236,227,27)" fg:x="457" fg:w="1"/><text x="82.1496%" y="782.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="708" width="0.1792%" height="15" fill="rgb(246,83,35)" fg:x="458" fg:w="1"/><text x="82.3289%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="724" width="0.1792%" height="15" fill="rgb(220,136,24)" fg:x="458" fg:w="1"/><text x="82.3289%" y="734.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="740" width="0.1792%" height="15" fill="rgb(217,3,25)" fg:x="458" fg:w="1"/><text x="82.3289%" y="750.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="756" width="0.1792%" height="15" fill="rgb(239,24,14)" fg:x="458" fg:w="1"/><text x="82.3289%" y="766.50"></text></g><g><title>c10::operator&lt; (libc10.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="772" width="0.1792%" height="15" fill="rgb(244,16,53)" fg:x="458" fg:w="1"/><text x="82.3289%" y="782.50"></text></g><g><title>c10::SymInt::sym_lt (libc10.so) (1 samples, 0.18%)</title><rect x="82.0789%" y="788" width="0.1792%" height="15" fill="rgb(208,175,44)" fg:x="458" fg:w="1"/><text x="82.3289%" y="798.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="580" width="0.5376%" height="15" fill="rgb(252,18,48)" fg:x="457" fg:w="3"/><text x="82.1496%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="596" width="0.5376%" height="15" fill="rgb(234,199,32)" fg:x="457" fg:w="3"/><text x="82.1496%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="612" width="0.5376%" height="15" fill="rgb(225,77,54)" fg:x="457" fg:w="3"/><text x="82.1496%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="628" width="0.5376%" height="15" fill="rgb(225,42,25)" fg:x="457" fg:w="3"/><text x="82.1496%" y="638.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="644" width="0.5376%" height="15" fill="rgb(242,227,46)" fg:x="457" fg:w="3"/><text x="82.1496%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="660" width="0.5376%" height="15" fill="rgb(246,197,35)" fg:x="457" fg:w="3"/><text x="82.1496%" y="670.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="676" width="0.5376%" height="15" fill="rgb(215,159,26)" fg:x="457" fg:w="3"/><text x="82.1496%" y="686.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="81.8996%" y="692" width="0.5376%" height="15" fill="rgb(212,194,50)" fg:x="457" fg:w="3"/><text x="82.1496%" y="702.50"></text></g><g><title>at::_ops::zeros::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="708" width="0.1792%" height="15" fill="rgb(246,132,1)" fg:x="459" fg:w="1"/><text x="82.5081%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="724" width="0.1792%" height="15" fill="rgb(217,71,7)" fg:x="459" fg:w="1"/><text x="82.5081%" y="734.50"></text></g><g><title>at::_ops::zeros::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="740" width="0.1792%" height="15" fill="rgb(252,59,32)" fg:x="459" fg:w="1"/><text x="82.5081%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="756" width="0.1792%" height="15" fill="rgb(253,204,25)" fg:x="459" fg:w="1"/><text x="82.5081%" y="766.50"></text></g><g><title>at::native::zeros_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="772" width="0.1792%" height="15" fill="rgb(232,21,16)" fg:x="459" fg:w="1"/><text x="82.5081%" y="782.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="788" width="0.1792%" height="15" fill="rgb(248,90,29)" fg:x="459" fg:w="1"/><text x="82.5081%" y="798.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="804" width="0.1792%" height="15" fill="rgb(249,223,7)" fg:x="459" fg:w="1"/><text x="82.5081%" y="814.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="820" width="0.1792%" height="15" fill="rgb(231,119,42)" fg:x="459" fg:w="1"/><text x="82.5081%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="836" width="0.1792%" height="15" fill="rgb(215,41,35)" fg:x="459" fg:w="1"/><text x="82.5081%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="852" width="0.1792%" height="15" fill="rgb(220,44,45)" fg:x="459" fg:w="1"/><text x="82.5081%" y="862.50"></text></g><g><title>at::native::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="868" width="0.1792%" height="15" fill="rgb(253,197,36)" fg:x="459" fg:w="1"/><text x="82.5081%" y="878.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="884" width="0.1792%" height="15" fill="rgb(245,225,54)" fg:x="459" fg:w="1"/><text x="82.5081%" y="894.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="900" width="0.1792%" height="15" fill="rgb(239,94,37)" fg:x="459" fg:w="1"/><text x="82.5081%" y="910.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="916" width="0.1792%" height="15" fill="rgb(242,217,10)" fg:x="459" fg:w="1"/><text x="82.5081%" y="926.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="932" width="0.1792%" height="15" fill="rgb(250,193,7)" fg:x="459" fg:w="1"/><text x="82.5081%" y="942.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="948" width="0.1792%" height="15" fill="rgb(230,104,19)" fg:x="459" fg:w="1"/><text x="82.5081%" y="958.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="82.2581%" y="964" width="0.1792%" height="15" fill="rgb(230,181,4)" fg:x="459" fg:w="1"/><text x="82.5081%" y="974.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="82.2581%" y="980" width="0.1792%" height="15" fill="rgb(216,219,49)" fg:x="459" fg:w="1"/><text x="82.5081%" y="990.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="82.2581%" y="996" width="0.1792%" height="15" fill="rgb(254,144,0)" fg:x="459" fg:w="1"/><text x="82.5081%" y="1006.50"></text></g><g><title>0x7f34fee994d8 (libc.so.6) (1 samples, 0.18%)</title><rect x="82.2581%" y="1012" width="0.1792%" height="15" fill="rgb(205,209,38)" fg:x="459" fg:w="1"/><text x="82.5081%" y="1022.50"></text></g><g><title>0x7f34fee968a2 (libc.so.6) (1 samples, 0.18%)</title><rect x="82.2581%" y="1028" width="0.1792%" height="15" fill="rgb(240,21,42)" fg:x="459" fg:w="1"/><text x="82.5081%" y="1038.50"></text></g><g><title>at::TensorIteratorBase::TensorIteratorBase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.4373%" y="692" width="0.1792%" height="15" fill="rgb(241,132,3)" fg:x="460" fg:w="1"/><text x="82.6873%" y="702.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="80.4659%" y="564" width="2.3297%" height="15" fill="rgb(225,14,2)" fg:x="449" fg:w="13"/><text x="80.7159%" y="574.50">t..</text></g><g><title>torch::autograd::generated::SubBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="580" width="0.3584%" height="15" fill="rgb(210,141,35)" fg:x="460" fg:w="2"/><text x="82.6873%" y="590.50"></text></g><g><title>at::_ops::neg::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="596" width="0.3584%" height="15" fill="rgb(251,14,44)" fg:x="460" fg:w="2"/><text x="82.6873%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::neg(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="612" width="0.3584%" height="15" fill="rgb(247,48,18)" fg:x="460" fg:w="2"/><text x="82.6873%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::neg (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="628" width="0.3584%" height="15" fill="rgb(225,0,40)" fg:x="460" fg:w="2"/><text x="82.6873%" y="638.50"></text></g><g><title>at::_ops::neg::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="644" width="0.3584%" height="15" fill="rgb(221,31,33)" fg:x="460" fg:w="2"/><text x="82.6873%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_neg(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="660" width="0.3584%" height="15" fill="rgb(237,42,40)" fg:x="460" fg:w="2"/><text x="82.6873%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_neg (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="82.4373%" y="676" width="0.3584%" height="15" fill="rgb(233,51,29)" fg:x="460" fg:w="2"/><text x="82.6873%" y="686.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.6165%" y="692" width="0.1792%" height="15" fill="rgb(226,58,20)" fg:x="461" fg:w="1"/><text x="82.8665%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.6165%" y="708" width="0.1792%" height="15" fill="rgb(208,98,7)" fg:x="461" fg:w="1"/><text x="82.8665%" y="718.50"></text></g><g><title>c10::SmallVectorImpl&lt;long&gt;::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.6165%" y="724" width="0.1792%" height="15" fill="rgb(228,143,44)" fg:x="461" fg:w="1"/><text x="82.8665%" y="734.50"></text></g><g><title>0x7f34ab6a4550 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.6165%" y="740" width="0.1792%" height="15" fill="rgb(246,55,38)" fg:x="461" fg:w="1"/><text x="82.8665%" y="750.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="79.7491%" y="548" width="3.2258%" height="15" fill="rgb(247,87,16)" fg:x="445" fg:w="18"/><text x="79.9991%" y="558.50">tor..</text></g><g><title>torch::autograd::validate_outputs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.7957%" y="564" width="0.1792%" height="15" fill="rgb(234,129,42)" fg:x="462" fg:w="1"/><text x="83.0457%" y="574.50"></text></g><g><title>c10::SymInt::sym_eq (libc10.so) (1 samples, 0.18%)</title><rect x="82.7957%" y="580" width="0.1792%" height="15" fill="rgb(220,82,16)" fg:x="462" fg:w="1"/><text x="83.0457%" y="590.50"></text></g><g><title>fast_jacobian (main.cpp:47) (38 samples, 6.81%)</title><rect x="76.3441%" y="340" width="6.8100%" height="15" fill="rgb(211,88,4)" fg:x="426" fg:w="38"/><text x="76.5941%" y="350.50">fast_jaco..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (38 samples, 6.81%)</title><rect x="76.3441%" y="356" width="6.8100%" height="15" fill="rgb(248,151,21)" fg:x="426" fg:w="38"/><text x="76.5941%" y="366.50">at::Tenso..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (38 samples, 6.81%)</title><rect x="76.3441%" y="372" width="6.8100%" height="15" fill="rgb(238,163,6)" fg:x="426" fg:w="38"/><text x="76.5941%" y="382.50">c10::opti..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (38 samples, 6.81%)</title><rect x="76.3441%" y="388" width="6.8100%" height="15" fill="rgb(209,183,11)" fg:x="426" fg:w="38"/><text x="76.5941%" y="398.50">c10::opti..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (38 samples, 6.81%)</title><rect x="76.3441%" y="404" width="6.8100%" height="15" fill="rgb(219,37,20)" fg:x="426" fg:w="38"/><text x="76.5941%" y="414.50">at::Tenso..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (38 samples, 6.81%)</title><rect x="76.3441%" y="420" width="6.8100%" height="15" fill="rgb(210,158,4)" fg:x="426" fg:w="38"/><text x="76.5941%" y="430.50">torch::au..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (38 samples, 6.81%)</title><rect x="76.3441%" y="436" width="6.8100%" height="15" fill="rgb(221,167,53)" fg:x="426" fg:w="38"/><text x="76.5941%" y="446.50">torch::au..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (34 samples, 6.09%)</title><rect x="77.0609%" y="452" width="6.0932%" height="15" fill="rgb(237,151,45)" fg:x="430" fg:w="34"/><text x="77.3109%" y="462.50">torch::a..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (34 samples, 6.09%)</title><rect x="77.0609%" y="468" width="6.0932%" height="15" fill="rgb(231,39,3)" fg:x="430" fg:w="34"/><text x="77.3109%" y="478.50">torch::a..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (34 samples, 6.09%)</title><rect x="77.0609%" y="484" width="6.0932%" height="15" fill="rgb(212,167,28)" fg:x="430" fg:w="34"/><text x="77.3109%" y="494.50">torch::a..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (31 samples, 5.56%)</title><rect x="77.5986%" y="500" width="5.5556%" height="15" fill="rgb(232,178,8)" fg:x="433" fg:w="31"/><text x="77.8486%" y="510.50">torch::..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (31 samples, 5.56%)</title><rect x="77.5986%" y="516" width="5.5556%" height="15" fill="rgb(225,151,20)" fg:x="433" fg:w="31"/><text x="77.8486%" y="526.50">torch::..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (31 samples, 5.56%)</title><rect x="77.5986%" y="532" width="5.5556%" height="15" fill="rgb(238,3,37)" fg:x="433" fg:w="31"/><text x="77.8486%" y="542.50">torch::..</text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.9749%" y="548" width="0.1792%" height="15" fill="rgb(251,147,42)" fg:x="463" fg:w="1"/><text x="83.2249%" y="558.50"></text></g><g><title>torch::autograd::GraphTask::exec_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.9749%" y="564" width="0.1792%" height="15" fill="rgb(208,173,10)" fg:x="463" fg:w="1"/><text x="83.2249%" y="574.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="82.9749%" y="580" width="0.1792%" height="15" fill="rgb(246,225,4)" fg:x="463" fg:w="1"/><text x="83.2249%" y="590.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::get_state (libc10.so) (1 samples, 0.18%)</title><rect x="82.9749%" y="596" width="0.1792%" height="15" fill="rgb(248,102,6)" fg:x="463" fg:w="1"/><text x="83.2249%" y="606.50"></text></g><g><title>fast_jacobian (main.cpp:48) (1 samples, 0.18%)</title><rect x="83.1541%" y="340" width="0.1792%" height="15" fill="rgb(232,6,21)" fg:x="464" fg:w="1"/><text x="83.4041%" y="350.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::push_back (stl_vector.h:1198) (1 samples, 0.18%)</title><rect x="83.1541%" y="356" width="0.1792%" height="15" fill="rgb(221,179,22)" fg:x="464" fg:w="1"/><text x="83.4041%" y="366.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::_M_realloc_insert&lt;at::Tensor const&amp;&gt; (vector.tcc:440) (1 samples, 0.18%)</title><rect x="83.1541%" y="372" width="0.1792%" height="15" fill="rgb(252,50,20)" fg:x="464" fg:w="1"/><text x="83.4041%" y="382.50"></text></g><g><title>std::_Vector_base&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::_M_allocate (new_allocator.h:127) (1 samples, 0.18%)</title><rect x="83.1541%" y="388" width="0.1792%" height="15" fill="rgb(222,56,38)" fg:x="464" fg:w="1"/><text x="83.4041%" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="83.1541%" y="404" width="0.1792%" height="15" fill="rgb(206,193,29)" fg:x="464" fg:w="1"/><text x="83.4041%" y="414.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="83.1541%" y="420" width="0.1792%" height="15" fill="rgb(239,192,45)" fg:x="464" fg:w="1"/><text x="83.4041%" y="430.50"></text></g><g><title>rattle_step (main.cpp:101) (88 samples, 15.77%)</title><rect x="67.7419%" y="308" width="15.7706%" height="15" fill="rgb(254,18,36)" fg:x="378" fg:w="88"/><text x="67.9919%" y="318.50">rattle_step (main.cpp:10..</text></g><g><title>at::matmul (matmul.h:27) (67 samples, 12.01%)</title><rect x="71.5054%" y="324" width="12.0072%" height="15" fill="rgb(221,127,11)" fg:x="399" fg:w="67"/><text x="71.7554%" y="334.50">at::matmul (matmul..</text></g><g><title>fast_jacobian (main.cpp:50) (1 samples, 0.18%)</title><rect x="83.3333%" y="340" width="0.1792%" height="15" fill="rgb(234,146,35)" fg:x="465" fg:w="1"/><text x="83.5833%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="83.3333%" y="356" width="0.1792%" height="15" fill="rgb(254,201,37)" fg:x="465" fg:w="1"/><text x="83.5833%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="83.3333%" y="372" width="0.1792%" height="15" fill="rgb(211,202,23)" fg:x="465" fg:w="1"/><text x="83.5833%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="83.3333%" y="388" width="0.1792%" height="15" fill="rgb(237,91,2)" fg:x="465" fg:w="1"/><text x="83.5833%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (1 samples, 0.18%)</title><rect x="83.3333%" y="404" width="0.1792%" height="15" fill="rgb(226,228,36)" fg:x="465" fg:w="1"/><text x="83.5833%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (1 samples, 0.18%)</title><rect x="83.3333%" y="420" width="0.1792%" height="15" fill="rgb(213,63,50)" fg:x="465" fg:w="1"/><text x="83.5833%" y="430.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="436" width="0.1792%" height="15" fill="rgb(235,194,19)" fg:x="465" fg:w="1"/><text x="83.5833%" y="446.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="452" width="0.1792%" height="15" fill="rgb(207,204,18)" fg:x="465" fg:w="1"/><text x="83.5833%" y="462.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="468" width="0.1792%" height="15" fill="rgb(248,8,7)" fg:x="465" fg:w="1"/><text x="83.5833%" y="478.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="484" width="0.1792%" height="15" fill="rgb(223,145,47)" fg:x="465" fg:w="1"/><text x="83.5833%" y="494.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="500" width="0.1792%" height="15" fill="rgb(228,84,11)" fg:x="465" fg:w="1"/><text x="83.5833%" y="510.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SelectBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="516" width="0.1792%" height="15" fill="rgb(218,76,45)" fg:x="465" fg:w="1"/><text x="83.5833%" y="526.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="532" width="0.1792%" height="15" fill="rgb(223,80,15)" fg:x="465" fg:w="1"/><text x="83.5833%" y="542.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::~SelectBackward0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.3333%" y="548" width="0.1792%" height="15" fill="rgb(219,218,33)" fg:x="465" fg:w="1"/><text x="83.5833%" y="558.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="83.3333%" y="564" width="0.1792%" height="15" fill="rgb(208,51,11)" fg:x="465" fg:w="1"/><text x="83.5833%" y="574.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="772" width="0.1792%" height="15" fill="rgb(229,165,39)" fg:x="466" fg:w="1"/><text x="83.7625%" y="782.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="788" width="0.1792%" height="15" fill="rgb(241,100,24)" fg:x="466" fg:w="1"/><text x="83.7625%" y="798.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="804" width="0.1792%" height="15" fill="rgb(228,14,23)" fg:x="466" fg:w="1"/><text x="83.7625%" y="814.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="820" width="0.1792%" height="15" fill="rgb(247,116,52)" fg:x="466" fg:w="1"/><text x="83.7625%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="836" width="0.1792%" height="15" fill="rgb(216,149,33)" fg:x="466" fg:w="1"/><text x="83.7625%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="852" width="0.1792%" height="15" fill="rgb(238,142,29)" fg:x="466" fg:w="1"/><text x="83.7625%" y="862.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="868" width="0.1792%" height="15" fill="rgb(224,83,40)" fg:x="466" fg:w="1"/><text x="83.7625%" y="878.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="884" width="0.1792%" height="15" fill="rgb(234,165,11)" fg:x="466" fg:w="1"/><text x="83.7625%" y="894.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="900" width="0.1792%" height="15" fill="rgb(215,96,23)" fg:x="466" fg:w="1"/><text x="83.7625%" y="910.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="916" width="0.1792%" height="15" fill="rgb(233,179,26)" fg:x="466" fg:w="1"/><text x="83.7625%" y="926.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="932" width="0.1792%" height="15" fill="rgb(225,129,33)" fg:x="466" fg:w="1"/><text x="83.7625%" y="942.50"></text></g><g><title>c10::SymInt::expect_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.5125%" y="948" width="0.1792%" height="15" fill="rgb(237,49,13)" fg:x="466" fg:w="1"/><text x="83.7625%" y="958.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (2 samples, 0.36%)</title><rect x="83.5125%" y="676" width="0.3584%" height="15" fill="rgb(211,3,31)" fg:x="466" fg:w="2"/><text x="83.7625%" y="686.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (2 samples, 0.36%)</title><rect x="83.5125%" y="692" width="0.3584%" height="15" fill="rgb(216,152,19)" fg:x="466" fg:w="2"/><text x="83.7625%" y="702.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (2 samples, 0.36%)</title><rect x="83.5125%" y="708" width="0.3584%" height="15" fill="rgb(251,121,35)" fg:x="466" fg:w="2"/><text x="83.7625%" y="718.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="83.5125%" y="724" width="0.3584%" height="15" fill="rgb(210,217,47)" fg:x="466" fg:w="2"/><text x="83.7625%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="83.5125%" y="740" width="0.3584%" height="15" fill="rgb(244,116,22)" fg:x="466" fg:w="2"/><text x="83.7625%" y="750.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="83.5125%" y="756" width="0.3584%" height="15" fill="rgb(228,17,21)" fg:x="466" fg:w="2"/><text x="83.7625%" y="766.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.6918%" y="772" width="0.1792%" height="15" fill="rgb(240,149,34)" fg:x="467" fg:w="1"/><text x="83.9418%" y="782.50"></text></g><g><title>torch::autograd::impl::gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.6918%" y="788" width="0.1792%" height="15" fill="rgb(208,125,47)" fg:x="467" fg:w="1"/><text x="83.9418%" y="798.50"></text></g><g><title>torch::autograd::impl::grad_accumulator (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.6918%" y="804" width="0.1792%" height="15" fill="rgb(249,186,39)" fg:x="467" fg:w="1"/><text x="83.9418%" y="814.50"></text></g><g><title>torch::autograd::AccumulateGrad::AccumulateGrad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.6918%" y="820" width="0.1792%" height="15" fill="rgb(240,220,33)" fg:x="467" fg:w="1"/><text x="83.9418%" y="830.50"></text></g><g><title>torch::autograd::InputMetadata::InputMetadata (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="83.6918%" y="836" width="0.1792%" height="15" fill="rgb(243,110,23)" fg:x="467" fg:w="1"/><text x="83.9418%" y="846.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="83.8710%" y="692" width="0.1792%" height="15" fill="rgb(219,163,46)" fg:x="468" fg:w="1"/><text x="84.1210%" y="702.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="83.8710%" y="708" width="0.1792%" height="15" fill="rgb(216,126,30)" fg:x="468" fg:w="1"/><text x="84.1210%" y="718.50"></text></g><g><title>0x7f34ff179b58 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="83.8710%" y="724" width="0.1792%" height="15" fill="rgb(208,139,11)" fg:x="468" fg:w="1"/><text x="84.1210%" y="734.50"></text></g><g><title>at::TensorIteratorBase::TensorIteratorBase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.0502%" y="772" width="0.1792%" height="15" fill="rgb(213,118,36)" fg:x="469" fg:w="1"/><text x="84.3002%" y="782.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.0502%" y="724" width="0.3584%" height="15" fill="rgb(226,43,17)" fg:x="469" fg:w="2"/><text x="84.3002%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.0502%" y="740" width="0.3584%" height="15" fill="rgb(254,217,4)" fg:x="469" fg:w="2"/><text x="84.3002%" y="750.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.0502%" y="756" width="0.3584%" height="15" fill="rgb(210,134,47)" fg:x="469" fg:w="2"/><text x="84.3002%" y="766.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.2294%" y="772" width="0.1792%" height="15" fill="rgb(237,24,49)" fg:x="470" fg:w="1"/><text x="84.4794%" y="782.50"></text></g><g><title>at::_ops::result_type_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.2294%" y="788" width="0.1792%" height="15" fill="rgb(251,39,46)" fg:x="470" fg:w="1"/><text x="84.4794%" y="798.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.2294%" y="804" width="0.1792%" height="15" fill="rgb(251,220,3)" fg:x="470" fg:w="1"/><text x="84.4794%" y="814.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (6 samples, 1.08%)</title><rect x="83.5125%" y="660" width="1.0753%" height="15" fill="rgb(228,105,12)" fg:x="466" fg:w="6"/><text x="83.7625%" y="670.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="83.8710%" y="676" width="0.7168%" height="15" fill="rgb(215,196,1)" fg:x="468" fg:w="4"/><text x="84.1210%" y="686.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="84.0502%" y="692" width="0.5376%" height="15" fill="rgb(214,33,39)" fg:x="469" fg:w="3"/><text x="84.3002%" y="702.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="84.0502%" y="708" width="0.5376%" height="15" fill="rgb(220,19,52)" fg:x="469" fg:w="3"/><text x="84.3002%" y="718.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="84.4086%" y="724" width="0.1792%" height="15" fill="rgb(221,78,38)" fg:x="471" fg:w="1"/><text x="84.6586%" y="734.50"></text></g><g><title>at::pow (pow.h:64) (1 samples, 0.18%)</title><rect x="84.5878%" y="660" width="0.1792%" height="15" fill="rgb(253,30,16)" fg:x="472" fg:w="1"/><text x="84.8378%" y="670.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="84.5878%" y="676" width="0.1792%" height="15" fill="rgb(242,65,0)" fg:x="472" fg:w="1"/><text x="84.8378%" y="686.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="84.5878%" y="692" width="0.1792%" height="15" fill="rgb(235,201,12)" fg:x="472" fg:w="1"/><text x="84.8378%" y="702.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="84.5878%" y="708" width="0.1792%" height="15" fill="rgb(233,161,9)" fg:x="472" fg:w="1"/><text x="84.8378%" y="718.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.5878%" y="724" width="0.1792%" height="15" fill="rgb(241,207,41)" fg:x="472" fg:w="1"/><text x="84.8378%" y="734.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.5878%" y="740" width="0.1792%" height="15" fill="rgb(212,69,46)" fg:x="472" fg:w="1"/><text x="84.8378%" y="750.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuildActiveCallbacksIfNeeded (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.5878%" y="756" width="0.1792%" height="15" fill="rgb(239,69,45)" fg:x="472" fg:w="1"/><text x="84.8378%" y="766.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (8 samples, 1.43%)</title><rect x="83.5125%" y="404" width="1.4337%" height="15" fill="rgb(242,117,48)" fg:x="466" fg:w="8"/><text x="83.7625%" y="414.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (8 samples, 1.43%)</title><rect x="83.5125%" y="420" width="1.4337%" height="15" fill="rgb(228,41,36)" fg:x="466" fg:w="8"/><text x="83.7625%" y="430.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (8 samples, 1.43%)</title><rect x="83.5125%" y="436" width="1.4337%" height="15" fill="rgb(212,3,32)" fg:x="466" fg:w="8"/><text x="83.7625%" y="446.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (8 samples, 1.43%)</title><rect x="83.5125%" y="452" width="1.4337%" height="15" fill="rgb(233,41,49)" fg:x="466" fg:w="8"/><text x="83.7625%" y="462.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (8 samples, 1.43%)</title><rect x="83.5125%" y="468" width="1.4337%" height="15" fill="rgb(252,170,49)" fg:x="466" fg:w="8"/><text x="83.7625%" y="478.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (8 samples, 1.43%)</title><rect x="83.5125%" y="484" width="1.4337%" height="15" fill="rgb(229,53,26)" fg:x="466" fg:w="8"/><text x="83.7625%" y="494.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (8 samples, 1.43%)</title><rect x="83.5125%" y="500" width="1.4337%" height="15" fill="rgb(217,157,12)" fg:x="466" fg:w="8"/><text x="83.7625%" y="510.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (8 samples, 1.43%)</title><rect x="83.5125%" y="516" width="1.4337%" height="15" fill="rgb(227,17,9)" fg:x="466" fg:w="8"/><text x="83.7625%" y="526.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (8 samples, 1.43%)</title><rect x="83.5125%" y="532" width="1.4337%" height="15" fill="rgb(218,84,12)" fg:x="466" fg:w="8"/><text x="83.7625%" y="542.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (8 samples, 1.43%)</title><rect x="83.5125%" y="548" width="1.4337%" height="15" fill="rgb(212,79,24)" fg:x="466" fg:w="8"/><text x="83.7625%" y="558.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (8 samples, 1.43%)</title><rect x="83.5125%" y="564" width="1.4337%" height="15" fill="rgb(217,222,37)" fg:x="466" fg:w="8"/><text x="83.7625%" y="574.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (8 samples, 1.43%)</title><rect x="83.5125%" y="580" width="1.4337%" height="15" fill="rgb(246,208,8)" fg:x="466" fg:w="8"/><text x="83.7625%" y="590.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (8 samples, 1.43%)</title><rect x="83.5125%" y="596" width="1.4337%" height="15" fill="rgb(244,133,10)" fg:x="466" fg:w="8"/><text x="83.7625%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (8 samples, 1.43%)</title><rect x="83.5125%" y="612" width="1.4337%" height="15" fill="rgb(209,219,41)" fg:x="466" fg:w="8"/><text x="83.7625%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (8 samples, 1.43%)</title><rect x="83.5125%" y="628" width="1.4337%" height="15" fill="rgb(253,175,45)" fg:x="466" fg:w="8"/><text x="83.7625%" y="638.50"></text></g><g><title>my_length_constraint (main.cpp:268) (8 samples, 1.43%)</title><rect x="83.5125%" y="644" width="1.4337%" height="15" fill="rgb(235,100,37)" fg:x="466" fg:w="8"/><text x="83.7625%" y="654.50"></text></g><g><title>operator- (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="84.7670%" y="660" width="0.1792%" height="15" fill="rgb(225,87,19)" fg:x="473" fg:w="1"/><text x="85.0170%" y="670.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="84.7670%" y="676" width="0.1792%" height="15" fill="rgb(217,152,17)" fg:x="473" fg:w="1"/><text x="85.0170%" y="686.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="84.7670%" y="692" width="0.1792%" height="15" fill="rgb(235,72,13)" fg:x="473" fg:w="1"/><text x="85.0170%" y="702.50"></text></g><g><title>at::_ops::sub_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.7670%" y="708" width="0.1792%" height="15" fill="rgb(233,140,18)" fg:x="473" fg:w="1"/><text x="85.0170%" y="718.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.7670%" y="724" width="0.1792%" height="15" fill="rgb(207,212,28)" fg:x="473" fg:w="1"/><text x="85.0170%" y="734.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuildActiveCallbacksIfNeeded (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="84.7670%" y="740" width="0.1792%" height="15" fill="rgb(220,130,25)" fg:x="473" fg:w="1"/><text x="85.0170%" y="750.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="84.7670%" y="756" width="0.1792%" height="15" fill="rgb(205,55,34)" fg:x="473" fg:w="1"/><text x="85.0170%" y="766.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="84.7670%" y="772" width="0.1792%" height="15" fill="rgb(237,54,35)" fg:x="473" fg:w="1"/><text x="85.0170%" y="782.50"></text></g><g><title>0x7f34ff179b34 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="84.7670%" y="788" width="0.1792%" height="15" fill="rgb(208,67,23)" fg:x="473" fg:w="1"/><text x="85.0170%" y="798.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.9462%" y="628" width="0.3584%" height="15" fill="rgb(206,207,50)" fg:x="474" fg:w="2"/><text x="85.1962%" y="638.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.9462%" y="644" width="0.3584%" height="15" fill="rgb(213,211,42)" fg:x="474" fg:w="2"/><text x="85.1962%" y="654.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="84.9462%" y="660" width="0.3584%" height="15" fill="rgb(252,197,50)" fg:x="474" fg:w="2"/><text x="85.1962%" y="670.50"></text></g><g><title>at::RecordFunction::currentThreadId (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.1254%" y="676" width="0.1792%" height="15" fill="rgb(251,211,41)" fg:x="475" fg:w="1"/><text x="85.3754%" y="686.50"></text></g><g><title>at::functionalization::impl::setFunctionalizationReapplyViewsTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.3047%" y="628" width="0.1792%" height="15" fill="rgb(229,211,5)" fg:x="476" fg:w="1"/><text x="85.5547%" y="638.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="85.3047%" y="644" width="0.1792%" height="15" fill="rgb(239,36,31)" fg:x="476" fg:w="1"/><text x="85.5547%" y="654.50"></text></g><g><title>0x7f34ff179d07 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="85.3047%" y="660" width="0.1792%" height="15" fill="rgb(248,67,31)" fg:x="476" fg:w="1"/><text x="85.5547%" y="670.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="84.9462%" y="612" width="0.7168%" height="15" fill="rgb(249,55,44)" fg:x="474" fg:w="4"/><text x="85.1962%" y="622.50"></text></g><g><title>at::impl::PythonTorchFunctionTLS::set_state (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.4839%" y="628" width="0.1792%" height="15" fill="rgb(216,82,12)" fg:x="477" fg:w="1"/><text x="85.7339%" y="638.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.6631%" y="628" width="0.1792%" height="15" fill="rgb(242,174,1)" fg:x="478" fg:w="1"/><text x="85.9131%" y="638.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.6631%" y="644" width="0.1792%" height="15" fill="rgb(208,120,29)" fg:x="478" fg:w="1"/><text x="85.9131%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.6631%" y="660" width="0.1792%" height="15" fill="rgb(221,105,43)" fg:x="478" fg:w="1"/><text x="85.9131%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.6631%" y="676" width="0.1792%" height="15" fill="rgb(234,124,22)" fg:x="478" fg:w="1"/><text x="85.9131%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::checked_cast_variable (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.6631%" y="692" width="0.1792%" height="15" fill="rgb(212,23,30)" fg:x="478" fg:w="1"/><text x="85.9131%" y="702.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.8423%" y="644" width="0.1792%" height="15" fill="rgb(219,122,53)" fg:x="479" fg:w="1"/><text x="86.0923%" y="654.50"></text></g><g><title>0x7f34ab6ae730 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="85.8423%" y="660" width="0.1792%" height="15" fill="rgb(248,84,24)" fg:x="479" fg:w="1"/><text x="86.0923%" y="670.50"></text></g><g><title>torch::autograd::AccumulateGrad::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.0215%" y="644" width="0.1792%" height="15" fill="rgb(245,115,18)" fg:x="480" fg:w="1"/><text x="86.2715%" y="654.50"></text></g><g><title>torch::autograd::AccumulateGrad::accumulateGrad&lt;torch::autograd::AccumulateGrad::apply(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;&amp;&amp;)::{lambda(at::Tensor&amp;&amp;)#1}&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.0215%" y="660" width="0.1792%" height="15" fill="rgb(227,176,51)" fg:x="480" fg:w="1"/><text x="86.2715%" y="670.50"></text></g><g><title>torch::autograd::utils::obeys_layout_contract (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.0215%" y="676" width="0.1792%" height="15" fill="rgb(229,63,42)" fg:x="480" fg:w="1"/><text x="86.2715%" y="686.50"></text></g><g><title>c10::operator!= (libc10.so) (1 samples, 0.18%)</title><rect x="86.0215%" y="692" width="0.1792%" height="15" fill="rgb(247,202,24)" fg:x="480" fg:w="1"/><text x="86.2715%" y="702.50"></text></g><g><title>c10::SymBool::guard_bool (libc10.so) (1 samples, 0.18%)</title><rect x="86.0215%" y="708" width="0.1792%" height="15" fill="rgb(244,173,20)" fg:x="480" fg:w="1"/><text x="86.2715%" y="718.50"></text></g><g><title>at::_ops::mul_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.2007%" y="676" width="0.1792%" height="15" fill="rgb(242,81,47)" fg:x="481" fg:w="1"/><text x="86.4507%" y="686.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.2007%" y="692" width="0.1792%" height="15" fill="rgb(231,185,54)" fg:x="481" fg:w="1"/><text x="86.4507%" y="702.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.2007%" y="708" width="0.1792%" height="15" fill="rgb(243,55,32)" fg:x="481" fg:w="1"/><text x="86.4507%" y="718.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="676" width="0.1792%" height="15" fill="rgb(208,167,19)" fg:x="482" fg:w="1"/><text x="86.6299%" y="686.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="692" width="0.1792%" height="15" fill="rgb(231,72,35)" fg:x="482" fg:w="1"/><text x="86.6299%" y="702.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="708" width="0.1792%" height="15" fill="rgb(250,173,51)" fg:x="482" fg:w="1"/><text x="86.6299%" y="718.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="724" width="0.1792%" height="15" fill="rgb(209,5,22)" fg:x="482" fg:w="1"/><text x="86.6299%" y="734.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="740" width="0.1792%" height="15" fill="rgb(250,174,19)" fg:x="482" fg:w="1"/><text x="86.6299%" y="750.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="756" width="0.1792%" height="15" fill="rgb(217,3,49)" fg:x="482" fg:w="1"/><text x="86.6299%" y="766.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="772" width="0.1792%" height="15" fill="rgb(218,225,5)" fg:x="482" fg:w="1"/><text x="86.6299%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.3799%" y="788" width="0.1792%" height="15" fill="rgb(236,89,11)" fg:x="482" fg:w="1"/><text x="86.6299%" y="798.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.2007%" y="644" width="0.5376%" height="15" fill="rgb(206,33,28)" fg:x="481" fg:w="3"/><text x="86.4507%" y="654.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.2007%" y="660" width="0.5376%" height="15" fill="rgb(241,56,42)" fg:x="481" fg:w="3"/><text x="86.4507%" y="670.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="86.5591%" y="676" width="0.1792%" height="15" fill="rgb(222,44,11)" fg:x="483" fg:w="1"/><text x="86.8091%" y="686.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="86.5591%" y="692" width="0.1792%" height="15" fill="rgb(234,111,20)" fg:x="483" fg:w="1"/><text x="86.8091%" y="702.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="86.5591%" y="708" width="0.1792%" height="15" fill="rgb(237,77,6)" fg:x="483" fg:w="1"/><text x="86.8091%" y="718.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.9176%" y="772" width="0.1792%" height="15" fill="rgb(235,111,23)" fg:x="485" fg:w="1"/><text x="87.1676%" y="782.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.9176%" y="788" width="0.1792%" height="15" fill="rgb(251,135,29)" fg:x="485" fg:w="1"/><text x="87.1676%" y="798.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="86.9176%" y="804" width="0.1792%" height="15" fill="rgb(217,57,1)" fg:x="485" fg:w="1"/><text x="87.1676%" y="814.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (10 samples, 1.79%)</title><rect x="85.6631%" y="612" width="1.7921%" height="15" fill="rgb(249,119,31)" fg:x="478" fg:w="10"/><text x="85.9131%" y="622.50">t..</text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (9 samples, 1.61%)</title><rect x="85.8423%" y="628" width="1.6129%" height="15" fill="rgb(233,164,33)" fg:x="479" fg:w="9"/><text x="86.0923%" y="638.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="86.7384%" y="644" width="0.7168%" height="15" fill="rgb(250,217,43)" fg:x="484" fg:w="4"/><text x="86.9884%" y="654.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="86.7384%" y="660" width="0.7168%" height="15" fill="rgb(232,154,50)" fg:x="484" fg:w="4"/><text x="86.9884%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="86.7384%" y="676" width="0.7168%" height="15" fill="rgb(227,190,8)" fg:x="484" fg:w="4"/><text x="86.9884%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="86.7384%" y="692" width="0.7168%" height="15" fill="rgb(209,217,32)" fg:x="484" fg:w="4"/><text x="86.9884%" y="702.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.9176%" y="708" width="0.5376%" height="15" fill="rgb(243,203,50)" fg:x="485" fg:w="3"/><text x="87.1676%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.9176%" y="724" width="0.5376%" height="15" fill="rgb(232,152,27)" fg:x="485" fg:w="3"/><text x="87.1676%" y="734.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.9176%" y="740" width="0.5376%" height="15" fill="rgb(240,34,29)" fg:x="485" fg:w="3"/><text x="87.1676%" y="750.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="86.9176%" y="756" width="0.5376%" height="15" fill="rgb(215,185,52)" fg:x="485" fg:w="3"/><text x="87.1676%" y="766.50"></text></g><g><title>at::_ops::zeros::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="87.0968%" y="772" width="0.3584%" height="15" fill="rgb(240,89,49)" fg:x="486" fg:w="2"/><text x="87.3468%" y="782.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="87.0968%" y="788" width="0.3584%" height="15" fill="rgb(225,12,52)" fg:x="486" fg:w="2"/><text x="87.3468%" y="798.50"></text></g><g><title>at::_ops::zeros::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.2760%" y="804" width="0.1792%" height="15" fill="rgb(239,128,45)" fg:x="487" fg:w="1"/><text x="87.5260%" y="814.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__zeros(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.2760%" y="820" width="0.1792%" height="15" fill="rgb(211,78,47)" fg:x="487" fg:w="1"/><text x="87.5260%" y="830.50"></text></g><g><title>at::native::zeros_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.2760%" y="836" width="0.1792%" height="15" fill="rgb(232,31,21)" fg:x="487" fg:w="1"/><text x="87.5260%" y="846.50"></text></g><g><title>at::_ops::zero_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.2760%" y="852" width="0.1792%" height="15" fill="rgb(222,168,14)" fg:x="487" fg:w="1"/><text x="87.5260%" y="862.50"></text></g><g><title>at::getStepCallbacksUnlessEmpty (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.2760%" y="868" width="0.1792%" height="15" fill="rgb(209,128,24)" fg:x="487" fg:w="1"/><text x="87.5260%" y="878.50"></text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.4552%" y="612" width="0.1792%" height="15" fill="rgb(249,35,13)" fg:x="488" fg:w="1"/><text x="87.7052%" y="622.50"></text></g><g><title>c10::ivalue::Future::markCompleted (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.4552%" y="628" width="0.1792%" height="15" fill="rgb(218,7,2)" fg:x="488" fg:w="1"/><text x="87.7052%" y="638.50"></text></g><g><title>__pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="87.4552%" y="644" width="0.1792%" height="15" fill="rgb(238,107,27)" fg:x="488" fg:w="1"/><text x="87.7052%" y="654.50"></text></g><g><title>fast_jacobian (main.cpp:47) (16 samples, 2.87%)</title><rect x="84.9462%" y="404" width="2.8674%" height="15" fill="rgb(217,88,38)" fg:x="474" fg:w="16"/><text x="85.1962%" y="414.50">fa..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (16 samples, 2.87%)</title><rect x="84.9462%" y="420" width="2.8674%" height="15" fill="rgb(230,207,0)" fg:x="474" fg:w="16"/><text x="85.1962%" y="430.50">at..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (16 samples, 2.87%)</title><rect x="84.9462%" y="436" width="2.8674%" height="15" fill="rgb(249,64,54)" fg:x="474" fg:w="16"/><text x="85.1962%" y="446.50">c1..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (16 samples, 2.87%)</title><rect x="84.9462%" y="452" width="2.8674%" height="15" fill="rgb(231,7,11)" fg:x="474" fg:w="16"/><text x="85.1962%" y="462.50">c1..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="468" width="2.8674%" height="15" fill="rgb(205,149,21)" fg:x="474" fg:w="16"/><text x="85.1962%" y="478.50">at..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="484" width="2.8674%" height="15" fill="rgb(215,126,34)" fg:x="474" fg:w="16"/><text x="85.1962%" y="494.50">to..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="500" width="2.8674%" height="15" fill="rgb(241,132,45)" fg:x="474" fg:w="16"/><text x="85.1962%" y="510.50">to..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="516" width="2.8674%" height="15" fill="rgb(252,69,32)" fg:x="474" fg:w="16"/><text x="85.1962%" y="526.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="532" width="2.8674%" height="15" fill="rgb(232,204,19)" fg:x="474" fg:w="16"/><text x="85.1962%" y="542.50">to..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="548" width="2.8674%" height="15" fill="rgb(249,15,47)" fg:x="474" fg:w="16"/><text x="85.1962%" y="558.50">to..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="564" width="2.8674%" height="15" fill="rgb(209,227,23)" fg:x="474" fg:w="16"/><text x="85.1962%" y="574.50">to..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="580" width="2.8674%" height="15" fill="rgb(248,92,24)" fg:x="474" fg:w="16"/><text x="85.1962%" y="590.50">to..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="84.9462%" y="596" width="2.8674%" height="15" fill="rgb(247,59,2)" fg:x="474" fg:w="16"/><text x="85.1962%" y="606.50">to..</text></g><g><title>torch::autograd::ReadyQueue::pop (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.6344%" y="612" width="0.1792%" height="15" fill="rgb(221,30,5)" fg:x="489" fg:w="1"/><text x="87.8844%" y="622.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::AddBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.8136%" y="580" width="0.1792%" height="15" fill="rgb(208,108,53)" fg:x="490" fg:w="1"/><text x="88.0636%" y="590.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.8136%" y="596" width="0.1792%" height="15" fill="rgb(211,183,26)" fg:x="490" fg:w="1"/><text x="88.0636%" y="606.50"></text></g><g><title>torch::autograd::generated::AddBackward0::~AddBackward0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.8136%" y="612" width="0.1792%" height="15" fill="rgb(232,132,4)" fg:x="490" fg:w="1"/><text x="88.0636%" y="622.50"></text></g><g><title>torch::autograd::Node::~Node (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.8136%" y="628" width="0.1792%" height="15" fill="rgb(253,128,37)" fg:x="490" fg:w="1"/><text x="88.0636%" y="638.50"></text></g><g><title>rattle_step (main.cpp:113) (26 samples, 4.66%)</title><rect x="83.5125%" y="308" width="4.6595%" height="15" fill="rgb(221,58,24)" fg:x="466" fg:w="26"/><text x="83.7625%" y="318.50">rattl..</text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (26 samples, 4.66%)</title><rect x="83.5125%" y="324" width="4.6595%" height="15" fill="rgb(230,54,45)" fg:x="466" fg:w="26"/><text x="83.7625%" y="334.50">at::T..</text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (26 samples, 4.66%)</title><rect x="83.5125%" y="340" width="4.6595%" height="15" fill="rgb(254,21,18)" fg:x="466" fg:w="26"/><text x="83.7625%" y="350.50">at::T..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (26 samples, 4.66%)</title><rect x="83.5125%" y="356" width="4.6595%" height="15" fill="rgb(221,108,0)" fg:x="466" fg:w="26"/><text x="83.7625%" y="366.50">c10::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (26 samples, 4.66%)</title><rect x="83.5125%" y="372" width="4.6595%" height="15" fill="rgb(206,95,1)" fg:x="466" fg:w="26"/><text x="83.7625%" y="382.50">c10::..</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (26 samples, 4.66%)</title><rect x="83.5125%" y="388" width="4.6595%" height="15" fill="rgb(237,52,5)" fg:x="466" fg:w="26"/><text x="83.7625%" y="398.50">c10::..</text></g><g><title>fast_jacobian (main.cpp:50) (2 samples, 0.36%)</title><rect x="87.8136%" y="404" width="0.3584%" height="15" fill="rgb(218,150,34)" fg:x="490" fg:w="2"/><text x="88.0636%" y="414.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="87.8136%" y="420" width="0.3584%" height="15" fill="rgb(235,194,28)" fg:x="490" fg:w="2"/><text x="88.0636%" y="430.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="87.8136%" y="436" width="0.3584%" height="15" fill="rgb(245,92,18)" fg:x="490" fg:w="2"/><text x="88.0636%" y="446.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="87.8136%" y="452" width="0.3584%" height="15" fill="rgb(253,203,53)" fg:x="490" fg:w="2"/><text x="88.0636%" y="462.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (2 samples, 0.36%)</title><rect x="87.8136%" y="468" width="0.3584%" height="15" fill="rgb(249,185,47)" fg:x="490" fg:w="2"/><text x="88.0636%" y="478.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (2 samples, 0.36%)</title><rect x="87.8136%" y="484" width="0.3584%" height="15" fill="rgb(252,194,52)" fg:x="490" fg:w="2"/><text x="88.0636%" y="494.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="87.8136%" y="500" width="0.3584%" height="15" fill="rgb(210,53,36)" fg:x="490" fg:w="2"/><text x="88.0636%" y="510.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="87.8136%" y="516" width="0.3584%" height="15" fill="rgb(237,37,25)" fg:x="490" fg:w="2"/><text x="88.0636%" y="526.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="87.8136%" y="532" width="0.3584%" height="15" fill="rgb(242,116,27)" fg:x="490" fg:w="2"/><text x="88.0636%" y="542.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="87.8136%" y="548" width="0.3584%" height="15" fill="rgb(213,185,26)" fg:x="490" fg:w="2"/><text x="88.0636%" y="558.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="87.8136%" y="564" width="0.3584%" height="15" fill="rgb(225,204,8)" fg:x="490" fg:w="2"/><text x="88.0636%" y="574.50"></text></g><g><title>torch::autograd::gatherFunctions (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="87.9928%" y="580" width="0.1792%" height="15" fill="rgb(254,111,37)" fg:x="491" fg:w="1"/><text x="88.2428%" y="590.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="88.1720%" y="596" width="0.1792%" height="15" fill="rgb(242,35,9)" fg:x="492" fg:w="1"/><text x="88.4220%" y="606.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="88.1720%" y="612" width="0.1792%" height="15" fill="rgb(232,138,49)" fg:x="492" fg:w="1"/><text x="88.4220%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="88.1720%" y="628" width="0.1792%" height="15" fill="rgb(247,56,4)" fg:x="492" fg:w="1"/><text x="88.4220%" y="638.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="644" width="0.1792%" height="15" fill="rgb(226,179,17)" fg:x="492" fg:w="1"/><text x="88.4220%" y="654.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="660" width="0.1792%" height="15" fill="rgb(216,163,45)" fg:x="492" fg:w="1"/><text x="88.4220%" y="670.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="676" width="0.1792%" height="15" fill="rgb(211,157,3)" fg:x="492" fg:w="1"/><text x="88.4220%" y="686.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="692" width="0.1792%" height="15" fill="rgb(234,44,20)" fg:x="492" fg:w="1"/><text x="88.4220%" y="702.50"></text></g><g><title>c10::DefaultCPUAllocator::ReportAndDelete (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="708" width="0.1792%" height="15" fill="rgb(254,138,23)" fg:x="492" fg:w="1"/><text x="88.4220%" y="718.50"></text></g><g><title>c10::ProfiledCPUMemoryReporter::Delete (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="724" width="0.1792%" height="15" fill="rgb(206,119,39)" fg:x="492" fg:w="1"/><text x="88.4220%" y="734.50"></text></g><g><title>c10::memoryProfilingEnabled (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="740" width="0.1792%" height="15" fill="rgb(231,105,52)" fg:x="492" fg:w="1"/><text x="88.4220%" y="750.50"></text></g><g><title>c10::ThreadLocalDebugInfo::get (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="756" width="0.1792%" height="15" fill="rgb(250,20,5)" fg:x="492" fg:w="1"/><text x="88.4220%" y="766.50"></text></g><g><title>c10::{lambda()#1}::_FUN (libc10.so) (1 samples, 0.18%)</title><rect x="88.1720%" y="772" width="0.1792%" height="15" fill="rgb(215,198,30)" fg:x="492" fg:w="1"/><text x="88.4220%" y="782.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="88.1720%" y="788" width="0.1792%" height="15" fill="rgb(246,142,8)" fg:x="492" fg:w="1"/><text x="88.4220%" y="798.50"></text></g><g><title>0x7f34ff179d21 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="88.1720%" y="804" width="0.1792%" height="15" fill="rgb(243,26,38)" fg:x="492" fg:w="1"/><text x="88.4220%" y="814.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="88.1720%" y="340" width="0.3584%" height="15" fill="rgb(205,133,28)" fg:x="492" fg:w="2"/><text x="88.4220%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="88.1720%" y="356" width="0.3584%" height="15" fill="rgb(212,34,0)" fg:x="492" fg:w="2"/><text x="88.4220%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="88.1720%" y="372" width="0.3584%" height="15" fill="rgb(251,226,22)" fg:x="492" fg:w="2"/><text x="88.4220%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="88.1720%" y="388" width="0.3584%" height="15" fill="rgb(252,119,9)" fg:x="492" fg:w="2"/><text x="88.4220%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (2 samples, 0.36%)</title><rect x="88.1720%" y="404" width="0.3584%" height="15" fill="rgb(213,150,50)" fg:x="492" fg:w="2"/><text x="88.4220%" y="414.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (2 samples, 0.36%)</title><rect x="88.1720%" y="420" width="0.3584%" height="15" fill="rgb(212,24,39)" fg:x="492" fg:w="2"/><text x="88.4220%" y="430.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (2 samples, 0.36%)</title><rect x="88.1720%" y="436" width="0.3584%" height="15" fill="rgb(213,46,39)" fg:x="492" fg:w="2"/><text x="88.4220%" y="446.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (2 samples, 0.36%)</title><rect x="88.1720%" y="452" width="0.3584%" height="15" fill="rgb(239,106,12)" fg:x="492" fg:w="2"/><text x="88.4220%" y="462.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (2 samples, 0.36%)</title><rect x="88.1720%" y="468" width="0.3584%" height="15" fill="rgb(249,229,21)" fg:x="492" fg:w="2"/><text x="88.4220%" y="478.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (2 samples, 0.36%)</title><rect x="88.1720%" y="484" width="0.3584%" height="15" fill="rgb(212,158,3)" fg:x="492" fg:w="2"/><text x="88.4220%" y="494.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (2 samples, 0.36%)</title><rect x="88.1720%" y="500" width="0.3584%" height="15" fill="rgb(253,26,48)" fg:x="492" fg:w="2"/><text x="88.4220%" y="510.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (2 samples, 0.36%)</title><rect x="88.1720%" y="516" width="0.3584%" height="15" fill="rgb(238,178,20)" fg:x="492" fg:w="2"/><text x="88.4220%" y="526.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (2 samples, 0.36%)</title><rect x="88.1720%" y="532" width="0.3584%" height="15" fill="rgb(208,86,15)" fg:x="492" fg:w="2"/><text x="88.4220%" y="542.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (2 samples, 0.36%)</title><rect x="88.1720%" y="548" width="0.3584%" height="15" fill="rgb(239,42,53)" fg:x="492" fg:w="2"/><text x="88.4220%" y="558.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (2 samples, 0.36%)</title><rect x="88.1720%" y="564" width="0.3584%" height="15" fill="rgb(245,226,8)" fg:x="492" fg:w="2"/><text x="88.4220%" y="574.50"></text></g><g><title>my_length_constraint (main.cpp:268) (2 samples, 0.36%)</title><rect x="88.1720%" y="580" width="0.3584%" height="15" fill="rgb(216,176,32)" fg:x="492" fg:w="2"/><text x="88.4220%" y="590.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="596" width="0.1792%" height="15" fill="rgb(231,186,21)" fg:x="493" fg:w="1"/><text x="88.6013%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="612" width="0.1792%" height="15" fill="rgb(205,95,49)" fg:x="493" fg:w="1"/><text x="88.6013%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="628" width="0.1792%" height="15" fill="rgb(217,145,8)" fg:x="493" fg:w="1"/><text x="88.6013%" y="638.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="644" width="0.1792%" height="15" fill="rgb(239,144,48)" fg:x="493" fg:w="1"/><text x="88.6013%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="660" width="0.1792%" height="15" fill="rgb(214,189,23)" fg:x="493" fg:w="1"/><text x="88.6013%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="676" width="0.1792%" height="15" fill="rgb(229,157,17)" fg:x="493" fg:w="1"/><text x="88.6013%" y="686.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="692" width="0.1792%" height="15" fill="rgb(230,5,48)" fg:x="493" fg:w="1"/><text x="88.6013%" y="702.50"></text></g><g><title>at::_ops::to_dtype::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.3513%" y="708" width="0.1792%" height="15" fill="rgb(224,156,48)" fg:x="493" fg:w="1"/><text x="88.6013%" y="718.50"></text></g><g><title>fast_jacobian (main.cpp:44) (1 samples, 0.18%)</title><rect x="88.5305%" y="340" width="0.1792%" height="15" fill="rgb(223,14,29)" fg:x="494" fg:w="1"/><text x="88.7805%" y="350.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="88.5305%" y="356" width="0.1792%" height="15" fill="rgb(229,96,36)" fg:x="494" fg:w="1"/><text x="88.7805%" y="366.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="88.5305%" y="372" width="0.1792%" height="15" fill="rgb(231,102,53)" fg:x="494" fg:w="1"/><text x="88.7805%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (1 samples, 0.18%)</title><rect x="88.5305%" y="388" width="0.1792%" height="15" fill="rgb(210,77,38)" fg:x="494" fg:w="1"/><text x="88.7805%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:381) (1 samples, 0.18%)</title><rect x="88.5305%" y="404" width="0.1792%" height="15" fill="rgb(235,131,6)" fg:x="494" fg:w="1"/><text x="88.7805%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::swap (intrusive_ptr.h:422) (1 samples, 0.18%)</title><rect x="88.5305%" y="420" width="0.1792%" height="15" fill="rgb(252,55,38)" fg:x="494" fg:w="1"/><text x="88.7805%" y="430.50"></text></g><g><title>at::_ops::detach::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="436" width="0.1792%" height="15" fill="rgb(246,38,14)" fg:x="494" fg:w="1"/><text x="88.7805%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="452" width="0.1792%" height="15" fill="rgb(242,27,5)" fg:x="494" fg:w="1"/><text x="88.7805%" y="462.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="468" width="0.1792%" height="15" fill="rgb(228,65,35)" fg:x="494" fg:w="1"/><text x="88.7805%" y="478.50"></text></g><g><title>at::_ops::detach::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="484" width="0.1792%" height="15" fill="rgb(245,93,11)" fg:x="494" fg:w="1"/><text x="88.7805%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::detach(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="500" width="0.1792%" height="15" fill="rgb(213,1,31)" fg:x="494" fg:w="1"/><text x="88.7805%" y="510.50"></text></g><g><title>torch::ADInplaceOrView::detach (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.5305%" y="516" width="0.1792%" height="15" fill="rgb(237,205,14)" fg:x="494" fg:w="1"/><text x="88.7805%" y="526.50"></text></g><g><title>torch::autograd::Engine::compute_dependencies (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.8889%" y="500" width="0.1792%" height="15" fill="rgb(232,118,45)" fg:x="496" fg:w="1"/><text x="89.1389%" y="510.50"></text></g><g><title>std::_Hashtable&lt;torch::autograd::Node*, std::pair&lt;torch::autograd::Node* const, int&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Node* const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Node*&gt;, std::hash&lt;torch::autograd::Node*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.8889%" y="516" width="0.1792%" height="15" fill="rgb(218,5,6)" fg:x="496" fg:w="1"/><text x="89.1389%" y="526.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;torch::autograd::Node* const, int&gt;, false&gt; &gt; &gt;::_M_allocate_buckets (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="88.8889%" y="532" width="0.1792%" height="15" fill="rgb(251,87,51)" fg:x="496" fg:w="1"/><text x="89.1389%" y="542.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="88.8889%" y="548" width="0.1792%" height="15" fill="rgb(207,225,20)" fg:x="496" fg:w="1"/><text x="89.1389%" y="558.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="88.8889%" y="564" width="0.1792%" height="15" fill="rgb(222,78,54)" fg:x="496" fg:w="1"/><text x="89.1389%" y="574.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="89.0681%" y="548" width="0.1792%" height="15" fill="rgb(232,85,16)" fg:x="497" fg:w="1"/><text x="89.3181%" y="558.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::get_state (libc10.so) (1 samples, 0.18%)</title><rect x="89.0681%" y="564" width="0.1792%" height="15" fill="rgb(244,25,33)" fg:x="497" fg:w="1"/><text x="89.3181%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="89.2473%" y="580" width="0.1792%" height="15" fill="rgb(233,24,36)" fg:x="498" fg:w="1"/><text x="89.4973%" y="590.50"></text></g><g><title>at::(anonymous namespace)::CacheEntry::rebuildActiveCallbacks (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="89.2473%" y="596" width="0.1792%" height="15" fill="rgb(253,49,54)" fg:x="498" fg:w="1"/><text x="89.4973%" y="606.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="89.2473%" y="564" width="0.3584%" height="15" fill="rgb(245,12,22)" fg:x="498" fg:w="2"/><text x="89.4973%" y="574.50"></text></g><g><title>std::vector&lt;at::RecordFunctionCallbacksEntry, std::allocator&lt;at::RecordFunctionCallbacksEntry&gt; &gt;::operator= (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="89.4265%" y="580" width="0.1792%" height="15" fill="rgb(253,141,28)" fg:x="499" fg:w="1"/><text x="89.6765%" y="590.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="89.2473%" y="548" width="0.7168%" height="15" fill="rgb(225,207,27)" fg:x="498" fg:w="4"/><text x="89.4973%" y="558.50"></text></g><g><title>at::functorch::setFuncTorchTLS (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="89.6057%" y="564" width="0.3584%" height="15" fill="rgb(220,84,2)" fg:x="500" fg:w="2"/><text x="89.8557%" y="574.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="89.6057%" y="580" width="0.3584%" height="15" fill="rgb(224,37,37)" fg:x="500" fg:w="2"/><text x="89.8557%" y="590.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="89.6057%" y="596" width="0.3584%" height="15" fill="rgb(220,143,18)" fg:x="500" fg:w="2"/><text x="89.8557%" y="606.50"></text></g><g><title>0x7f34ff179ca8 (ld-linux-x86-64.so.2) (2 samples, 0.36%)</title><rect x="89.6057%" y="612" width="0.3584%" height="15" fill="rgb(210,88,33)" fg:x="500" fg:w="2"/><text x="89.8557%" y="622.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (1 samples, 0.18%)</title><rect x="89.9642%" y="628" width="0.1792%" height="15" fill="rgb(219,87,51)" fg:x="502" fg:w="1"/><text x="90.2142%" y="638.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="89.9642%" y="644" width="0.1792%" height="15" fill="rgb(211,7,35)" fg:x="502" fg:w="1"/><text x="90.2142%" y="654.50"></text></g><g><title>0x7f34fee97814 (libc.so.6) (1 samples, 0.18%)</title><rect x="89.9642%" y="660" width="0.1792%" height="15" fill="rgb(232,77,2)" fg:x="502" fg:w="1"/><text x="90.2142%" y="670.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (libtorch_python.so) (2 samples, 0.36%)</title><rect x="89.9642%" y="564" width="0.3584%" height="15" fill="rgb(249,94,25)" fg:x="502" fg:w="2"/><text x="90.2142%" y="574.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="89.9642%" y="580" width="0.3584%" height="15" fill="rgb(215,112,2)" fg:x="502" fg:w="2"/><text x="90.2142%" y="590.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (2 samples, 0.36%)</title><rect x="89.9642%" y="596" width="0.3584%" height="15" fill="rgb(226,115,48)" fg:x="502" fg:w="2"/><text x="90.2142%" y="606.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (2 samples, 0.36%)</title><rect x="89.9642%" y="612" width="0.3584%" height="15" fill="rgb(249,196,10)" fg:x="502" fg:w="2"/><text x="90.2142%" y="622.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="90.1434%" y="628" width="0.1792%" height="15" fill="rgb(237,109,14)" fg:x="503" fg:w="1"/><text x="90.3934%" y="638.50"></text></g><g><title>0x7f34fee97a07 (libc.so.6) (1 samples, 0.18%)</title><rect x="90.1434%" y="644" width="0.1792%" height="15" fill="rgb(217,103,53)" fg:x="503" fg:w="1"/><text x="90.3934%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="596" width="0.1792%" height="15" fill="rgb(244,137,9)" fg:x="504" fg:w="1"/><text x="90.5726%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="612" width="0.1792%" height="15" fill="rgb(227,201,3)" fg:x="504" fg:w="1"/><text x="90.5726%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="628" width="0.1792%" height="15" fill="rgb(243,94,6)" fg:x="504" fg:w="1"/><text x="90.5726%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="644" width="0.1792%" height="15" fill="rgb(235,118,5)" fg:x="504" fg:w="1"/><text x="90.5726%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="660" width="0.1792%" height="15" fill="rgb(247,10,30)" fg:x="504" fg:w="1"/><text x="90.5726%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="676" width="0.1792%" height="15" fill="rgb(205,26,28)" fg:x="504" fg:w="1"/><text x="90.5726%" y="686.50"></text></g><g><title>at::TensorIteratorBase::~TensorIteratorBase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.3226%" y="692" width="0.1792%" height="15" fill="rgb(206,99,35)" fg:x="504" fg:w="1"/><text x="90.5726%" y="702.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="90.3226%" y="564" width="0.3584%" height="15" fill="rgb(238,130,40)" fg:x="504" fg:w="2"/><text x="90.5726%" y="574.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="90.3226%" y="580" width="0.3584%" height="15" fill="rgb(224,126,31)" fg:x="504" fg:w="2"/><text x="90.5726%" y="590.50"></text></g><g><title>torch::autograd::(anonymous namespace)::can_accumulate_inplace (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.5018%" y="596" width="0.1792%" height="15" fill="rgb(254,105,17)" fg:x="505" fg:w="1"/><text x="90.7518%" y="606.50"></text></g><g><title>c10::impl::dispatch_mode_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="90.5018%" y="612" width="0.1792%" height="15" fill="rgb(216,87,36)" fg:x="505" fg:w="1"/><text x="90.7518%" y="622.50"></text></g><g><title>c10::impl::TorchDispatchModeTLS::stack_len (libc10.so) (1 samples, 0.18%)</title><rect x="90.5018%" y="628" width="0.1792%" height="15" fill="rgb(240,21,12)" fg:x="505" fg:w="1"/><text x="90.7518%" y="638.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="90.5018%" y="644" width="0.1792%" height="15" fill="rgb(245,192,34)" fg:x="505" fg:w="1"/><text x="90.7518%" y="654.50"></text></g><g><title>0x7f34ff17a070 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="90.5018%" y="660" width="0.1792%" height="15" fill="rgb(226,100,49)" fg:x="505" fg:w="1"/><text x="90.7518%" y="670.50"></text></g><g><title>torch::autograd::generated::AddBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.6810%" y="580" width="0.1792%" height="15" fill="rgb(245,188,27)" fg:x="506" fg:w="1"/><text x="90.9310%" y="590.50"></text></g><g><title>std::__find_if&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, __gnu_cxx::__ops::_Iter_pred&lt;torch::autograd::Node::task_should_compute_output(std::initializer_list&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;) const::{lambda(std::pair&lt;unsigned long, unsigned long&gt;)#1}&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.6810%" y="596" width="0.1792%" height="15" fill="rgb(212,170,8)" fg:x="506" fg:w="1"/><text x="90.9310%" y="606.50"></text></g><g><title>torch::autograd::Node::task_should_compute_output(std::initializer_list&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;) const::{lambda(std::pair&lt;unsigned long, unsigned long&gt;)#1}::operator() const (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.6810%" y="612" width="0.1792%" height="15" fill="rgb(217,113,29)" fg:x="506" fg:w="1"/><text x="90.9310%" y="622.50"></text></g><g><title>torch::autograd::SavedVariable::unpack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="90.8602%" y="596" width="0.1792%" height="15" fill="rgb(237,30,3)" fg:x="507" fg:w="1"/><text x="91.1102%" y="606.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="90.8602%" y="580" width="0.3584%" height="15" fill="rgb(227,19,28)" fg:x="507" fg:w="2"/><text x="91.1102%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.0394%" y="596" width="0.1792%" height="15" fill="rgb(239,172,45)" fg:x="508" fg:w="1"/><text x="91.2894%" y="606.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="91.0394%" y="612" width="0.1792%" height="15" fill="rgb(254,55,39)" fg:x="508" fg:w="1"/><text x="91.2894%" y="622.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="91.0394%" y="628" width="0.1792%" height="15" fill="rgb(249,208,12)" fg:x="508" fg:w="1"/><text x="91.2894%" y="638.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (1 samples, 0.18%)</title><rect x="91.0394%" y="644" width="0.1792%" height="15" fill="rgb(240,52,13)" fg:x="508" fg:w="1"/><text x="91.2894%" y="654.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="91.0394%" y="660" width="0.1792%" height="15" fill="rgb(252,149,13)" fg:x="508" fg:w="1"/><text x="91.2894%" y="670.50"></text></g><g><title>0x7f34fee97a07 (libc.so.6) (1 samples, 0.18%)</title><rect x="91.0394%" y="676" width="0.1792%" height="15" fill="rgb(232,81,48)" fg:x="508" fg:w="1"/><text x="91.2894%" y="686.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.2186%" y="644" width="0.1792%" height="15" fill="rgb(222,144,2)" fg:x="509" fg:w="1"/><text x="91.4686%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.2186%" y="660" width="0.1792%" height="15" fill="rgb(216,81,32)" fg:x="509" fg:w="1"/><text x="91.4686%" y="670.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (9 samples, 1.61%)</title><rect x="89.9642%" y="548" width="1.6129%" height="15" fill="rgb(244,78,51)" fg:x="502" fg:w="9"/><text x="90.2142%" y="558.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (5 samples, 0.90%)</title><rect x="90.6810%" y="564" width="0.8961%" height="15" fill="rgb(217,66,21)" fg:x="506" fg:w="5"/><text x="90.9310%" y="574.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="91.2186%" y="580" width="0.3584%" height="15" fill="rgb(247,101,42)" fg:x="509" fg:w="2"/><text x="91.4686%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="91.2186%" y="596" width="0.3584%" height="15" fill="rgb(227,81,39)" fg:x="509" fg:w="2"/><text x="91.4686%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="91.2186%" y="612" width="0.3584%" height="15" fill="rgb(220,223,44)" fg:x="509" fg:w="2"/><text x="91.4686%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="91.2186%" y="628" width="0.3584%" height="15" fill="rgb(205,218,2)" fg:x="509" fg:w="2"/><text x="91.4686%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::checked_cast_variable (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.3978%" y="644" width="0.1792%" height="15" fill="rgb(212,207,28)" fg:x="510" fg:w="1"/><text x="91.6478%" y="654.50"></text></g><g><title>c10::ivalue::Future::markCompleted (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.5771%" y="564" width="0.1792%" height="15" fill="rgb(224,12,41)" fg:x="511" fg:w="1"/><text x="91.8271%" y="574.50"></text></g><g><title>__pthread_mutex_unlock (libc.so.6) (1 samples, 0.18%)</title><rect x="91.5771%" y="580" width="0.1792%" height="15" fill="rgb(216,118,12)" fg:x="511" fg:w="1"/><text x="91.8271%" y="590.50"></text></g><g><title>fast_jacobian (main.cpp:47) (18 samples, 3.23%)</title><rect x="88.7097%" y="340" width="3.2258%" height="15" fill="rgb(252,97,46)" fg:x="495" fg:w="18"/><text x="88.9597%" y="350.50">fas..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (18 samples, 3.23%)</title><rect x="88.7097%" y="356" width="3.2258%" height="15" fill="rgb(244,206,19)" fg:x="495" fg:w="18"/><text x="88.9597%" y="366.50">at:..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (18 samples, 3.23%)</title><rect x="88.7097%" y="372" width="3.2258%" height="15" fill="rgb(231,84,31)" fg:x="495" fg:w="18"/><text x="88.9597%" y="382.50">c10..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (18 samples, 3.23%)</title><rect x="88.7097%" y="388" width="3.2258%" height="15" fill="rgb(244,133,0)" fg:x="495" fg:w="18"/><text x="88.9597%" y="398.50">c10..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="404" width="3.2258%" height="15" fill="rgb(223,15,50)" fg:x="495" fg:w="18"/><text x="88.9597%" y="414.50">at:..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="420" width="3.2258%" height="15" fill="rgb(250,118,49)" fg:x="495" fg:w="18"/><text x="88.9597%" y="430.50">tor..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="436" width="3.2258%" height="15" fill="rgb(248,25,38)" fg:x="495" fg:w="18"/><text x="88.9597%" y="446.50">tor..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="452" width="3.2258%" height="15" fill="rgb(215,70,14)" fg:x="495" fg:w="18"/><text x="88.9597%" y="462.50">tor..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="468" width="3.2258%" height="15" fill="rgb(215,28,15)" fg:x="495" fg:w="18"/><text x="88.9597%" y="478.50">tor..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (18 samples, 3.23%)</title><rect x="88.7097%" y="484" width="3.2258%" height="15" fill="rgb(243,6,28)" fg:x="495" fg:w="18"/><text x="88.9597%" y="494.50">tor..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (16 samples, 2.87%)</title><rect x="89.0681%" y="500" width="2.8674%" height="15" fill="rgb(222,130,1)" fg:x="497" fg:w="16"/><text x="89.3181%" y="510.50">to..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="89.0681%" y="516" width="2.8674%" height="15" fill="rgb(236,166,44)" fg:x="497" fg:w="16"/><text x="89.3181%" y="526.50">to..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (16 samples, 2.87%)</title><rect x="89.0681%" y="532" width="2.8674%" height="15" fill="rgb(221,108,14)" fg:x="497" fg:w="16"/><text x="89.3181%" y="542.50">to..</text></g><g><title>torch::autograd::GraphTask::mark_as_completed_and_run_post_processing (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="91.5771%" y="548" width="0.3584%" height="15" fill="rgb(252,3,45)" fg:x="511" fg:w="2"/><text x="91.8271%" y="558.50"></text></g><g><title>torch::autograd::GraphTask::exec_post_processing (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.7563%" y="564" width="0.1792%" height="15" fill="rgb(237,68,30)" fg:x="512" fg:w="1"/><text x="92.0063%" y="574.50"></text></g><g><title>at::ThreadLocalState::ThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.7563%" y="580" width="0.1792%" height="15" fill="rgb(211,79,22)" fg:x="512" fg:w="1"/><text x="92.0063%" y="590.50"></text></g><g><title>rattle_step (main.cpp:120) (22 samples, 3.94%)</title><rect x="88.1720%" y="308" width="3.9427%" height="15" fill="rgb(252,185,21)" fg:x="492" fg:w="22"/><text x="88.4220%" y="318.50">ratt..</text></g><g><title>at::Tensor::t (TensorBody.h:3678) (22 samples, 3.94%)</title><rect x="88.1720%" y="324" width="3.9427%" height="15" fill="rgb(225,189,26)" fg:x="492" fg:w="22"/><text x="88.4220%" y="334.50">at::..</text></g><g><title>fast_jacobian (main.cpp:54) (1 samples, 0.18%)</title><rect x="91.9355%" y="340" width="0.1792%" height="15" fill="rgb(241,30,40)" fg:x="513" fg:w="1"/><text x="92.1855%" y="350.50"></text></g><g><title>at::_ops::stack::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="356" width="0.1792%" height="15" fill="rgb(235,215,44)" fg:x="513" fg:w="1"/><text x="92.1855%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="372" width="0.1792%" height="15" fill="rgb(205,8,29)" fg:x="513" fg:w="1"/><text x="92.1855%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="388" width="0.1792%" height="15" fill="rgb(241,137,42)" fg:x="513" fg:w="1"/><text x="92.1855%" y="398.50"></text></g><g><title>at::_ops::stack::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="404" width="0.1792%" height="15" fill="rgb(237,155,2)" fg:x="513" fg:w="1"/><text x="92.1855%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__stack(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="420" width="0.1792%" height="15" fill="rgb(245,29,42)" fg:x="513" fg:w="1"/><text x="92.1855%" y="430.50"></text></g><g><title>at::native::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="436" width="0.1792%" height="15" fill="rgb(234,101,35)" fg:x="513" fg:w="1"/><text x="92.1855%" y="446.50"></text></g><g><title>at::_ops::cat::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="452" width="0.1792%" height="15" fill="rgb(228,64,37)" fg:x="513" fg:w="1"/><text x="92.1855%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long), &amp;at::(anonymous namespace)::wrapper_CPU_cat(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::IListRef&lt;at::Tensor&gt; const&amp;, long&gt; &gt;, at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="468" width="0.1792%" height="15" fill="rgb(217,214,36)" fg:x="513" fg:w="1"/><text x="92.1855%" y="478.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_cat (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="484" width="0.1792%" height="15" fill="rgb(243,70,3)" fg:x="513" fg:w="1"/><text x="92.1855%" y="494.50"></text></g><g><title>at::meta::structured_cat::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="500" width="0.1792%" height="15" fill="rgb(253,158,52)" fg:x="513" fg:w="1"/><text x="92.1855%" y="510.50"></text></g><g><title>at::(anonymous namespace)::structured_cat_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="516" width="0.1792%" height="15" fill="rgb(234,111,54)" fg:x="513" fg:w="1"/><text x="92.1855%" y="526.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="532" width="0.1792%" height="15" fill="rgb(217,70,32)" fg:x="513" fg:w="1"/><text x="92.1855%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="548" width="0.1792%" height="15" fill="rgb(234,18,33)" fg:x="513" fg:w="1"/><text x="92.1855%" y="558.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="564" width="0.1792%" height="15" fill="rgb(234,12,49)" fg:x="513" fg:w="1"/><text x="92.1855%" y="574.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="580" width="0.1792%" height="15" fill="rgb(236,10,21)" fg:x="513" fg:w="1"/><text x="92.1855%" y="590.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="596" width="0.1792%" height="15" fill="rgb(248,182,45)" fg:x="513" fg:w="1"/><text x="92.1855%" y="606.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="612" width="0.1792%" height="15" fill="rgb(217,95,36)" fg:x="513" fg:w="1"/><text x="92.1855%" y="622.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="628" width="0.1792%" height="15" fill="rgb(212,110,31)" fg:x="513" fg:w="1"/><text x="92.1855%" y="638.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="91.9355%" y="644" width="0.1792%" height="15" fill="rgb(206,32,53)" fg:x="513" fg:w="1"/><text x="92.1855%" y="654.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="91.9355%" y="660" width="0.1792%" height="15" fill="rgb(246,141,37)" fg:x="513" fg:w="1"/><text x="92.1855%" y="670.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="91.9355%" y="676" width="0.1792%" height="15" fill="rgb(219,16,7)" fg:x="513" fg:w="1"/><text x="92.1855%" y="686.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (1 samples, 0.18%)</title><rect x="91.9355%" y="692" width="0.1792%" height="15" fill="rgb(230,205,45)" fg:x="513" fg:w="1"/><text x="92.1855%" y="702.50"></text></g><g><title>0x7f34fee9691b (libc.so.6) (1 samples, 0.18%)</title><rect x="91.9355%" y="708" width="0.1792%" height="15" fill="rgb(231,43,49)" fg:x="513" fg:w="1"/><text x="92.1855%" y="718.50"></text></g><g><title>0x7f34fee9673a (libc.so.6) (1 samples, 0.18%)</title><rect x="91.9355%" y="724" width="0.1792%" height="15" fill="rgb(212,106,34)" fg:x="513" fg:w="1"/><text x="92.1855%" y="734.50"></text></g><g><title>at::_ops::linalg_lu_factor_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="644" width="0.1792%" height="15" fill="rgb(206,83,17)" fg:x="514" fg:w="1"/><text x="92.3647%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out(at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="660" width="0.1792%" height="15" fill="rgb(244,154,49)" fg:x="514" fg:w="1"/><text x="92.3647%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_factor_ex_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="676" width="0.1792%" height="15" fill="rgb(244,149,49)" fg:x="514" fg:w="1"/><text x="92.3647%" y="686.50"></text></g><g><title>at::native::structured_linalg_lu_factor_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="692" width="0.1792%" height="15" fill="rgb(227,134,18)" fg:x="514" fg:w="1"/><text x="92.3647%" y="702.50"></text></g><g><title>at::native::(anonymous namespace)::lu_factor_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="708" width="0.1792%" height="15" fill="rgb(237,116,36)" fg:x="514" fg:w="1"/><text x="92.3647%" y="718.50"></text></g><g><title>at::native::lapackLu&lt;double&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="724" width="0.1792%" height="15" fill="rgb(205,129,40)" fg:x="514" fg:w="1"/><text x="92.3647%" y="734.50"></text></g><g><title>mkl_lapack__dgetrf_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="740" width="0.1792%" height="15" fill="rgb(236,178,4)" fg:x="514" fg:w="1"/><text x="92.3647%" y="750.50"></text></g><g><title>mkl_lapack_dgetrf (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="756" width="0.1792%" height="15" fill="rgb(251,76,53)" fg:x="514" fg:w="1"/><text x="92.3647%" y="766.50"></text></g><g><title>mkl_lapack_xdgetrf_local (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="772" width="0.1792%" height="15" fill="rgb(242,92,40)" fg:x="514" fg:w="1"/><text x="92.3647%" y="782.50"></text></g><g><title>mkl_lapack_xdgetrf_local (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="788" width="0.1792%" height="15" fill="rgb(209,45,30)" fg:x="514" fg:w="1"/><text x="92.3647%" y="798.50"></text></g><g><title>mkl_lapack_dgetf2 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="804" width="0.1792%" height="15" fill="rgb(218,157,36)" fg:x="514" fg:w="1"/><text x="92.3647%" y="814.50"></text></g><g><title>mkl_blas_avx512_xdgemv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="820" width="0.1792%" height="15" fill="rgb(222,186,16)" fg:x="514" fg:w="1"/><text x="92.3647%" y="830.50"></text></g><g><title>mkl_blas_avx512_dgemv_n_intrinsics (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.1147%" y="836" width="0.1792%" height="15" fill="rgb(254,72,35)" fg:x="514" fg:w="1"/><text x="92.3647%" y="846.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="532" width="0.3584%" height="15" fill="rgb(224,25,35)" fg:x="514" fg:w="2"/><text x="92.3647%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="548" width="0.3584%" height="15" fill="rgb(206,135,52)" fg:x="514" fg:w="2"/><text x="92.3647%" y="558.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="564" width="0.3584%" height="15" fill="rgb(229,174,47)" fg:x="514" fg:w="2"/><text x="92.3647%" y="574.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="580" width="0.3584%" height="15" fill="rgb(242,184,21)" fg:x="514" fg:w="2"/><text x="92.3647%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="596" width="0.3584%" height="15" fill="rgb(213,22,45)" fg:x="514" fg:w="2"/><text x="92.3647%" y="606.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="612" width="0.3584%" height="15" fill="rgb(237,81,54)" fg:x="514" fg:w="2"/><text x="92.3647%" y="622.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.1147%" y="628" width="0.3584%" height="15" fill="rgb(248,177,18)" fg:x="514" fg:w="2"/><text x="92.3647%" y="638.50"></text></g><g><title>at::_ops::linalg_lu_solve_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="644" width="0.1792%" height="15" fill="rgb(254,31,16)" fg:x="515" fg:w="1"/><text x="92.5439%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_solve_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="660" width="0.1792%" height="15" fill="rgb(235,20,31)" fg:x="515" fg:w="1"/><text x="92.5439%" y="670.50"></text></g><g><title>at::native::structured_linalg_lu_solve_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="676" width="0.1792%" height="15" fill="rgb(240,56,43)" fg:x="515" fg:w="1"/><text x="92.5439%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::lu_solve_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="692" width="0.1792%" height="15" fill="rgb(237,197,51)" fg:x="515" fg:w="1"/><text x="92.5439%" y="702.50"></text></g><g><title>at::native::lapackLuSolve&lt;double&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="708" width="0.1792%" height="15" fill="rgb(241,162,44)" fg:x="515" fg:w="1"/><text x="92.5439%" y="718.50"></text></g><g><title>mkl_lapack__dgetrs_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="724" width="0.1792%" height="15" fill="rgb(224,23,20)" fg:x="515" fg:w="1"/><text x="92.5439%" y="734.50"></text></g><g><title>mkl_lapack_dgetrs (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="740" width="0.1792%" height="15" fill="rgb(250,109,34)" fg:x="515" fg:w="1"/><text x="92.5439%" y="750.50"></text></g><g><title>mkl_blas_dtrsm (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="756" width="0.1792%" height="15" fill="rgb(214,175,50)" fg:x="515" fg:w="1"/><text x="92.5439%" y="766.50"></text></g><g><title>omp_driver_recursive (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.2939%" y="772" width="0.1792%" height="15" fill="rgb(213,182,5)" fg:x="515" fg:w="1"/><text x="92.5439%" y="782.50"></text></g><g><title>0x7f34c2a177e9 (libgomp-a34b3233.so.1) (1 samples, 0.18%)</title><rect x="92.2939%" y="788" width="0.1792%" height="15" fill="rgb(209,199,19)" fg:x="515" fg:w="1"/><text x="92.5439%" y="798.50"></text></g><g><title>0x7f34c2a18c99 (libgomp-a34b3233.so.1) (1 samples, 0.18%)</title><rect x="92.2939%" y="804" width="0.1792%" height="15" fill="rgb(236,224,42)" fg:x="515" fg:w="1"/><text x="92.5439%" y="814.50"></text></g><g><title>rattle_step (main.cpp:78) (3 samples, 0.54%)</title><rect x="92.1147%" y="308" width="0.5376%" height="15" fill="rgb(246,226,29)" fg:x="514" fg:w="3"/><text x="92.3647%" y="318.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="324" width="0.5376%" height="15" fill="rgb(227,223,11)" fg:x="514" fg:w="3"/><text x="92.3647%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="340" width="0.5376%" height="15" fill="rgb(219,7,51)" fg:x="514" fg:w="3"/><text x="92.3647%" y="350.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="356" width="0.5376%" height="15" fill="rgb(245,167,10)" fg:x="514" fg:w="3"/><text x="92.3647%" y="366.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="372" width="0.5376%" height="15" fill="rgb(237,224,16)" fg:x="514" fg:w="3"/><text x="92.3647%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="388" width="0.5376%" height="15" fill="rgb(226,132,13)" fg:x="514" fg:w="3"/><text x="92.3647%" y="398.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="404" width="0.5376%" height="15" fill="rgb(214,140,3)" fg:x="514" fg:w="3"/><text x="92.3647%" y="414.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="420" width="0.5376%" height="15" fill="rgb(221,177,4)" fg:x="514" fg:w="3"/><text x="92.3647%" y="430.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="436" width="0.5376%" height="15" fill="rgb(238,139,3)" fg:x="514" fg:w="3"/><text x="92.3647%" y="446.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="452" width="0.5376%" height="15" fill="rgb(216,17,39)" fg:x="514" fg:w="3"/><text x="92.3647%" y="462.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="468" width="0.5376%" height="15" fill="rgb(238,120,9)" fg:x="514" fg:w="3"/><text x="92.3647%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="484" width="0.5376%" height="15" fill="rgb(244,92,53)" fg:x="514" fg:w="3"/><text x="92.3647%" y="494.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="500" width="0.5376%" height="15" fill="rgb(224,148,33)" fg:x="514" fg:w="3"/><text x="92.3647%" y="510.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.1147%" y="516" width="0.5376%" height="15" fill="rgb(243,6,36)" fg:x="514" fg:w="3"/><text x="92.3647%" y="526.50"></text></g><g><title>at::_ops::zero_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.4731%" y="532" width="0.1792%" height="15" fill="rgb(230,102,11)" fg:x="516" fg:w="1"/><text x="92.7231%" y="542.50"></text></g><g><title>at::native::zero_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.4731%" y="548" width="0.1792%" height="15" fill="rgb(234,148,36)" fg:x="516" fg:w="1"/><text x="92.7231%" y="558.50"></text></g><g><title>0x7f34fefa4c3a (libc.so.6) (1 samples, 0.18%)</title><rect x="92.4731%" y="564" width="0.1792%" height="15" fill="rgb(251,153,25)" fg:x="516" fg:w="1"/><text x="92.7231%" y="574.50"></text></g><g><title>at::Tensor::operator[] (TensorBody.h:322) (1 samples, 0.18%)</title><rect x="92.6523%" y="596" width="0.1792%" height="15" fill="rgb(215,129,8)" fg:x="517" fg:w="1"/><text x="92.9023%" y="606.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (1 samples, 0.18%)</title><rect x="92.6523%" y="612" width="0.1792%" height="15" fill="rgb(224,128,35)" fg:x="517" fg:w="1"/><text x="92.9023%" y="622.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (1 samples, 0.18%)</title><rect x="92.6523%" y="628" width="0.1792%" height="15" fill="rgb(237,56,52)" fg:x="517" fg:w="1"/><text x="92.9023%" y="638.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (1 samples, 0.18%)</title><rect x="92.6523%" y="644" width="0.1792%" height="15" fill="rgb(234,213,19)" fg:x="517" fg:w="1"/><text x="92.9023%" y="654.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="660" width="0.1792%" height="15" fill="rgb(252,82,23)" fg:x="517" fg:w="1"/><text x="92.9023%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="676" width="0.1792%" height="15" fill="rgb(254,201,21)" fg:x="517" fg:w="1"/><text x="92.9023%" y="686.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="692" width="0.1792%" height="15" fill="rgb(250,186,11)" fg:x="517" fg:w="1"/><text x="92.9023%" y="702.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="708" width="0.1792%" height="15" fill="rgb(211,174,5)" fg:x="517" fg:w="1"/><text x="92.9023%" y="718.50"></text></g><g><title>torch::autograd::impl::gradient_edge (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="724" width="0.1792%" height="15" fill="rgb(214,121,10)" fg:x="517" fg:w="1"/><text x="92.9023%" y="734.50"></text></g><g><title>torch::autograd::impl::grad_accumulator (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.6523%" y="740" width="0.1792%" height="15" fill="rgb(241,66,2)" fg:x="517" fg:w="1"/><text x="92.9023%" y="750.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="740" width="0.1792%" height="15" fill="rgb(220,167,19)" fg:x="518" fg:w="1"/><text x="93.0815%" y="750.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="756" width="0.1792%" height="15" fill="rgb(231,54,50)" fg:x="518" fg:w="1"/><text x="93.0815%" y="766.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="772" width="0.1792%" height="15" fill="rgb(239,217,53)" fg:x="518" fg:w="1"/><text x="93.0815%" y="782.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="788" width="0.1792%" height="15" fill="rgb(248,8,0)" fg:x="518" fg:w="1"/><text x="93.0815%" y="798.50"></text></g><g><title>at::Tensor::as_strided_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="804" width="0.1792%" height="15" fill="rgb(229,118,37)" fg:x="518" fg:w="1"/><text x="93.0815%" y="814.50"></text></g><g><title>at::_ops::as_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="820" width="0.1792%" height="15" fill="rgb(253,223,43)" fg:x="518" fg:w="1"/><text x="93.0815%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="836" width="0.1792%" height="15" fill="rgb(211,77,36)" fg:x="518" fg:w="1"/><text x="93.0815%" y="846.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__as_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="852" width="0.1792%" height="15" fill="rgb(219,3,53)" fg:x="518" fg:w="1"/><text x="93.0815%" y="862.50"></text></g><g><title>at::native::as_strided_tensorimpl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="868" width="0.1792%" height="15" fill="rgb(244,45,42)" fg:x="518" fg:w="1"/><text x="93.0815%" y="878.50"></text></g><g><title>at::native::setStrided&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="884" width="0.1792%" height="15" fill="rgb(225,95,27)" fg:x="518" fg:w="1"/><text x="93.0815%" y="894.50"></text></g><g><title>at::native::checkInBoundsForStorage&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="92.8315%" y="900" width="0.1792%" height="15" fill="rgb(207,74,8)" fg:x="518" fg:w="1"/><text x="93.0815%" y="910.50"></text></g><g><title>at::_ops::select_int::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.8315%" y="692" width="0.3584%" height="15" fill="rgb(243,63,36)" fg:x="518" fg:w="2"/><text x="93.0815%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::ADInplaceOrView::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.8315%" y="708" width="0.3584%" height="15" fill="rgb(211,180,12)" fg:x="518" fg:w="2"/><text x="93.0815%" y="718.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::select_int (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="92.8315%" y="724" width="0.3584%" height="15" fill="rgb(254,166,49)" fg:x="518" fg:w="2"/><text x="93.0815%" y="734.50"></text></g><g><title>torch::autograd::as_view (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.0108%" y="740" width="0.1792%" height="15" fill="rgb(205,19,0)" fg:x="519" fg:w="1"/><text x="93.2608%" y="750.50"></text></g><g><title>torch::autograd::make_variable_differentiable_view (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.0108%" y="756" width="0.1792%" height="15" fill="rgb(224,172,32)" fg:x="519" fg:w="1"/><text x="93.2608%" y="766.50"></text></g><g><title>at::Tensor::select (TensorBody.h:3308) (3 samples, 0.54%)</title><rect x="92.8315%" y="596" width="0.5376%" height="15" fill="rgb(254,136,30)" fg:x="518" fg:w="3"/><text x="93.0815%" y="606.50"></text></g><g><title>c10::SymInt::~SymInt (SymInt.h:118) (3 samples, 0.54%)</title><rect x="92.8315%" y="612" width="0.5376%" height="15" fill="rgb(246,19,35)" fg:x="518" fg:w="3"/><text x="93.0815%" y="622.50"></text></g><g><title>c10::SymInt::release_ (SymInt.h:95) (3 samples, 0.54%)</title><rect x="92.8315%" y="628" width="0.5376%" height="15" fill="rgb(219,24,36)" fg:x="518" fg:w="3"/><text x="93.0815%" y="638.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.8315%" y="644" width="0.5376%" height="15" fill="rgb(251,55,1)" fg:x="518" fg:w="3"/><text x="93.0815%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.8315%" y="660" width="0.5376%" height="15" fill="rgb(218,117,39)" fg:x="518" fg:w="3"/><text x="93.0815%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="92.8315%" y="676" width="0.5376%" height="15" fill="rgb(248,169,11)" fg:x="518" fg:w="3"/><text x="93.0815%" y="686.50"></text></g><g><title>torch::autograd::AutogradMeta::requires_grad (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.1900%" y="692" width="0.1792%" height="15" fill="rgb(244,40,44)" fg:x="520" fg:w="1"/><text x="93.4400%" y="702.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="596" width="0.1792%" height="15" fill="rgb(234,62,37)" fg:x="521" fg:w="1"/><text x="93.6192%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="612" width="0.1792%" height="15" fill="rgb(207,117,42)" fg:x="521" fg:w="1"/><text x="93.6192%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="628" width="0.1792%" height="15" fill="rgb(213,43,2)" fg:x="521" fg:w="1"/><text x="93.6192%" y="638.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="644" width="0.1792%" height="15" fill="rgb(244,202,51)" fg:x="521" fg:w="1"/><text x="93.6192%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="660" width="0.1792%" height="15" fill="rgb(253,174,46)" fg:x="521" fg:w="1"/><text x="93.6192%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="676" width="0.1792%" height="15" fill="rgb(251,23,1)" fg:x="521" fg:w="1"/><text x="93.6192%" y="686.50"></text></g><g><title>at::meta::structured_pow_Tensor_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="692" width="0.1792%" height="15" fill="rgb(253,26,1)" fg:x="521" fg:w="1"/><text x="93.6192%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_output_borrowing_argument_owning_unary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="708" width="0.1792%" height="15" fill="rgb(216,89,31)" fg:x="521" fg:w="1"/><text x="93.6192%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="724" width="0.1792%" height="15" fill="rgb(209,109,5)" fg:x="521" fg:w="1"/><text x="93.6192%" y="734.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="740" width="0.1792%" height="15" fill="rgb(229,63,13)" fg:x="521" fg:w="1"/><text x="93.6192%" y="750.50"></text></g><g><title>at::(anonymous namespace)::structured_pow_Tensor_Scalar_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="756" width="0.1792%" height="15" fill="rgb(238,137,54)" fg:x="521" fg:w="1"/><text x="93.6192%" y="766.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="772" width="0.1792%" height="15" fill="rgb(228,1,9)" fg:x="521" fg:w="1"/><text x="93.6192%" y="782.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="788" width="0.1792%" height="15" fill="rgb(249,120,48)" fg:x="521" fg:w="1"/><text x="93.6192%" y="798.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="804" width="0.1792%" height="15" fill="rgb(209,72,36)" fg:x="521" fg:w="1"/><text x="93.6192%" y="814.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="820" width="0.1792%" height="15" fill="rgb(247,98,49)" fg:x="521" fg:w="1"/><text x="93.6192%" y="830.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="836" width="0.1792%" height="15" fill="rgb(233,75,36)" fg:x="521" fg:w="1"/><text x="93.6192%" y="846.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="852" width="0.1792%" height="15" fill="rgb(225,14,24)" fg:x="521" fg:w="1"/><text x="93.6192%" y="862.50"></text></g><g><title>at::detail::make_tensor_base&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKeySet&amp;, caffe2::TypeMeta&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.3692%" y="868" width="0.1792%" height="15" fill="rgb(237,193,20)" fg:x="521" fg:w="1"/><text x="93.6192%" y="878.50"></text></g><g><title>operator new (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="93.3692%" y="884" width="0.1792%" height="15" fill="rgb(239,122,19)" fg:x="521" fg:w="1"/><text x="93.6192%" y="894.50"></text></g><g><title>malloc (libc.so.6) (1 samples, 0.18%)</title><rect x="93.3692%" y="900" width="0.1792%" height="15" fill="rgb(231,220,10)" fg:x="521" fg:w="1"/><text x="93.6192%" y="910.50"></text></g><g><title>0x7f34fee99260 (libc.so.6) (1 samples, 0.18%)</title><rect x="93.3692%" y="916" width="0.1792%" height="15" fill="rgb(220,66,15)" fg:x="521" fg:w="1"/><text x="93.6192%" y="926.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="93.5484%" y="596" width="0.1792%" height="15" fill="rgb(215,171,52)" fg:x="522" fg:w="1"/><text x="93.7984%" y="606.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="93.5484%" y="612" width="0.1792%" height="15" fill="rgb(241,169,50)" fg:x="522" fg:w="1"/><text x="93.7984%" y="622.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (1 samples, 0.18%)</title><rect x="93.5484%" y="628" width="0.1792%" height="15" fill="rgb(236,189,0)" fg:x="522" fg:w="1"/><text x="93.7984%" y="638.50"></text></g><g><title>fast_jacobian (TensorBody.h:92) (7 samples, 1.25%)</title><rect x="92.6523%" y="340" width="1.2545%" height="15" fill="rgb(217,147,20)" fg:x="517" fg:w="7"/><text x="92.9023%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (7 samples, 1.25%)</title><rect x="92.6523%" y="356" width="1.2545%" height="15" fill="rgb(206,188,39)" fg:x="517" fg:w="7"/><text x="92.9023%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (7 samples, 1.25%)</title><rect x="92.6523%" y="372" width="1.2545%" height="15" fill="rgb(227,118,25)" fg:x="517" fg:w="7"/><text x="92.9023%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (7 samples, 1.25%)</title><rect x="92.6523%" y="388" width="1.2545%" height="15" fill="rgb(248,171,40)" fg:x="517" fg:w="7"/><text x="92.9023%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:273) (7 samples, 1.25%)</title><rect x="92.6523%" y="404" width="1.2545%" height="15" fill="rgb(251,90,54)" fg:x="517" fg:w="7"/><text x="92.9023%" y="414.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_invoke (std_function.h:291) (7 samples, 1.25%)</title><rect x="92.6523%" y="420" width="1.2545%" height="15" fill="rgb(234,11,46)" fg:x="517" fg:w="7"/><text x="92.9023%" y="430.50"></text></g><g><title>std::__invoke_r&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:116) (7 samples, 1.25%)</title><rect x="92.6523%" y="436" width="1.2545%" height="15" fill="rgb(229,134,13)" fg:x="517" fg:w="7"/><text x="92.9023%" y="446.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;&amp;, at::Tensor&gt; (invoke.h:61) (7 samples, 1.25%)</title><rect x="92.6523%" y="452" width="1.2545%" height="15" fill="rgb(223,129,3)" fg:x="517" fg:w="7"/><text x="92.9023%" y="462.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::operator()&lt;at::Tensor, at::Tensor&gt; (functional:505) (7 samples, 1.25%)</title><rect x="92.6523%" y="468" width="1.2545%" height="15" fill="rgb(221,124,13)" fg:x="517" fg:w="7"/><text x="92.9023%" y="478.50"></text></g><g><title>std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt;::__call&lt;at::Tensor, at::Tensor&amp;&amp;, (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3&gt; (functional:422) (7 samples, 1.25%)</title><rect x="92.6523%" y="484" width="1.2545%" height="15" fill="rgb(234,3,18)" fg:x="517" fg:w="7"/><text x="92.9023%" y="494.50"></text></g><g><title>std::__invoke&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:97) (7 samples, 1.25%)</title><rect x="92.6523%" y="500" width="1.2545%" height="15" fill="rgb(249,199,20)" fg:x="517" fg:w="7"/><text x="92.9023%" y="510.50"></text></g><g><title>std::__invoke_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, int, int), at::Tensor, at::Tensor&amp;, int&amp;, int&amp;&gt; (invoke.h:61) (7 samples, 1.25%)</title><rect x="92.6523%" y="516" width="1.2545%" height="15" fill="rgb(224,134,6)" fg:x="517" fg:w="7"/><text x="92.9023%" y="526.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (7 samples, 1.25%)</title><rect x="92.6523%" y="532" width="1.2545%" height="15" fill="rgb(254,83,26)" fg:x="517" fg:w="7"/><text x="92.9023%" y="542.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (7 samples, 1.25%)</title><rect x="92.6523%" y="548" width="1.2545%" height="15" fill="rgb(217,88,9)" fg:x="517" fg:w="7"/><text x="92.9023%" y="558.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (7 samples, 1.25%)</title><rect x="92.6523%" y="564" width="1.2545%" height="15" fill="rgb(225,73,2)" fg:x="517" fg:w="7"/><text x="92.9023%" y="574.50"></text></g><g><title>my_length_constraint (main.cpp:268) (7 samples, 1.25%)</title><rect x="92.6523%" y="580" width="1.2545%" height="15" fill="rgb(226,44,39)" fg:x="517" fg:w="7"/><text x="92.9023%" y="590.50"></text></g><g><title>operator+ (TensorOperators.h:50) (1 samples, 0.18%)</title><rect x="93.7276%" y="596" width="0.1792%" height="15" fill="rgb(228,53,17)" fg:x="523" fg:w="1"/><text x="93.9776%" y="606.50"></text></g><g><title>c10::Scalar::~Scalar (Scalar.h:45) (1 samples, 0.18%)</title><rect x="93.7276%" y="612" width="0.1792%" height="15" fill="rgb(212,27,27)" fg:x="523" fg:w="1"/><text x="93.9776%" y="622.50"></text></g><g><title>c10::Scalar::destroy (Scalar.h:38) (1 samples, 0.18%)</title><rect x="93.7276%" y="628" width="0.1792%" height="15" fill="rgb(241,50,6)" fg:x="523" fg:w="1"/><text x="93.9776%" y="638.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="644" width="0.1792%" height="15" fill="rgb(225,28,51)" fg:x="523" fg:w="1"/><text x="93.9776%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="660" width="0.1792%" height="15" fill="rgb(215,33,16)" fg:x="523" fg:w="1"/><text x="93.9776%" y="670.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="676" width="0.1792%" height="15" fill="rgb(243,40,39)" fg:x="523" fg:w="1"/><text x="93.9776%" y="686.50"></text></g><g><title>at::_ops::add_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="692" width="0.1792%" height="15" fill="rgb(225,11,42)" fg:x="523" fg:w="1"/><text x="93.9776%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="708" width="0.1792%" height="15" fill="rgb(241,220,38)" fg:x="523" fg:w="1"/><text x="93.9776%" y="718.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="724" width="0.1792%" height="15" fill="rgb(244,52,35)" fg:x="523" fg:w="1"/><text x="93.9776%" y="734.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="740" width="0.1792%" height="15" fill="rgb(246,42,46)" fg:x="523" fg:w="1"/><text x="93.9776%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="756" width="0.1792%" height="15" fill="rgb(205,184,13)" fg:x="523" fg:w="1"/><text x="93.9776%" y="766.50"></text></g><g><title>at::TensorIteratorConfig::add_borrowed_input (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="93.7276%" y="772" width="0.1792%" height="15" fill="rgb(209,48,36)" fg:x="523" fg:w="1"/><text x="93.9776%" y="782.50"></text></g><g><title>fast_jacobian (main.cpp:42) (1 samples, 0.18%)</title><rect x="93.9068%" y="340" width="0.1792%" height="15" fill="rgb(244,34,51)" fg:x="524" fg:w="1"/><text x="94.1568%" y="350.50"></text></g><g><title>std::_Function_handler&lt;at::Tensor(at::Tensor), std::_Bind&lt;at::Tensor (*(std::_Placeholder&lt;1&gt;, at::Tensor, int, int))(at::Tensor, at::Tensor, int, int)&gt; &gt;::_M_manager (std_function.h:267) (1 samples, 0.18%)</title><rect x="93.9068%" y="356" width="0.1792%" height="15" fill="rgb(221,107,33)" fg:x="524" fg:w="1"/><text x="94.1568%" y="366.50"></text></g><g><title>fast_jacobian (main.cpp:44) (1 samples, 0.18%)</title><rect x="94.0860%" y="340" width="0.1792%" height="15" fill="rgb(224,203,12)" fg:x="525" fg:w="1"/><text x="94.3360%" y="350.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:211) (1 samples, 0.18%)</title><rect x="94.0860%" y="356" width="0.1792%" height="15" fill="rgb(230,215,18)" fg:x="525" fg:w="1"/><text x="94.3360%" y="366.50"></text></g><g><title>at::Tensor::operator= &amp; (TensorBody.h:203) (1 samples, 0.18%)</title><rect x="94.0860%" y="372" width="0.1792%" height="15" fill="rgb(206,185,35)" fg:x="525" fg:w="1"/><text x="94.3360%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator= &amp; (intrusive_ptr.h:372) (1 samples, 0.18%)</title><rect x="94.0860%" y="388" width="0.1792%" height="15" fill="rgb(228,140,34)" fg:x="525" fg:w="1"/><text x="94.3360%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator=&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt; &amp; (intrusive_ptr.h:383) (1 samples, 0.18%)</title><rect x="94.0860%" y="404" width="0.1792%" height="15" fill="rgb(208,93,13)" fg:x="525" fg:w="1"/><text x="94.3360%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="94.0860%" y="420" width="0.1792%" height="15" fill="rgb(221,193,39)" fg:x="525" fg:w="1"/><text x="94.3360%" y="430.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (1 samples, 0.18%)</title><rect x="94.0860%" y="436" width="0.1792%" height="15" fill="rgb(241,132,34)" fg:x="525" fg:w="1"/><text x="94.3360%" y="446.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (1 samples, 0.18%)</title><rect x="94.0860%" y="452" width="0.1792%" height="15" fill="rgb(221,141,10)" fg:x="525" fg:w="1"/><text x="94.3360%" y="462.50"></text></g><g><title>0x7f34c2873b34 (libstdc++.so.6.0.30) (1 samples, 0.18%)</title><rect x="94.0860%" y="468" width="0.1792%" height="15" fill="rgb(226,90,31)" fg:x="525" fg:w="1"/><text x="94.3360%" y="478.50"></text></g><g><title>c10::impl::OperatorEntry::lookup (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.2652%" y="516" width="0.1792%" height="15" fill="rgb(243,75,5)" fg:x="526" fg:w="1"/><text x="94.5152%" y="526.50"></text></g><g><title>torch::autograd::_make_grads (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.2652%" y="452" width="0.3584%" height="15" fill="rgb(227,156,21)" fg:x="526" fg:w="2"/><text x="94.5152%" y="462.50"></text></g><g><title>at::_ops::ones_like::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.2652%" y="468" width="0.3584%" height="15" fill="rgb(250,195,8)" fg:x="526" fg:w="2"/><text x="94.5152%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::ones_like(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.2652%" y="484" width="0.3584%" height="15" fill="rgb(220,134,5)" fg:x="526" fg:w="2"/><text x="94.5152%" y="494.50"></text></g><g><title>at::_ops::ones_like::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.2652%" y="500" width="0.3584%" height="15" fill="rgb(246,106,34)" fg:x="526" fg:w="2"/><text x="94.5152%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__ones_like(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.4444%" y="516" width="0.1792%" height="15" fill="rgb(205,1,4)" fg:x="527" fg:w="1"/><text x="94.6944%" y="526.50"></text></g><g><title>at::native::ones_like (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.4444%" y="532" width="0.1792%" height="15" fill="rgb(224,151,29)" fg:x="527" fg:w="1"/><text x="94.6944%" y="542.50"></text></g><g><title>at::_ops::empty_like::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.4444%" y="548" width="0.1792%" height="15" fill="rgb(251,196,0)" fg:x="527" fg:w="1"/><text x="94.6944%" y="558.50"></text></g><g><title>c10::impl::OperatorEntry::lookup (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.4444%" y="564" width="0.1792%" height="15" fill="rgb(212,127,0)" fg:x="527" fg:w="1"/><text x="94.6944%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.6237%" y="564" width="0.1792%" height="15" fill="rgb(236,71,53)" fg:x="528" fg:w="1"/><text x="94.8737%" y="574.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.6237%" y="580" width="0.1792%" height="15" fill="rgb(227,99,0)" fg:x="528" fg:w="1"/><text x="94.8737%" y="590.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="94.6237%" y="596" width="0.1792%" height="15" fill="rgb(239,89,21)" fg:x="528" fg:w="1"/><text x="94.8737%" y="606.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="94.6237%" y="612" width="0.1792%" height="15" fill="rgb(243,122,19)" fg:x="528" fg:w="1"/><text x="94.8737%" y="622.50"></text></g><g><title>0x7f34ff179b34 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="94.6237%" y="628" width="0.1792%" height="15" fill="rgb(229,192,45)" fg:x="528" fg:w="1"/><text x="94.8737%" y="638.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.6237%" y="548" width="0.3584%" height="15" fill="rgb(235,165,35)" fg:x="528" fg:w="2"/><text x="94.8737%" y="558.50"></text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::shared_ptr&lt;c10::SafePyObject&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.8029%" y="564" width="0.1792%" height="15" fill="rgb(253,202,0)" fg:x="529" fg:w="1"/><text x="95.0529%" y="574.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="596" width="0.1792%" height="15" fill="rgb(235,51,20)" fg:x="530" fg:w="1"/><text x="95.2321%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="612" width="0.1792%" height="15" fill="rgb(218,95,46)" fg:x="530" fg:w="1"/><text x="95.2321%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="628" width="0.1792%" height="15" fill="rgb(212,81,10)" fg:x="530" fg:w="1"/><text x="95.2321%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="644" width="0.1792%" height="15" fill="rgb(240,59,0)" fg:x="530" fg:w="1"/><text x="95.2321%" y="654.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="660" width="0.1792%" height="15" fill="rgb(212,191,42)" fg:x="530" fg:w="1"/><text x="95.2321%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="676" width="0.1792%" height="15" fill="rgb(233,140,3)" fg:x="530" fg:w="1"/><text x="95.2321%" y="686.50"></text></g><g><title>at::TensorIteratorBase::~TensorIteratorBase (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="94.9821%" y="692" width="0.1792%" height="15" fill="rgb(215,69,23)" fg:x="530" fg:w="1"/><text x="95.2321%" y="702.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.9821%" y="564" width="0.3584%" height="15" fill="rgb(240,202,20)" fg:x="530" fg:w="2"/><text x="95.2321%" y="574.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="94.9821%" y="580" width="0.3584%" height="15" fill="rgb(209,146,50)" fg:x="530" fg:w="2"/><text x="95.2321%" y="590.50"></text></g><g><title>c10::impl::dispatch_mode_enabled (libc10.so) (1 samples, 0.18%)</title><rect x="95.1613%" y="596" width="0.1792%" height="15" fill="rgb(253,102,54)" fg:x="531" fg:w="1"/><text x="95.4113%" y="606.50"></text></g><g><title>c10::impl::tls_is_dispatch_key_excluded (libc10.so) (1 samples, 0.18%)</title><rect x="95.1613%" y="612" width="0.1792%" height="15" fill="rgb(250,173,47)" fg:x="531" fg:w="1"/><text x="95.4113%" y="622.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="95.1613%" y="628" width="0.1792%" height="15" fill="rgb(232,142,7)" fg:x="531" fg:w="1"/><text x="95.4113%" y="638.50"></text></g><g><title>0x7f34ff179d0c (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="95.1613%" y="644" width="0.1792%" height="15" fill="rgb(230,157,47)" fg:x="531" fg:w="1"/><text x="95.4113%" y="654.50"></text></g><g><title>0x7f34ff179b11 (ld-linux-x86-64.so.2) (1 samples, 0.18%)</title><rect x="95.1613%" y="660" width="0.1792%" height="15" fill="rgb(214,177,35)" fg:x="531" fg:w="1"/><text x="95.4113%" y="670.50"></text></g><g><title>at::_ops::mul_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="612" width="0.1792%" height="15" fill="rgb(234,119,46)" fg:x="532" fg:w="1"/><text x="95.5905%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="628" width="0.1792%" height="15" fill="rgb(241,180,50)" fg:x="532" fg:w="1"/><text x="95.5905%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="644" width="0.1792%" height="15" fill="rgb(221,54,25)" fg:x="532" fg:w="1"/><text x="95.5905%" y="654.50"></text></g><g><title>at::_ops::mul_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="660" width="0.1792%" height="15" fill="rgb(209,157,44)" fg:x="532" fg:w="1"/><text x="95.5905%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Scalar_mul(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="676" width="0.1792%" height="15" fill="rgb(246,115,41)" fg:x="532" fg:w="1"/><text x="95.5905%" y="686.50"></text></g><g><title>at::native::mul (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="692" width="0.1792%" height="15" fill="rgb(229,86,1)" fg:x="532" fg:w="1"/><text x="95.5905%" y="702.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="708" width="0.1792%" height="15" fill="rgb(240,108,53)" fg:x="532" fg:w="1"/><text x="95.5905%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="724" width="0.1792%" height="15" fill="rgb(227,134,2)" fg:x="532" fg:w="1"/><text x="95.5905%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="740" width="0.1792%" height="15" fill="rgb(213,129,25)" fg:x="532" fg:w="1"/><text x="95.5905%" y="750.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="756" width="0.1792%" height="15" fill="rgb(226,35,21)" fg:x="532" fg:w="1"/><text x="95.5905%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="772" width="0.1792%" height="15" fill="rgb(208,129,26)" fg:x="532" fg:w="1"/><text x="95.5905%" y="782.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="788" width="0.1792%" height="15" fill="rgb(224,83,6)" fg:x="532" fg:w="1"/><text x="95.5905%" y="798.50"></text></g><g><title>at::(anonymous namespace)::structured_mul_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="804" width="0.1792%" height="15" fill="rgb(227,52,39)" fg:x="532" fg:w="1"/><text x="95.5905%" y="814.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="820" width="0.1792%" height="15" fill="rgb(241,30,17)" fg:x="532" fg:w="1"/><text x="95.5905%" y="830.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="836" width="0.1792%" height="15" fill="rgb(246,186,42)" fg:x="532" fg:w="1"/><text x="95.5905%" y="846.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="852" width="0.1792%" height="15" fill="rgb(221,169,15)" fg:x="532" fg:w="1"/><text x="95.5905%" y="862.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="868" width="0.1792%" height="15" fill="rgb(235,108,21)" fg:x="532" fg:w="1"/><text x="95.5905%" y="878.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="884" width="0.1792%" height="15" fill="rgb(219,148,30)" fg:x="532" fg:w="1"/><text x="95.5905%" y="894.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="900" width="0.1792%" height="15" fill="rgb(220,109,5)" fg:x="532" fg:w="1"/><text x="95.5905%" y="910.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="916" width="0.1792%" height="15" fill="rgb(213,203,48)" fg:x="532" fg:w="1"/><text x="95.5905%" y="926.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="95.3405%" y="932" width="0.1792%" height="15" fill="rgb(244,71,33)" fg:x="532" fg:w="1"/><text x="95.5905%" y="942.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="95.3405%" y="948" width="0.1792%" height="15" fill="rgb(209,23,2)" fg:x="532" fg:w="1"/><text x="95.5905%" y="958.50"></text></g><g><title>at::_ops::mul_Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="612" width="0.1792%" height="15" fill="rgb(219,97,7)" fg:x="533" fg:w="1"/><text x="95.7697%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::mul_Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="628" width="0.1792%" height="15" fill="rgb(216,161,23)" fg:x="533" fg:w="1"/><text x="95.7697%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="644" width="0.1792%" height="15" fill="rgb(207,45,42)" fg:x="533" fg:w="1"/><text x="95.7697%" y="654.50"></text></g><g><title>at::_ops::mul_Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="660" width="0.1792%" height="15" fill="rgb(241,61,4)" fg:x="533" fg:w="1"/><text x="95.7697%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_mul_Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="676" width="0.1792%" height="15" fill="rgb(236,170,1)" fg:x="533" fg:w="1"/><text x="95.7697%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul_Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="692" width="0.1792%" height="15" fill="rgb(239,72,5)" fg:x="533" fg:w="1"/><text x="95.7697%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="708" width="0.1792%" height="15" fill="rgb(214,13,50)" fg:x="533" fg:w="1"/><text x="95.7697%" y="718.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="724" width="0.1792%" height="15" fill="rgb(224,88,9)" fg:x="533" fg:w="1"/><text x="95.7697%" y="734.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="740" width="0.1792%" height="15" fill="rgb(238,192,34)" fg:x="533" fg:w="1"/><text x="95.7697%" y="750.50"></text></g><g><title>at::(anonymous namespace)::structured_mul_out_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="756" width="0.1792%" height="15" fill="rgb(217,203,50)" fg:x="533" fg:w="1"/><text x="95.7697%" y="766.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="772" width="0.1792%" height="15" fill="rgb(241,123,32)" fg:x="533" fg:w="1"/><text x="95.7697%" y="782.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.5197%" y="788" width="0.1792%" height="15" fill="rgb(248,151,39)" fg:x="533" fg:w="1"/><text x="95.7697%" y="798.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="95.3405%" y="580" width="0.5376%" height="15" fill="rgb(208,89,6)" fg:x="532" fg:w="3"/><text x="95.5905%" y="590.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="95.3405%" y="596" width="0.5376%" height="15" fill="rgb(254,43,26)" fg:x="532" fg:w="3"/><text x="95.5905%" y="606.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="612" width="0.1792%" height="15" fill="rgb(216,158,13)" fg:x="534" fg:w="1"/><text x="95.9489%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="628" width="0.1792%" height="15" fill="rgb(212,47,37)" fg:x="534" fg:w="1"/><text x="95.9489%" y="638.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="644" width="0.1792%" height="15" fill="rgb(254,16,10)" fg:x="534" fg:w="1"/><text x="95.9489%" y="654.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="660" width="0.1792%" height="15" fill="rgb(223,228,16)" fg:x="534" fg:w="1"/><text x="95.9489%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="676" width="0.1792%" height="15" fill="rgb(249,108,50)" fg:x="534" fg:w="1"/><text x="95.9489%" y="686.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="692" width="0.1792%" height="15" fill="rgb(208,220,5)" fg:x="534" fg:w="1"/><text x="95.9489%" y="702.50"></text></g><g><title>at::native::structured_pow_Tensor_Scalar_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="708" width="0.1792%" height="15" fill="rgb(217,89,48)" fg:x="534" fg:w="1"/><text x="95.9489%" y="718.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="724" width="0.1792%" height="15" fill="rgb(212,113,41)" fg:x="534" fg:w="1"/><text x="95.9489%" y="734.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="740" width="0.1792%" height="15" fill="rgb(231,127,5)" fg:x="534" fg:w="1"/><text x="95.9489%" y="750.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="95.6989%" y="756" width="0.1792%" height="15" fill="rgb(217,141,17)" fg:x="534" fg:w="1"/><text x="95.9489%" y="766.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="580" width="0.3584%" height="15" fill="rgb(245,125,54)" fg:x="535" fg:w="2"/><text x="96.1281%" y="590.50"></text></g><g><title>at::_ops::select_backward::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="596" width="0.3584%" height="15" fill="rgb(248,125,3)" fg:x="535" fg:w="2"/><text x="96.1281%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::select_backward(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="612" width="0.3584%" height="15" fill="rgb(236,119,51)" fg:x="535" fg:w="2"/><text x="96.1281%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="628" width="0.3584%" height="15" fill="rgb(239,99,8)" fg:x="535" fg:w="2"/><text x="96.1281%" y="638.50"></text></g><g><title>at::_ops::select_backward::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="644" width="0.3584%" height="15" fill="rgb(224,228,4)" fg:x="535" fg:w="2"/><text x="96.1281%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="660" width="0.3584%" height="15" fill="rgb(220,131,45)" fg:x="535" fg:w="2"/><text x="96.1281%" y="670.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutogradNonFunctional__select_backward (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="95.8781%" y="676" width="0.3584%" height="15" fill="rgb(215,62,5)" fg:x="535" fg:w="2"/><text x="96.1281%" y="686.50"></text></g><g><title>at::native::select_backward_symint (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="692" width="0.1792%" height="15" fill="rgb(253,12,24)" fg:x="536" fg:w="1"/><text x="96.3073%" y="702.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="708" width="0.1792%" height="15" fill="rgb(248,120,50)" fg:x="536" fg:w="1"/><text x="96.3073%" y="718.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="724" width="0.1792%" height="15" fill="rgb(245,194,10)" fg:x="536" fg:w="1"/><text x="96.3073%" y="734.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="740" width="0.1792%" height="15" fill="rgb(241,149,38)" fg:x="536" fg:w="1"/><text x="96.3073%" y="750.50"></text></g><g><title>at::native::AVX2::copy_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="756" width="0.1792%" height="15" fill="rgb(219,215,7)" fg:x="536" fg:w="1"/><text x="96.3073%" y="766.50"></text></g><g><title>at::native::AVX2::copy_same_dtype (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="772" width="0.1792%" height="15" fill="rgb(208,120,31)" fg:x="536" fg:w="1"/><text x="96.3073%" y="782.50"></text></g><g><title>at::native::AVX2::direct_copy_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="788" width="0.1792%" height="15" fill="rgb(244,30,8)" fg:x="536" fg:w="1"/><text x="96.3073%" y="798.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="804" width="0.1792%" height="15" fill="rgb(238,35,44)" fg:x="536" fg:w="1"/><text x="96.3073%" y="814.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="820" width="0.1792%" height="15" fill="rgb(243,218,37)" fg:x="536" fg:w="1"/><text x="96.3073%" y="830.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::AVX2::direct_copy_kernel(at::TensorIteratorBase&amp;)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(double)#1}, at::native::AVX2::direct_copy_kernel(at::TensorIteratorBase&amp;)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;double&gt;)#2}&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.0573%" y="836" width="0.1792%" height="15" fill="rgb(218,169,10)" fg:x="536" fg:w="1"/><text x="96.3073%" y="846.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (7 samples, 1.25%)</title><rect x="95.3405%" y="564" width="1.2545%" height="15" fill="rgb(221,144,10)" fg:x="532" fg:w="7"/><text x="95.5905%" y="574.50"></text></g><g><title>torch::autograd::generated::SubBackward0::apply (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="580" width="0.3584%" height="15" fill="rgb(226,41,38)" fg:x="537" fg:w="2"/><text x="96.4866%" y="590.50"></text></g><g><title>at::_ops::neg::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="596" width="0.3584%" height="15" fill="rgb(228,3,1)" fg:x="537" fg:w="2"/><text x="96.4866%" y="606.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::neg(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="612" width="0.3584%" height="15" fill="rgb(209,129,12)" fg:x="537" fg:w="2"/><text x="96.4866%" y="622.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::neg (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="628" width="0.3584%" height="15" fill="rgb(213,136,33)" fg:x="537" fg:w="2"/><text x="96.4866%" y="638.50"></text></g><g><title>at::_ops::neg::redispatch (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="644" width="0.3584%" height="15" fill="rgb(209,181,29)" fg:x="537" fg:w="2"/><text x="96.4866%" y="654.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_neg(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="660" width="0.3584%" height="15" fill="rgb(234,173,18)" fg:x="537" fg:w="2"/><text x="96.4866%" y="670.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_neg (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="676" width="0.3584%" height="15" fill="rgb(227,73,47)" fg:x="537" fg:w="2"/><text x="96.4866%" y="686.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_unary_op (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="692" width="0.3584%" height="15" fill="rgb(234,9,34)" fg:x="537" fg:w="2"/><text x="96.4866%" y="702.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="708" width="0.3584%" height="15" fill="rgb(235,172,15)" fg:x="537" fg:w="2"/><text x="96.4866%" y="718.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="724" width="0.3584%" height="15" fill="rgb(245,61,2)" fg:x="537" fg:w="2"/><text x="96.4866%" y="734.50"></text></g><g><title>at::(anonymous namespace)::structured_neg_out_functional::set_output_raw_strided (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="740" width="0.3584%" height="15" fill="rgb(238,39,47)" fg:x="537" fg:w="2"/><text x="96.4866%" y="750.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="756" width="0.3584%" height="15" fill="rgb(234,37,24)" fg:x="537" fg:w="2"/><text x="96.4866%" y="766.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="772" width="0.3584%" height="15" fill="rgb(248,223,24)" fg:x="537" fg:w="2"/><text x="96.4866%" y="782.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="788" width="0.3584%" height="15" fill="rgb(223,12,15)" fg:x="537" fg:w="2"/><text x="96.4866%" y="798.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="804" width="0.3584%" height="15" fill="rgb(249,6,3)" fg:x="537" fg:w="2"/><text x="96.4866%" y="814.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="820" width="0.3584%" height="15" fill="rgb(237,105,33)" fg:x="537" fg:w="2"/><text x="96.4866%" y="830.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="96.2366%" y="836" width="0.3584%" height="15" fill="rgb(252,208,35)" fg:x="537" fg:w="2"/><text x="96.4866%" y="846.50"></text></g><g><title>at::detail::make_tensor_base&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKeySet&amp;, caffe2::TypeMeta&amp;&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.4158%" y="852" width="0.1792%" height="15" fill="rgb(215,181,35)" fg:x="538" fg:w="1"/><text x="96.6658%" y="862.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::intrusive_ptr (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.4158%" y="868" width="0.1792%" height="15" fill="rgb(246,212,3)" fg:x="538" fg:w="1"/><text x="96.6658%" y="878.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (10 samples, 1.79%)</title><rect x="94.9821%" y="548" width="1.7921%" height="15" fill="rgb(247,156,24)" fg:x="530" fg:w="10"/><text x="95.2321%" y="558.50">t..</text></g><g><title>torch::autograd::ReadyQueue::push (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.5950%" y="564" width="0.1792%" height="15" fill="rgb(248,9,31)" fg:x="539" fg:w="1"/><text x="96.8450%" y="574.50"></text></g><g><title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;torch::autograd::NodeTask*, std::vector&lt;torch::autograd::NodeTask, std::allocator&lt;torch::autograd::NodeTask&gt; &gt; &gt;, long, torch::autograd::NodeTask, __gnu_cxx::__ops::_Iter_comp_val&lt;torch::autograd::ReadyQueue::CompareNodeTaskTime&gt; &gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.5950%" y="580" width="0.1792%" height="15" fill="rgb(234,26,45)" fg:x="539" fg:w="1"/><text x="96.8450%" y="590.50"></text></g><g><title>fast_jacobian (main.cpp:47) (15 samples, 2.69%)</title><rect x="94.2652%" y="340" width="2.6882%" height="15" fill="rgb(249,11,32)" fg:x="526" fg:w="15"/><text x="94.5152%" y="350.50">fa..</text></g><g><title>at::Tensor::backward (TensorBody.h:445) (15 samples, 2.69%)</title><rect x="94.2652%" y="356" width="2.6882%" height="15" fill="rgb(249,162,33)" fg:x="526" fg:w="15"/><text x="94.5152%" y="366.50">at..</text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (15 samples, 2.69%)</title><rect x="94.2652%" y="372" width="2.6882%" height="15" fill="rgb(232,4,32)" fg:x="526" fg:w="15"/><text x="94.5152%" y="382.50">c1..</text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (15 samples, 2.69%)</title><rect x="94.2652%" y="388" width="2.6882%" height="15" fill="rgb(212,5,45)" fg:x="526" fg:w="15"/><text x="94.5152%" y="398.50">c1..</text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="94.2652%" y="404" width="2.6882%" height="15" fill="rgb(227,95,13)" fg:x="526" fg:w="15"/><text x="94.5152%" y="414.50">at..</text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="94.2652%" y="420" width="2.6882%" height="15" fill="rgb(223,205,10)" fg:x="526" fg:w="15"/><text x="94.5152%" y="430.50">to..</text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (15 samples, 2.69%)</title><rect x="94.2652%" y="436" width="2.6882%" height="15" fill="rgb(222,178,8)" fg:x="526" fg:w="15"/><text x="94.5152%" y="446.50">to..</text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="452" width="2.3297%" height="15" fill="rgb(216,13,22)" fg:x="528" fg:w="13"/><text x="94.8737%" y="462.50">t..</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="468" width="2.3297%" height="15" fill="rgb(240,167,12)" fg:x="528" fg:w="13"/><text x="94.8737%" y="478.50">t..</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="484" width="2.3297%" height="15" fill="rgb(235,68,35)" fg:x="528" fg:w="13"/><text x="94.8737%" y="494.50">t..</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="500" width="2.3297%" height="15" fill="rgb(253,40,27)" fg:x="528" fg:w="13"/><text x="94.8737%" y="510.50">t..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="516" width="2.3297%" height="15" fill="rgb(214,19,28)" fg:x="528" fg:w="13"/><text x="94.8737%" y="526.50">t..</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (13 samples, 2.33%)</title><rect x="94.6237%" y="532" width="2.3297%" height="15" fill="rgb(210,167,45)" fg:x="528" fg:w="13"/><text x="94.8737%" y="542.50">t..</text></g><g><title>torch::autograd::NodeGuard::NodeGuard (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.7742%" y="548" width="0.1792%" height="15" fill="rgb(232,97,40)" fg:x="540" fg:w="1"/><text x="97.0242%" y="558.50"></text></g><g><title>fast_jacobian (main.cpp:50) (1 samples, 0.18%)</title><rect x="96.9534%" y="340" width="0.1792%" height="15" fill="rgb(250,35,23)" fg:x="541" fg:w="1"/><text x="97.2034%" y="350.50"></text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (1 samples, 0.18%)</title><rect x="96.9534%" y="356" width="0.1792%" height="15" fill="rgb(248,47,53)" fg:x="541" fg:w="1"/><text x="97.2034%" y="366.50"></text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (1 samples, 0.18%)</title><rect x="96.9534%" y="372" width="0.1792%" height="15" fill="rgb(226,58,50)" fg:x="541" fg:w="1"/><text x="97.2034%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (1 samples, 0.18%)</title><rect x="96.9534%" y="388" width="0.1792%" height="15" fill="rgb(217,105,26)" fg:x="541" fg:w="1"/><text x="97.2034%" y="398.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:272) (1 samples, 0.18%)</title><rect x="96.9534%" y="404" width="0.1792%" height="15" fill="rgb(208,64,1)" fg:x="541" fg:w="1"/><text x="97.2034%" y="414.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (intrusive_ptr.h:289) (1 samples, 0.18%)</title><rect x="96.9534%" y="420" width="0.1792%" height="15" fill="rgb(214,80,1)" fg:x="541" fg:w="1"/><text x="97.2034%" y="430.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="436" width="0.1792%" height="15" fill="rgb(206,175,26)" fg:x="541" fg:w="1"/><text x="97.2034%" y="446.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="452" width="0.1792%" height="15" fill="rgb(235,156,37)" fg:x="541" fg:w="1"/><text x="97.2034%" y="462.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="468" width="0.1792%" height="15" fill="rgb(213,100,9)" fg:x="541" fg:w="1"/><text x="97.2034%" y="478.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="484" width="0.1792%" height="15" fill="rgb(241,15,13)" fg:x="541" fg:w="1"/><text x="97.2034%" y="494.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="500" width="0.1792%" height="15" fill="rgb(205,97,43)" fg:x="541" fg:w="1"/><text x="97.2034%" y="510.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SelectBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="516" width="0.1792%" height="15" fill="rgb(216,106,32)" fg:x="541" fg:w="1"/><text x="97.2034%" y="526.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="532" width="0.1792%" height="15" fill="rgb(226,200,8)" fg:x="541" fg:w="1"/><text x="97.2034%" y="542.50"></text></g><g><title>torch::autograd::gatherFunctions (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="96.9534%" y="548" width="0.1792%" height="15" fill="rgb(244,54,29)" fg:x="541" fg:w="1"/><text x="97.2034%" y="558.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:186) (165 samples, 29.57%)</title><rect x="67.7419%" y="292" width="29.5699%" height="15" fill="rgb(252,169,12)" fg:x="378" fg:w="165"/><text x="67.9919%" y="302.50">gBAOAB_step_exact (main.cpp:186)</text></g><g><title>rattle_step (main.cpp:89) (26 samples, 4.66%)</title><rect x="92.6523%" y="308" width="4.6595%" height="15" fill="rgb(231,199,11)" fg:x="517" fg:w="26"/><text x="92.9023%" y="318.50">rattl..</text></g><g><title>at::Tensor::squeeze (TensorBody.h:3523) (26 samples, 4.66%)</title><rect x="92.6523%" y="324" width="4.6595%" height="15" fill="rgb(233,191,18)" fg:x="517" fg:w="26"/><text x="92.9023%" y="334.50">at::T..</text></g><g><title>fast_jacobian (main.cpp:54) (1 samples, 0.18%)</title><rect x="97.1326%" y="340" width="0.1792%" height="15" fill="rgb(215,83,47)" fg:x="542" fg:w="1"/><text x="97.3826%" y="350.50"></text></g><g><title>at::_ops::stack::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="356" width="0.1792%" height="15" fill="rgb(251,67,19)" fg:x="542" fg:w="1"/><text x="97.3826%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="372" width="0.1792%" height="15" fill="rgb(240,7,20)" fg:x="542" fg:w="1"/><text x="97.3826%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="388" width="0.1792%" height="15" fill="rgb(210,150,26)" fg:x="542" fg:w="1"/><text x="97.3826%" y="398.50"></text></g><g><title>at::_ops::stack::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="404" width="0.1792%" height="15" fill="rgb(228,75,42)" fg:x="542" fg:w="1"/><text x="97.3826%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__stack(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor(c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="420" width="0.1792%" height="15" fill="rgb(237,134,48)" fg:x="542" fg:w="1"/><text x="97.3826%" y="430.50"></text></g><g><title>at::native::stack (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="436" width="0.1792%" height="15" fill="rgb(205,80,50)" fg:x="542" fg:w="1"/><text x="97.3826%" y="446.50"></text></g><g><title>at::_ops::cat::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="452" width="0.1792%" height="15" fill="rgb(217,74,48)" fg:x="542" fg:w="1"/><text x="97.3826%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long), &amp;at::(anonymous namespace)::wrapper_CPU_cat(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::IListRef&lt;at::Tensor&gt; const&amp;, long&gt; &gt;, at::Tensor(c10::IListRef&lt;at::Tensor&gt; const&amp;, long)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="468" width="0.1792%" height="15" fill="rgb(205,82,50)" fg:x="542" fg:w="1"/><text x="97.3826%" y="478.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_cat (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="484" width="0.1792%" height="15" fill="rgb(228,1,33)" fg:x="542" fg:w="1"/><text x="97.3826%" y="494.50"></text></g><g><title>at::meta::structured_cat::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="500" width="0.1792%" height="15" fill="rgb(214,50,23)" fg:x="542" fg:w="1"/><text x="97.3826%" y="510.50"></text></g><g><title>at::(anonymous namespace)::structured_cat_out_cpu_functional::set_output_raw_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="516" width="0.1792%" height="15" fill="rgb(210,62,9)" fg:x="542" fg:w="1"/><text x="97.3826%" y="526.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="532" width="0.1792%" height="15" fill="rgb(210,104,37)" fg:x="542" fg:w="1"/><text x="97.3826%" y="542.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="548" width="0.1792%" height="15" fill="rgb(232,104,43)" fg:x="542" fg:w="1"/><text x="97.3826%" y="558.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="564" width="0.1792%" height="15" fill="rgb(244,52,6)" fg:x="542" fg:w="1"/><text x="97.3826%" y="574.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="580" width="0.1792%" height="15" fill="rgb(211,174,52)" fg:x="542" fg:w="1"/><text x="97.3826%" y="590.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="596" width="0.1792%" height="15" fill="rgb(229,48,4)" fg:x="542" fg:w="1"/><text x="97.3826%" y="606.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="612" width="0.1792%" height="15" fill="rgb(205,155,16)" fg:x="542" fg:w="1"/><text x="97.3826%" y="622.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (libc10.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="628" width="0.1792%" height="15" fill="rgb(211,141,53)" fg:x="542" fg:w="1"/><text x="97.3826%" y="638.50"></text></g><g><title>c10::alloc_cpu (libc10.so) (1 samples, 0.18%)</title><rect x="97.1326%" y="644" width="0.1792%" height="15" fill="rgb(240,148,11)" fg:x="542" fg:w="1"/><text x="97.3826%" y="654.50"></text></g><g><title>posix_memalign (libc.so.6) (1 samples, 0.18%)</title><rect x="97.1326%" y="660" width="0.1792%" height="15" fill="rgb(214,45,23)" fg:x="542" fg:w="1"/><text x="97.3826%" y="670.50"></text></g><g><title>0x7f34fee99d4f (libc.so.6) (1 samples, 0.18%)</title><rect x="97.1326%" y="676" width="0.1792%" height="15" fill="rgb(248,74,26)" fg:x="542" fg:w="1"/><text x="97.3826%" y="686.50"></text></g><g><title>0x7f34fee98bdb (libc.so.6) (1 samples, 0.18%)</title><rect x="97.1326%" y="692" width="0.1792%" height="15" fill="rgb(218,121,16)" fg:x="542" fg:w="1"/><text x="97.3826%" y="702.50"></text></g><g><title>0x7f34fee96846 (libc.so.6) (1 samples, 0.18%)</title><rect x="97.1326%" y="708" width="0.1792%" height="15" fill="rgb(218,10,47)" fg:x="542" fg:w="1"/><text x="97.3826%" y="718.50"></text></g><g><title>at::ThreadLocalState::setThreadLocalState (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.3118%" y="516" width="0.1792%" height="15" fill="rgb(227,99,14)" fg:x="543" fg:w="1"/><text x="97.5618%" y="526.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::setTLS (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.3118%" y="532" width="0.1792%" height="15" fill="rgb(229,83,46)" fg:x="543" fg:w="1"/><text x="97.5618%" y="542.50"></text></g><g><title>at::(anonymous namespace)::LocalCallbackManager::rebuild_scope (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.3118%" y="548" width="0.1792%" height="15" fill="rgb(228,25,1)" fg:x="543" fg:w="1"/><text x="97.5618%" y="558.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="532" width="0.1792%" height="15" fill="rgb(252,190,15)" fg:x="544" fg:w="1"/><text x="97.7410%" y="542.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="548" width="0.1792%" height="15" fill="rgb(213,103,51)" fg:x="544" fg:w="1"/><text x="97.7410%" y="558.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="564" width="0.1792%" height="15" fill="rgb(220,38,44)" fg:x="544" fg:w="1"/><text x="97.7410%" y="574.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="580" width="0.1792%" height="15" fill="rgb(210,45,26)" fg:x="544" fg:w="1"/><text x="97.7410%" y="590.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="596" width="0.1792%" height="15" fill="rgb(205,95,48)" fg:x="544" fg:w="1"/><text x="97.7410%" y="606.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="612" width="0.1792%" height="15" fill="rgb(225,179,37)" fg:x="544" fg:w="1"/><text x="97.7410%" y="622.50"></text></g><g><title>at::_ops::add__Tensor::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="628" width="0.1792%" height="15" fill="rgb(230,209,3)" fg:x="544" fg:w="1"/><text x="97.7410%" y="638.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="644" width="0.1792%" height="15" fill="rgb(248,12,46)" fg:x="544" fg:w="1"/><text x="97.7410%" y="654.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="660" width="0.1792%" height="15" fill="rgb(234,18,0)" fg:x="544" fg:w="1"/><text x="97.7410%" y="670.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="676" width="0.1792%" height="15" fill="rgb(238,197,14)" fg:x="544" fg:w="1"/><text x="97.7410%" y="686.50"></text></g><g><title>0x7f34ab6673a0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.4910%" y="692" width="0.1792%" height="15" fill="rgb(251,162,48)" fg:x="544" fg:w="1"/><text x="97.7410%" y="702.50"></text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (3 samples, 0.54%)</title><rect x="97.3118%" y="500" width="0.5376%" height="15" fill="rgb(237,73,42)" fg:x="543" fg:w="3"/><text x="97.5618%" y="510.50"></text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="97.4910%" y="516" width="0.3584%" height="15" fill="rgb(211,108,8)" fg:x="544" fg:w="2"/><text x="97.7410%" y="526.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="532" width="0.1792%" height="15" fill="rgb(213,45,22)" fg:x="545" fg:w="1"/><text x="97.9203%" y="542.50"></text></g><g><title>torch::autograd::generated::PowBackward0::apply (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="548" width="0.1792%" height="15" fill="rgb(252,154,5)" fg:x="545" fg:w="1"/><text x="97.9203%" y="558.50"></text></g><g><title>torch::autograd::generated::details::pow_backward (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="564" width="0.1792%" height="15" fill="rgb(221,79,52)" fg:x="545" fg:w="1"/><text x="97.9203%" y="574.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="580" width="0.1792%" height="15" fill="rgb(229,220,36)" fg:x="545" fg:w="1"/><text x="97.9203%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="596" width="0.1792%" height="15" fill="rgb(211,17,16)" fg:x="545" fg:w="1"/><text x="97.9203%" y="606.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="612" width="0.1792%" height="15" fill="rgb(222,55,31)" fg:x="545" fg:w="1"/><text x="97.9203%" y="622.50"></text></g><g><title>at::_ops::pow_Tensor_Scalar::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="628" width="0.1792%" height="15" fill="rgb(221,221,31)" fg:x="545" fg:w="1"/><text x="97.9203%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="644" width="0.1792%" height="15" fill="rgb(227,168,26)" fg:x="545" fg:w="1"/><text x="97.9203%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_pow_Tensor_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="660" width="0.1792%" height="15" fill="rgb(224,139,9)" fg:x="545" fg:w="1"/><text x="97.9203%" y="670.50"></text></g><g><title>at::native::structured_pow_Tensor_Scalar_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="676" width="0.1792%" height="15" fill="rgb(254,172,0)" fg:x="545" fg:w="1"/><text x="97.9203%" y="686.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="692" width="0.1792%" height="15" fill="rgb(235,203,1)" fg:x="545" fg:w="1"/><text x="97.9203%" y="702.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="708" width="0.1792%" height="15" fill="rgb(216,205,24)" fg:x="545" fg:w="1"/><text x="97.9203%" y="718.50"></text></g><g><title>c10::impl::tls_set_dispatch_key_excluded (libc10.so) (1 samples, 0.18%)</title><rect x="97.6703%" y="724" width="0.1792%" height="15" fill="rgb(233,24,6)" fg:x="545" fg:w="1"/><text x="97.9203%" y="734.50"></text></g><g><title>gBAOAB_step_exact (main.cpp:196) (4 samples, 0.72%)</title><rect x="97.3118%" y="292" width="0.7168%" height="15" fill="rgb(244,110,9)" fg:x="543" fg:w="4"/><text x="97.5618%" y="302.50"></text></g><g><title>fast_jacobian (main.cpp:47) (4 samples, 0.72%)</title><rect x="97.3118%" y="308" width="0.7168%" height="15" fill="rgb(239,222,42)" fg:x="543" fg:w="4"/><text x="97.5618%" y="318.50"></text></g><g><title>at::Tensor::backward (TensorBody.h:445) (4 samples, 0.72%)</title><rect x="97.3118%" y="324" width="0.7168%" height="15" fill="rgb(218,145,13)" fg:x="543" fg:w="4"/><text x="97.5618%" y="334.50"></text></g><g><title>c10::optional&lt;at::Tensor&gt;::~optional (Optional.h:679) (4 samples, 0.72%)</title><rect x="97.3118%" y="340" width="0.7168%" height="15" fill="rgb(207,69,11)" fg:x="543" fg:w="4"/><text x="97.5618%" y="350.50"></text></g><g><title>c10::optional_base&lt;at::Tensor&gt;::~optional_base (Optional.h:287) (4 samples, 0.72%)</title><rect x="97.3118%" y="356" width="0.7168%" height="15" fill="rgb(220,223,22)" fg:x="543" fg:w="4"/><text x="97.5618%" y="366.50"></text></g><g><title>at::Tensor::_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="372" width="0.7168%" height="15" fill="rgb(245,102,5)" fg:x="543" fg:w="4"/><text x="97.5618%" y="382.50"></text></g><g><title>torch::autograd::VariableHooks::_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="388" width="0.7168%" height="15" fill="rgb(211,148,2)" fg:x="543" fg:w="4"/><text x="97.5618%" y="398.50"></text></g><g><title>torch::autograd::backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="404" width="0.7168%" height="15" fill="rgb(241,13,44)" fg:x="543" fg:w="4"/><text x="97.5618%" y="414.50"></text></g><g><title>torch::autograd::run_backward (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="420" width="0.7168%" height="15" fill="rgb(219,137,21)" fg:x="543" fg:w="4"/><text x="97.5618%" y="430.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="436" width="0.7168%" height="15" fill="rgb(242,206,5)" fg:x="543" fg:w="4"/><text x="97.5618%" y="446.50"></text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="452" width="0.7168%" height="15" fill="rgb(217,114,22)" fg:x="543" fg:w="4"/><text x="97.5618%" y="462.50"></text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="468" width="0.7168%" height="15" fill="rgb(253,206,42)" fg:x="543" fg:w="4"/><text x="97.5618%" y="478.50"></text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="97.3118%" y="484" width="0.7168%" height="15" fill="rgb(236,102,18)" fg:x="543" fg:w="4"/><text x="97.5618%" y="494.50"></text></g><g><title>torch::autograd::ReadyQueue::push (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="97.8495%" y="500" width="0.1792%" height="15" fill="rgb(208,59,49)" fg:x="546" fg:w="1"/><text x="98.0995%" y="510.50"></text></g><g><title>pthread_mutex_lock (libc.so.6) (1 samples, 0.18%)</title><rect x="97.8495%" y="516" width="0.1792%" height="15" fill="rgb(215,194,28)" fg:x="546" fg:w="1"/><text x="98.0995%" y="526.50"></text></g><g><title>&lt;module&gt; (profile_test.py:12) (376 samples, 67.38%)</title><rect x="30.8244%" y="84" width="67.3835%" height="15" fill="rgb(243,207,11)" fg:x="172" fg:w="376"/><text x="31.0744%" y="94.50">&lt;module&gt; (profile_test.py:12)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:946) (375 samples, 67.20%)</title><rect x="31.0036%" y="100" width="67.2043%" height="15" fill="rgb(254,179,35)" fg:x="173" fg:w="375"/><text x="31.2536%" y="110.50">pybind11::cpp_function::dispatcher (pybind11.h:946)</text></g><g><title>pybind11::cpp_function::initialize&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor, at::Tensor, at::Tensor, at::Tensor, pybind11::name, pybind11::scope, pybind11::sibling, char [29]&gt;(at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor (*)(at::Tensor, at::Tensor, at::Tensor), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [29])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:224) (375 samples, 67.20%)</title><rect x="31.0036%" y="116" width="67.2043%" height="15" fill="rgb(235,97,3)" fg:x="173" fg:w="375"/><text x="31.2536%" y="126.50">pybind11::cpp_function::initialize&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor, at::Tensor,..</text></g><g><title>pybind11::cpp_function::initialize&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor, at::Tensor, at::Tensor, at::Tensor, pybind11::name, pybind11::scope, pybind11::sibling, char [29]&gt;(at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor (*)(at::Tensor, at::Tensor, at::Tensor), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [29])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:253) (375 samples, 67.20%)</title><rect x="31.0036%" y="132" width="67.2043%" height="15" fill="rgb(215,155,33)" fg:x="173" fg:w="375"/><text x="31.2536%" y="142.50">pybind11::cpp_function::initialize&lt;at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), at::Tensor, at::Tensor,..</text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor, at::Tensor, at::Tensor&gt;::call&lt;at::Tensor, pybind11::detail::void_type, at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor)&gt; &amp;&amp; (cast.h:1449) (375 samples, 67.20%)</title><rect x="31.0036%" y="148" width="67.2043%" height="15" fill="rgb(223,128,12)" fg:x="173" fg:w="375"/><text x="31.2536%" y="158.50">pybind11::detail::argument_loader&lt;at::Tensor, at::Tensor, at::Tensor&gt;::call&lt;at::Tensor, pybind11::detail::void_..</text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor, at::Tensor, at::Tensor&gt;::call_impl&lt;at::Tensor, at::Tensor (*&amp;)(at::Tensor, at::Tensor, at::Tensor), (unsigned long)0, (unsigned long)1, (unsigned long)2, pybind11::detail::void_type&gt; &amp;&amp; (cast.h:1480) (375 samples, 67.20%)</title><rect x="31.0036%" y="164" width="67.2043%" height="15" fill="rgb(208,157,18)" fg:x="173" fg:w="375"/><text x="31.2536%" y="174.50">pybind11::detail::argument_loader&lt;at::Tensor, at::Tensor, at::Tensor&gt;::call_impl&lt;at::Tensor, at::Tensor (*&amp;)(at..</text></g><g><title>at::Tensor::~Tensor (TensorBody.h:92) (375 samples, 67.20%)</title><rect x="31.0036%" y="180" width="67.2043%" height="15" fill="rgb(249,70,54)" fg:x="173" fg:w="375"/><text x="31.2536%" y="190.50">at::Tensor::~Tensor (TensorBody.h:92)</text></g><g><title>at::TensorBase::~TensorBase (TensorBase.h:81) (375 samples, 67.20%)</title><rect x="31.0036%" y="196" width="67.2043%" height="15" fill="rgb(244,118,24)" fg:x="173" fg:w="375"/><text x="31.2536%" y="206.50">at::TensorBase::~TensorBase (TensorBase.h:81)</text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368) (375 samples, 67.20%)</title><rect x="31.0036%" y="212" width="67.2043%" height="15" fill="rgb(211,54,0)" fg:x="173" fg:w="375"/><text x="31.2536%" y="222.50">c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (intrusive_ptr.h:368)</text></g><g><title>noise (main.cpp:621) (375 samples, 67.20%)</title><rect x="31.0036%" y="228" width="67.2043%" height="15" fill="rgb(245,137,45)" fg:x="173" fg:w="375"/><text x="31.2536%" y="238.50">noise (main.cpp:621)</text></g><g><title>std::function&lt;at::Tensor(at::Tensor)&gt;::~function (std_function.h:334) (375 samples, 67.20%)</title><rect x="31.0036%" y="244" width="67.2043%" height="15" fill="rgb(232,154,31)" fg:x="173" fg:w="375"/><text x="31.2536%" y="254.50">std::function&lt;at::Tensor(at::Tensor)&gt;::~function (std_function.h:334)</text></g><g><title>std::_Function_base::~_Function_base (std_function.h:243) (375 samples, 67.20%)</title><rect x="31.0036%" y="260" width="67.2043%" height="15" fill="rgb(253,6,39)" fg:x="173" fg:w="375"/><text x="31.2536%" y="270.50">std::_Function_base::~_Function_base (std_function.h:243)</text></g><g><title>gBAOAB_integrator (main.cpp:217) (375 samples, 67.20%)</title><rect x="31.0036%" y="276" width="67.2043%" height="15" fill="rgb(234,183,24)" fg:x="173" fg:w="375"/><text x="31.2536%" y="286.50">gBAOAB_integrator (main.cpp:217)</text></g><g><title>gBAOAB_step_exact (main.cpp:199) (1 samples, 0.18%)</title><rect x="98.0287%" y="292" width="0.1792%" height="15" fill="rgb(252,84,40)" fg:x="547" fg:w="1"/><text x="98.2787%" y="302.50"></text></g><g><title>at::matmul (matmul.h:27) (1 samples, 0.18%)</title><rect x="98.0287%" y="308" width="0.1792%" height="15" fill="rgb(224,65,2)" fg:x="547" fg:w="1"/><text x="98.2787%" y="318.50"></text></g><g><title>at::_ops::inverse::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="324" width="0.1792%" height="15" fill="rgb(229,38,24)" fg:x="547" fg:w="1"/><text x="98.2787%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__inverse(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="340" width="0.1792%" height="15" fill="rgb(218,131,50)" fg:x="547" fg:w="1"/><text x="98.2787%" y="350.50"></text></g><g><title>at::native::inverse (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="356" width="0.1792%" height="15" fill="rgb(233,106,18)" fg:x="547" fg:w="1"/><text x="98.2787%" y="366.50"></text></g><g><title>at::_ops::linalg_inv::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="372" width="0.1792%" height="15" fill="rgb(220,216,11)" fg:x="547" fg:w="1"/><text x="98.2787%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linalg_inv(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="388" width="0.1792%" height="15" fill="rgb(251,100,45)" fg:x="547" fg:w="1"/><text x="98.2787%" y="398.50"></text></g><g><title>at::native::linalg_inv (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="404" width="0.1792%" height="15" fill="rgb(235,143,32)" fg:x="547" fg:w="1"/><text x="98.2787%" y="414.50"></text></g><g><title>at::_ops::linalg_inv_ex::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="420" width="0.1792%" height="15" fill="rgb(248,124,34)" fg:x="547" fg:w="1"/><text x="98.2787%" y="430.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex(c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="436" width="0.1792%" height="15" fill="rgb(225,221,4)" fg:x="547" fg:w="1"/><text x="98.2787%" y="446.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="452" width="0.1792%" height="15" fill="rgb(242,27,43)" fg:x="547" fg:w="1"/><text x="98.2787%" y="462.50"></text></g><g><title>at::_ops::linalg_inv_ex::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="468" width="0.1792%" height="15" fill="rgb(227,54,8)" fg:x="547" fg:w="1"/><text x="98.2787%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex(at::Tensor const&amp;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, bool)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="484" width="0.1792%" height="15" fill="rgb(253,139,49)" fg:x="547" fg:w="1"/><text x="98.2787%" y="494.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_inv_ex (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="500" width="0.1792%" height="15" fill="rgb(231,26,43)" fg:x="547" fg:w="1"/><text x="98.2787%" y="510.50"></text></g><g><title>at::native::structured_linalg_inv_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="516" width="0.1792%" height="15" fill="rgb(207,121,39)" fg:x="547" fg:w="1"/><text x="98.2787%" y="526.50"></text></g><g><title>at::_ops::linalg_solve_ex_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="532" width="0.1792%" height="15" fill="rgb(223,101,35)" fg:x="547" fg:w="1"/><text x="98.2787%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_out_linalg_solve_ex_out(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="548" width="0.1792%" height="15" fill="rgb(232,87,23)" fg:x="547" fg:w="1"/><text x="98.2787%" y="558.50"></text></g><g><title>at::native::linalg_solve_ex_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="564" width="0.1792%" height="15" fill="rgb(225,180,29)" fg:x="547" fg:w="1"/><text x="98.2787%" y="574.50"></text></g><g><title>at::_ops::_linalg_solve_ex_result::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="580" width="0.1792%" height="15" fill="rgb(225,25,17)" fg:x="547" fg:w="1"/><text x="98.2787%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;), &amp;at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result(at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; &gt;, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt; (at::Tensor const&amp;, at::Tensor const&amp;, bool, bool, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="596" width="0.1792%" height="15" fill="rgb(223,8,52)" fg:x="547" fg:w="1"/><text x="98.2787%" y="606.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU__linalg_solve_ex_out_result (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="612" width="0.1792%" height="15" fill="rgb(246,42,21)" fg:x="547" fg:w="1"/><text x="98.2787%" y="622.50"></text></g><g><title>at::native::structured__linalg_solve_ex_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="628" width="0.1792%" height="15" fill="rgb(205,64,43)" fg:x="547" fg:w="1"/><text x="98.2787%" y="638.50"></text></g><g><title>at::_ops::linalg_lu_solve_out::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="644" width="0.1792%" height="15" fill="rgb(221,160,13)" fg:x="547" fg:w="1"/><text x="98.2787%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_linalg_lu_solve_out_out (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="660" width="0.1792%" height="15" fill="rgb(239,58,35)" fg:x="547" fg:w="1"/><text x="98.2787%" y="670.50"></text></g><g><title>at::native::structured_linalg_lu_solve_out::impl (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="676" width="0.1792%" height="15" fill="rgb(251,26,40)" fg:x="547" fg:w="1"/><text x="98.2787%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::lu_solve_kernel (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="692" width="0.1792%" height="15" fill="rgb(247,0,4)" fg:x="547" fg:w="1"/><text x="98.2787%" y="702.50"></text></g><g><title>at::_ops::gt_Scalar::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="708" width="0.1792%" height="15" fill="rgb(218,130,10)" fg:x="547" fg:w="1"/><text x="98.2787%" y="718.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_gt_Scalar(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="724" width="0.1792%" height="15" fill="rgb(239,32,7)" fg:x="547" fg:w="1"/><text x="98.2787%" y="734.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_gt_Scalar (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="740" width="0.1792%" height="15" fill="rgb(210,192,24)" fg:x="547" fg:w="1"/><text x="98.2787%" y="750.50"></text></g><g><title>at::meta::structured_gt_Scalar::meta (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="756" width="0.1792%" height="15" fill="rgb(226,212,17)" fg:x="547" fg:w="1"/><text x="98.2787%" y="766.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_except_last_argument_comparison_op (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="772" width="0.1792%" height="15" fill="rgb(219,201,28)" fg:x="547" fg:w="1"/><text x="98.2787%" y="782.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="788" width="0.1792%" height="15" fill="rgb(235,207,41)" fg:x="547" fg:w="1"/><text x="98.2787%" y="798.50"></text></g><g><title>at::TensorIteratorBase::compute_types (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="804" width="0.1792%" height="15" fill="rgb(241,95,54)" fg:x="547" fg:w="1"/><text x="98.2787%" y="814.50"></text></g><g><title>at::_ops::to_dtype::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="820" width="0.1792%" height="15" fill="rgb(248,12,23)" fg:x="547" fg:w="1"/><text x="98.2787%" y="830.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_to(at::Tensor const&amp;, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="836" width="0.1792%" height="15" fill="rgb(228,173,4)" fg:x="547" fg:w="1"/><text x="98.2787%" y="846.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="852" width="0.1792%" height="15" fill="rgb(254,99,5)" fg:x="547" fg:w="1"/><text x="98.2787%" y="862.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="868" width="0.1792%" height="15" fill="rgb(212,184,17)" fg:x="547" fg:w="1"/><text x="98.2787%" y="878.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="884" width="0.1792%" height="15" fill="rgb(252,174,1)" fg:x="547" fg:w="1"/><text x="98.2787%" y="894.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="900" width="0.1792%" height="15" fill="rgb(241,118,51)" fg:x="547" fg:w="1"/><text x="98.2787%" y="910.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="916" width="0.1792%" height="15" fill="rgb(227,94,47)" fg:x="547" fg:w="1"/><text x="98.2787%" y="926.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="932" width="0.1792%" height="15" fill="rgb(229,104,2)" fg:x="547" fg:w="1"/><text x="98.2787%" y="942.50"></text></g><g><title>at::empty_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="948" width="0.1792%" height="15" fill="rgb(219,28,31)" fg:x="547" fg:w="1"/><text x="98.2787%" y="958.50"></text></g><g><title>at::_ops::empty_strided::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="964" width="0.1792%" height="15" fill="rgb(233,109,36)" fg:x="547" fg:w="1"/><text x="98.2787%" y="974.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="980" width="0.1792%" height="15" fill="rgb(246,88,11)" fg:x="547" fg:w="1"/><text x="98.2787%" y="990.50"></text></g><g><title>at::_ops::empty_strided::redispatch (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="996" width="0.1792%" height="15" fill="rgb(209,212,17)" fg:x="547" fg:w="1"/><text x="98.2787%" y="1006.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="1012" width="0.1792%" height="15" fill="rgb(243,59,29)" fg:x="547" fg:w="1"/><text x="98.2787%" y="1022.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__empty_strided (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.0287%" y="1028" width="0.1792%" height="15" fill="rgb(244,205,48)" fg:x="547" fg:w="1"/><text x="98.2787%" y="1038.50"></text></g><g><title>&lt;module&gt; (profile_test.py:5) (1 samples, 0.18%)</title><rect x="98.2079%" y="84" width="0.1792%" height="15" fill="rgb(227,30,6)" fg:x="548" fg:w="1"/><text x="98.4579%" y="94.50"></text></g><g><title>load (numpy/lib/npyio.py:456) (1 samples, 0.18%)</title><rect x="98.2079%" y="100" width="0.1792%" height="15" fill="rgb(220,205,48)" fg:x="548" fg:w="1"/><text x="98.4579%" y="110.50"></text></g><g><title>read_array (numpy/lib/format.py:822) (1 samples, 0.18%)</title><rect x="98.2079%" y="116" width="0.1792%" height="15" fill="rgb(250,94,14)" fg:x="548" fg:w="1"/><text x="98.4579%" y="126.50"></text></g><g><title>array_fromfile (numpy/core/_multiarray_umath.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="98.2079%" y="132" width="0.1792%" height="15" fill="rgb(216,119,42)" fg:x="548" fg:w="1"/><text x="98.4579%" y="142.50"></text></g><g><title>PyArray_FromFile (numpy/core/_multiarray_umath.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="98.2079%" y="148" width="0.1792%" height="15" fill="rgb(232,155,0)" fg:x="548" fg:w="1"/><text x="98.4579%" y="158.50"></text></g><g><title>fread (libc.so.6) (1 samples, 0.18%)</title><rect x="98.2079%" y="164" width="0.1792%" height="15" fill="rgb(212,24,32)" fg:x="548" fg:w="1"/><text x="98.4579%" y="174.50"></text></g><g><title>0x7f34fee80395 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.2079%" y="180" width="0.1792%" height="15" fill="rgb(216,69,20)" fg:x="548" fg:w="1"/><text x="98.4579%" y="190.50"></text></g><g><title>read (libc.so.6) (1 samples, 0.18%)</title><rect x="98.2079%" y="196" width="0.1792%" height="15" fill="rgb(229,73,31)" fg:x="548" fg:w="1"/><text x="98.4579%" y="206.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="98.3871%" y="212" width="0.1792%" height="15" fill="rgb(224,219,20)" fg:x="549" fg:w="1"/><text x="98.6371%" y="222.50"></text></g><g><title>0x7f34fee97ea0 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.3871%" y="228" width="0.1792%" height="15" fill="rgb(215,146,41)" fg:x="549" fg:w="1"/><text x="98.6371%" y="238.50"></text></g><g><title>0x7f34fee968f2 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.3871%" y="244" width="0.1792%" height="15" fill="rgb(244,71,31)" fg:x="549" fg:w="1"/><text x="98.6371%" y="254.50"></text></g><g><title>0x7f34fee97742 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.5663%" y="276" width="0.1792%" height="15" fill="rgb(224,24,11)" fg:x="550" fg:w="1"/><text x="98.8163%" y="286.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SelectBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="98.5663%" y="212" width="0.3584%" height="15" fill="rgb(229,76,15)" fg:x="550" fg:w="2"/><text x="98.8163%" y="222.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="98.5663%" y="228" width="0.3584%" height="15" fill="rgb(209,93,2)" fg:x="550" fg:w="2"/><text x="98.8163%" y="238.50"></text></g><g><title>torch::autograd::generated::SelectBackward0::~SelectBackward0 (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="98.5663%" y="244" width="0.3584%" height="15" fill="rgb(216,200,50)" fg:x="550" fg:w="2"/><text x="98.8163%" y="254.50"></text></g><g><title>free (libc.so.6) (2 samples, 0.36%)</title><rect x="98.5663%" y="260" width="0.3584%" height="15" fill="rgb(211,67,34)" fg:x="550" fg:w="2"/><text x="98.8163%" y="270.50"></text></g><g><title>0x7f34fee979ad (libc.so.6) (1 samples, 0.18%)</title><rect x="98.7455%" y="276" width="0.1792%" height="15" fill="rgb(225,87,47)" fg:x="551" fg:w="1"/><text x="98.9955%" y="286.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SubBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.9247%" y="212" width="0.1792%" height="15" fill="rgb(217,185,16)" fg:x="552" fg:w="1"/><text x="99.1747%" y="222.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.9247%" y="228" width="0.1792%" height="15" fill="rgb(205,0,0)" fg:x="552" fg:w="1"/><text x="99.1747%" y="238.50"></text></g><g><title>torch::autograd::generated::SubBackward0::~SubBackward0 (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="98.9247%" y="244" width="0.1792%" height="15" fill="rgb(207,116,45)" fg:x="552" fg:w="1"/><text x="99.1747%" y="254.50"></text></g><g><title>free (libc.so.6) (1 samples, 0.18%)</title><rect x="98.9247%" y="260" width="0.1792%" height="15" fill="rgb(221,156,26)" fg:x="552" fg:w="1"/><text x="99.1747%" y="270.50"></text></g><g><title>0x7f34fee97ea0 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.9247%" y="276" width="0.1792%" height="15" fill="rgb(213,140,4)" fg:x="552" fg:w="1"/><text x="99.1747%" y="286.50"></text></g><g><title>0x7f34fee9691b (libc.so.6) (1 samples, 0.18%)</title><rect x="98.9247%" y="292" width="0.1792%" height="15" fill="rgb(231,224,15)" fg:x="552" fg:w="1"/><text x="99.1747%" y="302.50"></text></g><g><title>0x7f34fee96749 (libc.so.6) (1 samples, 0.18%)</title><rect x="98.9247%" y="308" width="0.1792%" height="15" fill="rgb(244,76,20)" fg:x="552" fg:w="1"/><text x="99.1747%" y="318.50"></text></g><g><title>0x7f34fee1ed90 (libc.so.6) (557 samples, 99.82%)</title><rect x="0.0000%" y="68" width="99.8208%" height="15" fill="rgb(238,117,7)" fg:x="0" fg:w="557"/><text x="0.2500%" y="78.50">0x7f34fee1ed90 (libc.so.6)</text></g><g><title>THPVariable_subclass_dealloc (libtorch_python.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="84" width="1.4337%" height="15" fill="rgb(235,1,10)" fg:x="549" fg:w="8"/><text x="98.6371%" y="94.50"></text></g><g><title>THPVariable_clear (libtorch_python.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="100" width="1.4337%" height="15" fill="rgb(216,165,6)" fg:x="549" fg:w="8"/><text x="98.6371%" y="110.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="116" width="1.4337%" height="15" fill="rgb(246,91,35)" fg:x="549" fg:w="8"/><text x="98.6371%" y="126.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="132" width="1.4337%" height="15" fill="rgb(228,96,24)" fg:x="549" fg:w="8"/><text x="98.6371%" y="142.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="148" width="1.4337%" height="15" fill="rgb(254,217,53)" fg:x="549" fg:w="8"/><text x="98.6371%" y="158.50"></text></g><g><title>torch::autograd::Node::~Node (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="164" width="1.4337%" height="15" fill="rgb(209,60,0)" fg:x="549" fg:w="8"/><text x="98.6371%" y="174.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SqueezeBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="180" width="1.4337%" height="15" fill="rgb(250,93,26)" fg:x="549" fg:w="8"/><text x="98.6371%" y="190.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (8 samples, 1.43%)</title><rect x="98.3871%" y="196" width="1.4337%" height="15" fill="rgb(211,9,40)" fg:x="549" fg:w="8"/><text x="98.6371%" y="206.50"></text></g><g><title>torch::autograd::gatherFunctions (libtorch_cpu.so) (4 samples, 0.72%)</title><rect x="99.1039%" y="212" width="0.7168%" height="15" fill="rgb(242,57,20)" fg:x="553" fg:w="4"/><text x="99.3539%" y="222.50"></text></g><g><title>torch::autograd::CopySlices::release_variables (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="99.4624%" y="228" width="0.3584%" height="15" fill="rgb(248,85,48)" fg:x="555" fg:w="2"/><text x="99.7124%" y="238.50"></text></g><g><title>torch::autograd::Node::~Node (libtorch_cpu.so) (2 samples, 0.36%)</title><rect x="99.4624%" y="244" width="0.3584%" height="15" fill="rgb(212,117,2)" fg:x="555" fg:w="2"/><text x="99.7124%" y="254.50"></text></g><g><title>std::_Sp_counted_deleter&lt;torch::autograd::generated::SelectBackward0*, void (*)(torch::autograd::Node*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="99.6416%" y="260" width="0.1792%" height="15" fill="rgb(243,19,3)" fg:x="556" fg:w="1"/><text x="99.8916%" y="270.50"></text></g><g><title>torch::autograd::deleteNode (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="99.6416%" y="276" width="0.1792%" height="15" fill="rgb(232,217,24)" fg:x="556" fg:w="1"/><text x="99.8916%" y="286.50"></text></g><g><title>torch::autograd::gatherFunctions (libtorch_cpu.so) (1 samples, 0.18%)</title><rect x="99.6416%" y="292" width="0.1792%" height="15" fill="rgb(224,175,40)" fg:x="556" fg:w="1"/><text x="99.8916%" y="302.50"></text></g><g><title>all (558 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(212,162,32)" fg:x="0" fg:w="558"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (profile_test.py:1) (1 samples, 0.18%)</title><rect x="99.8208%" y="68" width="0.1792%" height="15" fill="rgb(215,9,4)" fg:x="557" fg:w="1"/><text x="100.0708%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="99.8208%" y="84" width="0.1792%" height="15" fill="rgb(242,42,7)" fg:x="557" fg:w="1"/><text x="100.0708%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="99.8208%" y="100" width="0.1792%" height="15" fill="rgb(242,184,45)" fg:x="557" fg:w="1"/><text x="100.0708%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (1 samples, 0.18%)</title><rect x="99.8208%" y="116" width="0.1792%" height="15" fill="rgb(228,111,51)" fg:x="557" fg:w="1"/><text x="100.0708%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (1 samples, 0.18%)</title><rect x="99.8208%" y="132" width="0.1792%" height="15" fill="rgb(236,147,17)" fg:x="557" fg:w="1"/><text x="100.0708%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="99.8208%" y="148" width="0.1792%" height="15" fill="rgb(210,75,22)" fg:x="557" fg:w="1"/><text x="100.0708%" y="158.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:239) (1 samples, 0.18%)</title><rect x="99.8208%" y="164" width="0.1792%" height="15" fill="rgb(217,159,45)" fg:x="557" fg:w="1"/><text x="100.0708%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (1 samples, 0.18%)</title><rect x="99.8208%" y="180" width="0.1792%" height="15" fill="rgb(245,165,53)" fg:x="557" fg:w="1"/><text x="100.0708%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.18%)</title><rect x="99.8208%" y="196" width="0.1792%" height="15" fill="rgb(251,190,50)" fg:x="557" fg:w="1"/><text x="100.0708%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (1 samples, 0.18%)</title><rect x="99.8208%" y="212" width="0.1792%" height="15" fill="rgb(208,203,29)" fg:x="557" fg:w="1"/><text x="100.0708%" y="222.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:571) (1 samples, 0.18%)</title><rect x="99.8208%" y="228" width="0.1792%" height="15" fill="rgb(207,209,35)" fg:x="557" fg:w="1"/><text x="100.0708%" y="238.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1176) (1 samples, 0.18%)</title><rect x="99.8208%" y="244" width="0.1792%" height="15" fill="rgb(230,144,49)" fg:x="557" fg:w="1"/><text x="100.0708%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.18%)</title><rect x="99.8208%" y="260" width="0.1792%" height="15" fill="rgb(229,31,6)" fg:x="557" fg:w="1"/><text x="100.0708%" y="270.50"></text></g><g><title>0x7f345ab91393 (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="276" width="0.1792%" height="15" fill="rgb(251,129,24)" fg:x="557" fg:w="1"/><text x="100.0708%" y="286.50"></text></g><g><title>0x7f345d002246 (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="292" width="0.1792%" height="15" fill="rgb(235,105,15)" fg:x="557" fg:w="1"/><text x="100.0708%" y="302.50"></text></g><g><title>0x7f345ac17e52 (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="308" width="0.1792%" height="15" fill="rgb(216,52,43)" fg:x="557" fg:w="1"/><text x="100.0708%" y="318.50"></text></g><g><title>0x7f345c0eab6a (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="324" width="0.1792%" height="15" fill="rgb(238,144,41)" fg:x="557" fg:w="1"/><text x="100.0708%" y="334.50"></text></g><g><title>0x7f345c0ea8bc (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="340" width="0.1792%" height="15" fill="rgb(243,63,9)" fg:x="557" fg:w="1"/><text x="100.0708%" y="350.50"></text></g><g><title>0x7f345c0f1b63 (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="356" width="0.1792%" height="15" fill="rgb(246,208,1)" fg:x="557" fg:w="1"/><text x="100.0708%" y="366.50"></text></g><g><title>0x7f345c11e475 (?) (1 samples, 0.18%)</title><rect x="99.8208%" y="372" width="0.1792%" height="15" fill="rgb(233,182,18)" fg:x="557" fg:w="1"/><text x="100.0708%" y="382.50"></text></g></svg></svg>